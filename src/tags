!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
A	src/headers/tomcrypt_cipher.h	/^   unsigned long A[32], B[32];$/;"	m	struct:xtea_key
ACC	src/headers/tomcrypt_mac.h	/^                 ACC[MAXBLOCKSIZE],$/;"	m	struct:__anon51
ADDKEY	src/prngs/sober128.c	169;"	d	file:
ANSI_RNG	src/prngs/rng_get_bytes.c	55;"	d	file:
ARGTYPE	libtomcrypt/headers/tomcrypt_cfg.h	48;"	d
ARGTYPE	src/headers/tomcrypt_cfg.h	48;"	d
ARM	src/prngs/rng_get_bytes.c	94;"	d	file:
B	src/headers/tomcrypt_cipher.h	/^   unsigned long A[32], B[32];$/;"	m	struct:xtea_key
B	src/headers/tomcrypt_pk.h	/^   char *B;$/;"	m	struct:__anon39
B	src/prngs/sober128.c	43;"	d	file:
BLOCKSIZE	src/ciphers/anubis.c	41;"	d	file:
BLOCKSIZE	src/ciphers/khazad.c	37;"	d	file:
BLOCKSIZEB	src/ciphers/anubis.c	42;"	d	file:
BLOCKSIZEB	src/ciphers/khazad.c	38;"	d	file:
BNCORE_C	libtommath/tommath_class.h	129;"	d
BN_ERROR_C	libtommath/tommath_class.h	11;"	d
BN_FAST_MP_INVMOD_C	libtommath/tommath_class.h	12;"	d
BN_FAST_MP_INVMOD_C	libtommath/tommath_class.h	437;"	d
BN_FAST_MP_INVMOD_C	libtommath/tommath_superclass.h	60;"	d
BN_FAST_MP_MONTGOMERY_REDUCE_C	libtommath/tommath_class.h	13;"	d
BN_FAST_MP_MONTGOMERY_REDUCE_C	libtommath/tommath_class.h	345;"	d
BN_FAST_MP_MONTGOMERY_REDUCE_C	libtommath/tommath_class.h	543;"	d
BN_FAST_S_MP_MUL_DIGS_C	libtommath/tommath_class.h	14;"	d
BN_FAST_S_MP_MUL_DIGS_C	libtommath/tommath_class.h	557;"	d
BN_FAST_S_MP_MUL_DIGS_C	libtommath/tommath_class.h	958;"	d
BN_FAST_S_MP_MUL_HIGH_DIGS_C	libtommath/tommath_class.h	15;"	d
BN_FAST_S_MP_MUL_HIGH_DIGS_C	libtommath/tommath_class.h	713;"	d
BN_FAST_S_MP_MUL_HIGH_DIGS_C	libtommath/tommath_class.h	966;"	d
BN_FAST_S_MP_MUL_HIGH_DIGS_C	libtommath/tommath_superclass.h	59;"	d
BN_FAST_S_MP_SQR_C	libtommath/tommath_class.h	16;"	d
BN_FAST_S_MP_SQR_C	libtommath/tommath_class.h	801;"	d
BN_H_	libtommath/tommath.h	16;"	d
BN_MP_2EXPT_C	libtommath/tommath_class.h	17;"	d
BN_MP_2EXPT_C	libtommath/tommath_class.h	535;"	d
BN_MP_2EXPT_C	libtommath/tommath_class.h	751;"	d
BN_MP_2EXPT_C	libtommath/tommath_class.h	758;"	d
BN_MP_2EXPT_C	libtommath/tommath_class.h	773;"	d
BN_MP_ABS_C	libtommath/tommath_class.h	18;"	d
BN_MP_ABS_C	libtommath/tommath_class.h	250;"	d
BN_MP_ABS_C	libtommath/tommath_class.h	330;"	d
BN_MP_ABS_C	libtommath/tommath_class.h	389;"	d
BN_MP_ADDMOD_C	libtommath/tommath_class.h	21;"	d
BN_MP_ADDMOD_C	libtommath/tommath_superclass.h	24;"	d
BN_MP_ADD_C	libtommath/tommath_class.h	148;"	d
BN_MP_ADD_C	libtommath/tommath_class.h	199;"	d
BN_MP_ADD_C	libtommath/tommath_class.h	19;"	d
BN_MP_ADD_C	libtommath/tommath_class.h	254;"	d
BN_MP_ADD_C	libtommath/tommath_class.h	450;"	d
BN_MP_ADD_C	libtommath/tommath_class.h	485;"	d
BN_MP_ADD_C	libtommath/tommath_class.h	497;"	d
BN_MP_ADD_C	libtommath/tommath_class.h	519;"	d
BN_MP_ADD_C	libtommath/tommath_class.h	720;"	d
BN_MP_ADD_C	libtommath/tommath_class.h	819;"	d
BN_MP_ADD_C	libtommath/tommath_class.h	873;"	d
BN_MP_ADD_C	libtommath/tommath_class.h	890;"	d
BN_MP_ADD_D_C	libtommath/tommath_class.h	20;"	d
BN_MP_ADD_D_C	libtommath/tommath_class.h	378;"	d
BN_MP_ADD_D_C	libtommath/tommath_class.h	652;"	d
BN_MP_ADD_D_C	libtommath/tommath_class.h	666;"	d
BN_MP_ADD_D_C	libtommath/tommath_class.h	683;"	d
BN_MP_ADD_D_C	libtommath/tommath_class.h	692;"	d
BN_MP_ADD_D_C	libtommath/tommath_class.h	834;"	d
BN_MP_AND_C	libtommath/tommath_class.h	22;"	d
BN_MP_CLAMP_C	libtommath/tommath_class.h	156;"	d
BN_MP_CLAMP_C	libtommath/tommath_class.h	163;"	d
BN_MP_CLAMP_C	libtommath/tommath_class.h	168;"	d
BN_MP_CLAMP_C	libtommath/tommath_class.h	173;"	d
BN_MP_CLAMP_C	libtommath/tommath_class.h	194;"	d
BN_MP_CLAMP_C	libtommath/tommath_class.h	206;"	d
BN_MP_CLAMP_C	libtommath/tommath_class.h	23;"	d
BN_MP_CLAMP_C	libtommath/tommath_class.h	264;"	d
BN_MP_CLAMP_C	libtommath/tommath_class.h	270;"	d
BN_MP_CLAMP_C	libtommath/tommath_class.h	280;"	d
BN_MP_CLAMP_C	libtommath/tommath_class.h	286;"	d
BN_MP_CLAMP_C	libtommath/tommath_class.h	297;"	d
BN_MP_CLAMP_C	libtommath/tommath_class.h	307;"	d
BN_MP_CLAMP_C	libtommath/tommath_class.h	483;"	d
BN_MP_CLAMP_C	libtommath/tommath_class.h	492;"	d
BN_MP_CLAMP_C	libtommath/tommath_class.h	526;"	d
BN_MP_CLAMP_C	libtommath/tommath_class.h	545;"	d
BN_MP_CLAMP_C	libtommath/tommath_class.h	570;"	d
BN_MP_CLAMP_C	libtommath/tommath_class.h	575;"	d
BN_MP_CLAMP_C	libtommath/tommath_class.h	607;"	d
BN_MP_CLAMP_C	libtommath/tommath_class.h	704;"	d
BN_MP_CLAMP_C	libtommath/tommath_class.h	788;"	d
BN_MP_CLAMP_C	libtommath/tommath_class.h	835;"	d
BN_MP_CLAMP_C	libtommath/tommath_class.h	922;"	d
BN_MP_CLAMP_C	libtommath/tommath_class.h	938;"	d
BN_MP_CLAMP_C	libtommath/tommath_class.h	960;"	d
BN_MP_CLAMP_C	libtommath/tommath_class.h	968;"	d
BN_MP_CLAMP_C	libtommath/tommath_class.h	975;"	d
BN_MP_CLAMP_C	libtommath/tommath_class.h	982;"	d
BN_MP_CLEAR_C	libtommath/tommath_class.h	200;"	d
BN_MP_CLEAR_C	libtommath/tommath_class.h	208;"	d
BN_MP_CLEAR_C	libtommath/tommath_class.h	218;"	d
BN_MP_CLEAR_C	libtommath/tommath_class.h	24;"	d
BN_MP_CLEAR_C	libtommath/tommath_class.h	265;"	d
BN_MP_CLEAR_C	libtommath/tommath_class.h	278;"	d
BN_MP_CLEAR_C	libtommath/tommath_class.h	288;"	d
BN_MP_CLEAR_C	libtommath/tommath_class.h	299;"	d
BN_MP_CLEAR_C	libtommath/tommath_class.h	322;"	d
BN_MP_CLEAR_C	libtommath/tommath_class.h	329;"	d
BN_MP_CLEAR_C	libtommath/tommath_class.h	343;"	d
BN_MP_CLEAR_C	libtommath/tommath_class.h	398;"	d
BN_MP_CLEAR_C	libtommath/tommath_class.h	417;"	d
BN_MP_CLEAR_C	libtommath/tommath_class.h	467;"	d
BN_MP_CLEAR_C	libtommath/tommath_class.h	477;"	d
BN_MP_CLEAR_C	libtommath/tommath_class.h	487;"	d
BN_MP_CLEAR_C	libtommath/tommath_class.h	498;"	d
BN_MP_CLEAR_C	libtommath/tommath_class.h	518;"	d
BN_MP_CLEAR_C	libtommath/tommath_class.h	581;"	d
BN_MP_CLEAR_C	libtommath/tommath_class.h	597;"	d
BN_MP_CLEAR_C	libtommath/tommath_class.h	609;"	d
BN_MP_CLEAR_C	libtommath/tommath_class.h	617;"	d
BN_MP_CLEAR_C	libtommath/tommath_class.h	630;"	d
BN_MP_CLEAR_C	libtommath/tommath_class.h	642;"	d
BN_MP_CLEAR_C	libtommath/tommath_class.h	654;"	d
BN_MP_CLEAR_C	libtommath/tommath_class.h	674;"	d
BN_MP_CLEAR_C	libtommath/tommath_class.h	723;"	d
BN_MP_CLEAR_C	libtommath/tommath_class.h	734;"	d
BN_MP_CLEAR_C	libtommath/tommath_class.h	745;"	d
BN_MP_CLEAR_C	libtommath/tommath_class.h	752;"	d
BN_MP_CLEAR_C	libtommath/tommath_class.h	761;"	d
BN_MP_CLEAR_C	libtommath/tommath_class.h	808;"	d
BN_MP_CLEAR_C	libtommath/tommath_class.h	823;"	d
BN_MP_CLEAR_C	libtommath/tommath_class.h	841;"	d
BN_MP_CLEAR_C	libtommath/tommath_class.h	858;"	d
BN_MP_CLEAR_C	libtommath/tommath_class.h	904;"	d
BN_MP_CLEAR_C	libtommath/tommath_class.h	912;"	d
BN_MP_CLEAR_C	libtommath/tommath_class.h	924;"	d
BN_MP_CLEAR_C	libtommath/tommath_class.h	944;"	d
BN_MP_CLEAR_C	libtommath/tommath_class.h	962;"	d
BN_MP_CLEAR_C	libtommath/tommath_class.h	970;"	d
BN_MP_CLEAR_C	libtommath/tommath_class.h	977;"	d
BN_MP_CLEAR_MULTI_C	libtommath/tommath_class.h	150;"	d
BN_MP_CLEAR_MULTI_C	libtommath/tommath_class.h	257;"	d
BN_MP_CLEAR_MULTI_C	libtommath/tommath_class.h	25;"	d
BN_MP_CLEAR_MULTI_C	libtommath/tommath_class.h	331;"	d
BN_MP_CLEAR_MULTI_C	libtommath/tommath_class.h	371;"	d
BN_MP_CLEAR_MULTI_C	libtommath/tommath_class.h	456;"	d
BN_MP_CLEAR_MULTI_C	libtommath/tommath_class.h	507;"	d
BN_MP_CLEAR_MULTI_C	libtommath/tommath_class.h	880;"	d
BN_MP_CLEAR_MULTI_C	libtommath/tommath_class.h	897;"	d
BN_MP_CLEAR_MULTI_C	libtommath/tommath_superclass.h	28;"	d
BN_MP_CMP_C	libtommath/tommath_class.h	145;"	d
BN_MP_CMP_C	libtommath/tommath_class.h	252;"	d
BN_MP_CMP_C	libtommath/tommath_class.h	26;"	d
BN_MP_CMP_C	libtommath/tommath_class.h	452;"	d
BN_MP_CMP_C	libtommath/tommath_class.h	594;"	d
BN_MP_CMP_C	libtommath/tommath_class.h	616;"	d
BN_MP_CMP_C	libtommath/tommath_class.h	640;"	d
BN_MP_CMP_C	libtommath/tommath_class.h	721;"	d
BN_MP_CMP_D_C	libtommath/tommath_class.h	147;"	d
BN_MP_CMP_D_C	libtommath/tommath_class.h	27;"	d
BN_MP_CMP_D_C	libtommath/tommath_class.h	379;"	d
BN_MP_CMP_D_C	libtommath/tommath_class.h	453;"	d
BN_MP_CMP_D_C	libtommath/tommath_class.h	471;"	d
BN_MP_CMP_D_C	libtommath/tommath_class.h	613;"	d
BN_MP_CMP_D_C	libtommath/tommath_class.h	625;"	d
BN_MP_CMP_D_C	libtommath/tommath_class.h	634;"	d
BN_MP_CMP_D_C	libtommath/tommath_class.h	646;"	d
BN_MP_CMP_D_C	libtommath/tommath_class.h	717;"	d
BN_MP_CMP_MAG_C	libtommath/tommath_class.h	157;"	d
BN_MP_CMP_MAG_C	libtommath/tommath_class.h	187;"	d
BN_MP_CMP_MAG_C	libtommath/tommath_class.h	222;"	d
BN_MP_CMP_MAG_C	libtommath/tommath_class.h	244;"	d
BN_MP_CMP_MAG_C	libtommath/tommath_class.h	28;"	d
BN_MP_CMP_MAG_C	libtommath/tommath_class.h	308;"	d
BN_MP_CMP_MAG_C	libtommath/tommath_class.h	394;"	d
BN_MP_CMP_MAG_C	libtommath/tommath_class.h	454;"	d
BN_MP_CMP_MAG_C	libtommath/tommath_class.h	466;"	d
BN_MP_CMP_MAG_C	libtommath/tommath_class.h	504;"	d
BN_MP_CMP_MAG_C	libtommath/tommath_class.h	538;"	d
BN_MP_CMP_MAG_C	libtommath/tommath_class.h	547;"	d
BN_MP_CMP_MAG_C	libtommath/tommath_class.h	732;"	d
BN_MP_CMP_MAG_C	libtommath/tommath_class.h	743;"	d
BN_MP_CMP_MAG_C	libtommath/tommath_class.h	821;"	d
BN_MP_CMP_MAG_C	libtommath/tommath_class.h	828;"	d
BN_MP_CNT_LSB_C	libtommath/tommath_class.h	29;"	d
BN_MP_CNT_LSB_C	libtommath/tommath_class.h	392;"	d
BN_MP_CNT_LSB_C	libtommath/tommath_class.h	474;"	d
BN_MP_CNT_LSB_C	libtommath/tommath_class.h	637;"	d
BN_MP_COPY_C	libtommath/tommath_class.h	139;"	d
BN_MP_COPY_C	libtommath/tommath_class.h	182;"	d
BN_MP_COPY_C	libtommath/tommath_class.h	245;"	d
BN_MP_COPY_C	libtommath/tommath_class.h	274;"	d
BN_MP_COPY_C	libtommath/tommath_class.h	293;"	d
BN_MP_COPY_C	libtommath/tommath_class.h	30;"	d
BN_MP_COPY_C	libtommath/tommath_class.h	355;"	d
BN_MP_COPY_C	libtommath/tommath_class.h	364;"	d
BN_MP_COPY_C	libtommath/tommath_class.h	411;"	d
BN_MP_COPY_C	libtommath/tommath_class.h	445;"	d
BN_MP_COPY_C	libtommath/tommath_class.h	525;"	d
BN_MP_COPY_C	libtommath/tommath_class.h	567;"	d
BN_MP_COPY_C	libtommath/tommath_class.h	588;"	d
BN_MP_COPY_C	libtommath/tommath_class.h	601;"	d
BN_MP_COPY_C	libtommath/tommath_class.h	869;"	d
BN_MP_COPY_C	libtommath/tommath_class.h	886;"	d
BN_MP_COPY_C	libtommath/tommath_class.h	950;"	d
BN_MP_COUNT_BITS_C	libtommath/tommath_class.h	249;"	d
BN_MP_COUNT_BITS_C	libtommath/tommath_class.h	31;"	d
BN_MP_COUNT_BITS_C	libtommath/tommath_class.h	341;"	d
BN_MP_COUNT_BITS_C	libtommath/tommath_class.h	534;"	d
BN_MP_COUNT_BITS_C	libtommath/tommath_class.h	670;"	d
BN_MP_COUNT_BITS_C	libtommath/tommath_class.h	728;"	d
BN_MP_COUNT_BITS_C	libtommath/tommath_class.h	739;"	d
BN_MP_COUNT_BITS_C	libtommath/tommath_class.h	750;"	d
BN_MP_COUNT_BITS_C	libtommath/tommath_class.h	759;"	d
BN_MP_COUNT_BITS_C	libtommath/tommath_class.h	766;"	d
BN_MP_COUNT_BITS_C	libtommath/tommath_class.h	917;"	d
BN_MP_COUNT_BITS_C	libtommath/tommath_class.h	942;"	d
BN_MP_DIV_2D_C	libtommath/tommath_class.h	255;"	d
BN_MP_DIV_2D_C	libtommath/tommath_class.h	294;"	d
BN_MP_DIV_2D_C	libtommath/tommath_class.h	34;"	d
BN_MP_DIV_2D_C	libtommath/tommath_class.h	393;"	d
BN_MP_DIV_2D_C	libtommath/tommath_class.h	475;"	d
BN_MP_DIV_2D_C	libtommath/tommath_class.h	638;"	d
BN_MP_DIV_2D_C	libtommath/tommath_class.h	729;"	d
BN_MP_DIV_2D_C	libtommath/tommath_class.h	740;"	d
BN_MP_DIV_2D_C	libtommath/tommath_class.h	857;"	d
BN_MP_DIV_2_C	libtommath/tommath_class.h	142;"	d
BN_MP_DIV_2_C	libtommath/tommath_class.h	33;"	d
BN_MP_DIV_2_C	libtommath/tommath_class.h	448;"	d
BN_MP_DIV_2_C	libtommath/tommath_class.h	664;"	d
BN_MP_DIV_2_C	libtommath/tommath_class.h	820;"	d
BN_MP_DIV_2_C	libtommath/tommath_class.h	875;"	d
BN_MP_DIV_2_C	libtommath/tommath_class.h	892;"	d
BN_MP_DIV_3_C	libtommath/tommath_class.h	295;"	d
BN_MP_DIV_3_C	libtommath/tommath_class.h	35;"	d
BN_MP_DIV_3_C	libtommath/tommath_class.h	878;"	d
BN_MP_DIV_3_C	libtommath/tommath_class.h	895;"	d
BN_MP_DIV_3_C	libtommath/tommath_superclass.h	57;"	d
BN_MP_DIV_C	libtommath/tommath_class.h	32;"	d
BN_MP_DIV_C	libtommath/tommath_class.h	366;"	d
BN_MP_DIV_C	libtommath/tommath_class.h	505;"	d
BN_MP_DIV_C	libtommath/tommath_class.h	517;"	d
BN_MP_DIV_C	libtommath/tommath_class.h	593;"	d
BN_MP_DIV_C	libtommath/tommath_class.h	774;"	d
BN_MP_DIV_C	libtommath/tommath_class.h	818;"	d
BN_MP_DIV_D_C	libtommath/tommath_class.h	36;"	d
BN_MP_DIV_D_C	libtommath/tommath_class.h	530;"	d
BN_MP_DIV_D_C	libtommath/tommath_class.h	673;"	d
BN_MP_DIV_D_C	libtommath/tommath_class.h	903;"	d
BN_MP_DIV_D_C	libtommath/tommath_class.h	911;"	d
BN_MP_DIV_SMALL	libtommath/tommath_superclass.h	37;"	d
BN_MP_DR_IS_MODULUS_C	libtommath/tommath_class.h	334;"	d
BN_MP_DR_IS_MODULUS_C	libtommath/tommath_class.h	37;"	d
BN_MP_DR_IS_MODULUS_C	libtommath/tommath_superclass.h	50;"	d
BN_MP_DR_REDUCE_C	libtommath/tommath_class.h	348;"	d
BN_MP_DR_REDUCE_C	libtommath/tommath_class.h	38;"	d
BN_MP_DR_REDUCE_C	libtommath/tommath_superclass.h	52;"	d
BN_MP_DR_SETUP_C	libtommath/tommath_class.h	347;"	d
BN_MP_DR_SETUP_C	libtommath/tommath_class.h	39;"	d
BN_MP_DR_SETUP_C	libtommath/tommath_superclass.h	51;"	d
BN_MP_ERROR_TO_STRING_C	libtommath/tommath_class.h	133;"	d
BN_MP_ERR_C	libtommath/tommath_class.h	415;"	d
BN_MP_EXCH_C	libtommath/tommath_class.h	149;"	d
BN_MP_EXCH_C	libtommath/tommath_class.h	207;"	d
BN_MP_EXCH_C	libtommath/tommath_class.h	256;"	d
BN_MP_EXCH_C	libtommath/tommath_class.h	281;"	d
BN_MP_EXCH_C	libtommath/tommath_class.h	287;"	d
BN_MP_EXCH_C	libtommath/tommath_class.h	298;"	d
BN_MP_EXCH_C	libtommath/tommath_class.h	358;"	d
BN_MP_EXCH_C	libtommath/tommath_class.h	370;"	d
BN_MP_EXCH_C	libtommath/tommath_class.h	395;"	d
BN_MP_EXCH_C	libtommath/tommath_class.h	40;"	d
BN_MP_EXCH_C	libtommath/tommath_class.h	455;"	d
BN_MP_EXCH_C	libtommath/tommath_class.h	520;"	d
BN_MP_EXCH_C	libtommath/tommath_class.h	596;"	d
BN_MP_EXCH_C	libtommath/tommath_class.h	608;"	d
BN_MP_EXCH_C	libtommath/tommath_class.h	822;"	d
BN_MP_EXCH_C	libtommath/tommath_class.h	923;"	d
BN_MP_EXCH_C	libtommath/tommath_class.h	954;"	d
BN_MP_EXCH_C	libtommath/tommath_class.h	961;"	d
BN_MP_EXCH_C	libtommath/tommath_class.h	969;"	d
BN_MP_EXCH_C	libtommath/tommath_class.h	976;"	d
BN_MP_EXPTMOD_C	libtommath/tommath_class.h	42;"	d
BN_MP_EXPTMOD_C	libtommath/tommath_class.h	615;"	d
BN_MP_EXPTMOD_C	libtommath/tommath_class.h	639;"	d
BN_MP_EXPTMOD_C	libtommath/tommath_superclass.h	25;"	d
BN_MP_EXPTMOD_FAST_C	libtommath/tommath_class.h	337;"	d
BN_MP_EXPTMOD_FAST_C	libtommath/tommath_class.h	43;"	d
BN_MP_EXPT_D_C	libtommath/tommath_class.h	41;"	d
BN_MP_EXPT_D_C	libtommath/tommath_class.h	589;"	d
BN_MP_EXTEUCLID_C	libtommath/tommath_class.h	44;"	d
BN_MP_FREAD_C	libtommath/tommath_class.h	45;"	d
BN_MP_FWRITE_C	libtommath/tommath_class.h	46;"	d
BN_MP_GCD_C	libtommath/tommath_class.h	47;"	d
BN_MP_GCD_C	libtommath/tommath_class.h	503;"	d
BN_MP_GCD_C	libtommath/tommath_superclass.h	21;"	d
BN_MP_GET_INT_C	libtommath/tommath_class.h	463;"	d
BN_MP_GET_INT_C	libtommath/tommath_class.h	48;"	d
BN_MP_GROW_C	libtommath/tommath_class.h	154;"	d
BN_MP_GROW_C	libtommath/tommath_class.h	162;"	d
BN_MP_GROW_C	libtommath/tommath_class.h	167;"	d
BN_MP_GROW_C	libtommath/tommath_class.h	172;"	d
BN_MP_GROW_C	libtommath/tommath_class.h	178;"	d
BN_MP_GROW_C	libtommath/tommath_class.h	192;"	d
BN_MP_GROW_C	libtommath/tommath_class.h	236;"	d
BN_MP_GROW_C	libtommath/tommath_class.h	269;"	d
BN_MP_GROW_C	libtommath/tommath_class.h	306;"	d
BN_MP_GROW_C	libtommath/tommath_class.h	49;"	d
BN_MP_GROW_C	libtommath/tommath_class.h	511;"	d
BN_MP_GROW_C	libtommath/tommath_class.h	544;"	d
BN_MP_GROW_C	libtommath/tommath_class.h	563;"	d
BN_MP_GROW_C	libtommath/tommath_class.h	568;"	d
BN_MP_GROW_C	libtommath/tommath_class.h	574;"	d
BN_MP_GROW_C	libtommath/tommath_class.h	701;"	d
BN_MP_GROW_C	libtommath/tommath_class.h	833;"	d
BN_MP_GROW_C	libtommath/tommath_class.h	937;"	d
BN_MP_GROW_C	libtommath/tommath_class.h	981;"	d
BN_MP_INIT_C	libtommath/tommath_class.h	198;"	d
BN_MP_INIT_C	libtommath/tommath_class.h	259;"	d
BN_MP_INIT_C	libtommath/tommath_class.h	276;"	d
BN_MP_INIT_C	libtommath/tommath_class.h	327;"	d
BN_MP_INIT_C	libtommath/tommath_class.h	342;"	d
BN_MP_INIT_C	libtommath/tommath_class.h	416;"	d
BN_MP_INIT_C	libtommath/tommath_class.h	421;"	d
BN_MP_INIT_C	libtommath/tommath_class.h	426;"	d
BN_MP_INIT_C	libtommath/tommath_class.h	431;"	d
BN_MP_INIT_C	libtommath/tommath_class.h	50;"	d
BN_MP_INIT_C	libtommath/tommath_class.h	516;"	d
BN_MP_INIT_C	libtommath/tommath_class.h	579;"	d
BN_MP_INIT_C	libtommath/tommath_class.h	586;"	d
BN_MP_INIT_C	libtommath/tommath_class.h	614;"	d
BN_MP_INIT_C	libtommath/tommath_class.h	627;"	d
BN_MP_INIT_C	libtommath/tommath_class.h	651;"	d
BN_MP_INIT_C	libtommath/tommath_class.h	727;"	d
BN_MP_INIT_C	libtommath/tommath_class.h	738;"	d
BN_MP_INIT_C	libtommath/tommath_class.h	749;"	d
BN_MP_INIT_C	libtommath/tommath_class.h	757;"	d
BN_MP_INIT_C	libtommath/tommath_class.h	806;"	d
BN_MP_INIT_C	libtommath/tommath_class.h	839;"	d
BN_MP_INIT_C	libtommath/tommath_class.h	943;"	d
BN_MP_INIT_COPY_C	libtommath/tommath_class.h	205;"	d
BN_MP_INIT_COPY_C	libtommath/tommath_class.h	260;"	d
BN_MP_INIT_COPY_C	libtommath/tommath_class.h	319;"	d
BN_MP_INIT_COPY_C	libtommath/tommath_class.h	391;"	d
BN_MP_INIT_COPY_C	libtommath/tommath_class.h	473;"	d
BN_MP_INIT_COPY_C	libtommath/tommath_class.h	51;"	d
BN_MP_INIT_COPY_C	libtommath/tommath_class.h	606;"	d
BN_MP_INIT_COPY_C	libtommath/tommath_class.h	635;"	d
BN_MP_INIT_COPY_C	libtommath/tommath_class.h	671;"	d
BN_MP_INIT_COPY_C	libtommath/tommath_class.h	709;"	d
BN_MP_INIT_COPY_C	libtommath/tommath_class.h	816;"	d
BN_MP_INIT_COPY_C	libtommath/tommath_class.h	855;"	d
BN_MP_INIT_COPY_C	libtommath/tommath_class.h	902;"	d
BN_MP_INIT_COPY_C	libtommath/tommath_class.h	910;"	d
BN_MP_INIT_COPY_C	libtommath/tommath_class.h	921;"	d
BN_MP_INIT_MULTI_C	libtommath/tommath_class.h	138;"	d
BN_MP_INIT_MULTI_C	libtommath/tommath_class.h	247;"	d
BN_MP_INIT_MULTI_C	libtommath/tommath_class.h	362;"	d
BN_MP_INIT_MULTI_C	libtommath/tommath_class.h	443;"	d
BN_MP_INIT_MULTI_C	libtommath/tommath_class.h	502;"	d
BN_MP_INIT_MULTI_C	libtommath/tommath_class.h	52;"	d
BN_MP_INIT_MULTI_C	libtommath/tommath_class.h	867;"	d
BN_MP_INIT_MULTI_C	libtommath/tommath_class.h	884;"	d
BN_MP_INIT_MULTI_C	libtommath/tommath_superclass.h	27;"	d
BN_MP_INIT_SET_C	libtommath/tommath_class.h	53;"	d
BN_MP_INIT_SET_INT_C	libtommath/tommath_class.h	461;"	d
BN_MP_INIT_SET_INT_C	libtommath/tommath_class.h	54;"	d
BN_MP_INIT_SIZE_C	libtommath/tommath_class.h	258;"	d
BN_MP_INIT_SIZE_C	libtommath/tommath_class.h	285;"	d
BN_MP_INIT_SIZE_C	libtommath/tommath_class.h	296;"	d
BN_MP_INIT_SIZE_C	libtommath/tommath_class.h	482;"	d
BN_MP_INIT_SIZE_C	libtommath/tommath_class.h	491;"	d
BN_MP_INIT_SIZE_C	libtommath/tommath_class.h	55;"	d
BN_MP_INIT_SIZE_C	libtommath/tommath_class.h	959;"	d
BN_MP_INIT_SIZE_C	libtommath/tommath_class.h	967;"	d
BN_MP_INIT_SIZE_C	libtommath/tommath_class.h	974;"	d
BN_MP_INVMOD_C	libtommath/tommath_class.h	328;"	d
BN_MP_INVMOD_C	libtommath/tommath_class.h	56;"	d
BN_MP_INVMOD_C	libtommath/tommath_superclass.h	20;"	d
BN_MP_INVMOD_SLOW_C	libtommath/tommath_class.h	438;"	d
BN_MP_INVMOD_SLOW_C	libtommath/tommath_class.h	57;"	d
BN_MP_ISEVEN_C	libtommath/tommath_class.h	137;"	d
BN_MP_ISEVEN_C	libtommath/tommath_class.h	446;"	d
BN_MP_ISEVEN_C	libtommath/tommath_class.h	649;"	d
BN_MP_ISODD_C	libtommath/tommath_class.h	143;"	d
BN_MP_ISODD_C	libtommath/tommath_class.h	336;"	d
BN_MP_ISODD_C	libtommath/tommath_class.h	436;"	d
BN_MP_ISODD_C	libtommath/tommath_class.h	449;"	d
BN_MP_ISZERO_C	libtommath/tommath_class.h	146;"	d
BN_MP_ISZERO_C	libtommath/tommath_class.h	232;"	d
BN_MP_ISZERO_C	libtommath/tommath_class.h	243;"	d
BN_MP_ISZERO_C	libtommath/tommath_class.h	292;"	d
BN_MP_ISZERO_C	libtommath/tommath_class.h	365;"	d
BN_MP_ISZERO_C	libtommath/tommath_class.h	388;"	d
BN_MP_ISZERO_C	libtommath/tommath_class.h	435;"	d
BN_MP_ISZERO_C	libtommath/tommath_class.h	442;"	d
BN_MP_ISZERO_C	libtommath/tommath_class.h	472;"	d
BN_MP_ISZERO_C	libtommath/tommath_class.h	602;"	d
BN_MP_ISZERO_C	libtommath/tommath_class.h	672;"	d
BN_MP_ISZERO_C	libtommath/tommath_class.h	693;"	d
BN_MP_ISZERO_C	libtommath/tommath_class.h	814;"	d
BN_MP_ISZERO_C	libtommath/tommath_class.h	856;"	d
BN_MP_ISZERO_C	libtommath/tommath_class.h	901;"	d
BN_MP_ISZERO_C	libtommath/tommath_class.h	909;"	d
BN_MP_IS_SQUARE_C	libtommath/tommath_class.h	58;"	d
BN_MP_JACOBI_C	libtommath/tommath_class.h	59;"	d
BN_MP_KARATSUBA_MUL_C	libtommath/tommath_class.h	556;"	d
BN_MP_KARATSUBA_MUL_C	libtommath/tommath_class.h	60;"	d
BN_MP_KARATSUBA_MUL_C	libtommath/tommath_superclass.h	46;"	d
BN_MP_KARATSUBA_SQR_C	libtommath/tommath_class.h	61;"	d
BN_MP_KARATSUBA_SQR_C	libtommath/tommath_class.h	800;"	d
BN_MP_KARATSUBA_SQR_C	libtommath/tommath_superclass.h	47;"	d
BN_MP_LCM_C	libtommath/tommath_class.h	62;"	d
BN_MP_LCM_C	libtommath/tommath_superclass.h	18;"	d
BN_MP_LSHD_C	libtommath/tommath_class.h	261;"	d
BN_MP_LSHD_C	libtommath/tommath_class.h	486;"	d
BN_MP_LSHD_C	libtommath/tommath_class.h	496;"	d
BN_MP_LSHD_C	libtommath/tommath_class.h	569;"	d
BN_MP_LSHD_C	libtommath/tommath_class.h	63;"	d
BN_MP_LSHD_C	libtommath/tommath_class.h	684;"	d
BN_MP_LSHD_C	libtommath/tommath_class.h	719;"	d
BN_MP_LSHD_C	libtommath/tommath_class.h	879;"	d
BN_MP_LSHD_C	libtommath/tommath_class.h	896;"	d
BN_MP_MOD_2D_C	libtommath/tommath_class.h	277;"	d
BN_MP_MOD_2D_C	libtommath/tommath_class.h	65;"	d
BN_MP_MOD_2D_C	libtommath/tommath_class.h	714;"	d
BN_MP_MOD_2D_C	libtommath/tommath_class.h	868;"	d
BN_MP_MOD_2D_C	libtommath/tommath_class.h	885;"	d
BN_MP_MOD_C	libtommath/tommath_class.h	140;"	d
BN_MP_MOD_C	libtommath/tommath_class.h	201;"	d
BN_MP_MOD_C	libtommath/tommath_class.h	354;"	d
BN_MP_MOD_C	libtommath/tommath_class.h	444;"	d
BN_MP_MOD_C	libtommath/tommath_class.h	462;"	d
BN_MP_MOD_C	libtommath/tommath_class.h	476;"	d
BN_MP_MOD_C	libtommath/tommath_class.h	582;"	d
BN_MP_MOD_C	libtommath/tommath_class.h	64;"	d
BN_MP_MOD_C	libtommath/tommath_class.h	809;"	d
BN_MP_MOD_C	libtommath/tommath_class.h	842;"	d
BN_MP_MOD_C	libtommath/tommath_class.h	949;"	d
BN_MP_MOD_C	libtommath/tommath_superclass.h	22;"	d
BN_MP_MOD_D_C	libtommath/tommath_class.h	460;"	d
BN_MP_MOD_D_C	libtommath/tommath_class.h	621;"	d
BN_MP_MOD_D_C	libtommath/tommath_class.h	650;"	d
BN_MP_MOD_D_C	libtommath/tommath_class.h	66;"	d
BN_MP_MOD_D_C	libtommath/tommath_superclass.h	31;"	d
BN_MP_MONTGOMERY_CALC_NORMALIZATION_C	libtommath/tommath_class.h	351;"	d
BN_MP_MONTGOMERY_CALC_NORMALIZATION_C	libtommath/tommath_class.h	67;"	d
BN_MP_MONTGOMERY_REDUCE_C	libtommath/tommath_class.h	346;"	d
BN_MP_MONTGOMERY_REDUCE_C	libtommath/tommath_class.h	68;"	d
BN_MP_MONTGOMERY_REDUCE_C	libtommath/tommath_superclass.h	69;"	d
BN_MP_MONTGOMERY_SETUP_C	libtommath/tommath_class.h	344;"	d
BN_MP_MONTGOMERY_SETUP_C	libtommath/tommath_class.h	69;"	d
BN_MP_MULMOD_C	libtommath/tommath_class.h	352;"	d
BN_MP_MULMOD_C	libtommath/tommath_class.h	74;"	d
BN_MP_MULMOD_C	libtommath/tommath_superclass.h	23;"	d
BN_MP_MUL_2D_C	libtommath/tommath_class.h	251;"	d
BN_MP_MUL_2D_C	libtommath/tommath_class.h	397;"	d
BN_MP_MUL_2D_C	libtommath/tommath_class.h	703;"	d
BN_MP_MUL_2D_C	libtommath/tommath_class.h	72;"	d
BN_MP_MUL_2D_C	libtommath/tommath_class.h	787;"	d
BN_MP_MUL_2D_C	libtommath/tommath_class.h	876;"	d
BN_MP_MUL_2D_C	libtommath/tommath_class.h	893;"	d
BN_MP_MUL_2_C	libtommath/tommath_class.h	537;"	d
BN_MP_MUL_2_C	libtommath/tommath_class.h	665;"	d
BN_MP_MUL_2_C	libtommath/tommath_class.h	71;"	d
BN_MP_MUL_2_C	libtommath/tommath_class.h	872;"	d
BN_MP_MUL_2_C	libtommath/tommath_class.h	889;"	d
BN_MP_MUL_C	libtommath/tommath_class.h	323;"	d
BN_MP_MUL_C	libtommath/tommath_class.h	357;"	d
BN_MP_MUL_C	libtommath/tommath_class.h	367;"	d
BN_MP_MUL_C	libtommath/tommath_class.h	481;"	d
BN_MP_MUL_C	libtommath/tommath_class.h	506;"	d
BN_MP_MUL_C	libtommath/tommath_class.h	580;"	d
BN_MP_MUL_C	libtommath/tommath_class.h	590;"	d
BN_MP_MUL_C	libtommath/tommath_class.h	70;"	d
BN_MP_MUL_C	libtommath/tommath_class.h	711;"	d
BN_MP_MUL_C	libtommath/tommath_class.h	741;"	d
BN_MP_MUL_C	libtommath/tommath_class.h	871;"	d
BN_MP_MUL_C	libtommath/tommath_class.h	952;"	d
BN_MP_MUL_D_C	libtommath/tommath_class.h	263;"	d
BN_MP_MUL_D_C	libtommath/tommath_class.h	377;"	d
BN_MP_MUL_D_C	libtommath/tommath_class.h	592;"	d
BN_MP_MUL_D_C	libtommath/tommath_class.h	691;"	d
BN_MP_MUL_D_C	libtommath/tommath_class.h	730;"	d
BN_MP_MUL_D_C	libtommath/tommath_class.h	73;"	d
BN_MP_MUL_D_C	libtommath/tommath_class.h	877;"	d
BN_MP_MUL_D_C	libtommath/tommath_class.h	894;"	d
BN_MP_NEG_C	libtommath/tommath_class.h	369;"	d
BN_MP_NEG_C	libtommath/tommath_class.h	76;"	d
BN_MP_N_ROOT_C	libtommath/tommath_class.h	75;"	d
BN_MP_N_ROOT_C	libtommath/tommath_class.h	813;"	d
BN_MP_OR_C	libtommath/tommath_class.h	77;"	d
BN_MP_PRIME_FERMAT_C	libtommath/tommath_class.h	78;"	d
BN_MP_PRIME_IS_DIVISIBLE_C	libtommath/tommath_class.h	626;"	d
BN_MP_PRIME_IS_DIVISIBLE_C	libtommath/tommath_class.h	79;"	d
BN_MP_PRIME_IS_PRIME_C	libtommath/tommath_class.h	662;"	d
BN_MP_PRIME_IS_PRIME_C	libtommath/tommath_class.h	80;"	d
BN_MP_PRIME_MILLER_RABIN_C	libtommath/tommath_class.h	629;"	d
BN_MP_PRIME_MILLER_RABIN_C	libtommath/tommath_class.h	653;"	d
BN_MP_PRIME_MILLER_RABIN_C	libtommath/tommath_class.h	81;"	d
BN_MP_PRIME_NEXT_PRIME_C	libtommath/tommath_class.h	82;"	d
BN_MP_PRIME_RABIN_MILLER_TRIALS_C	libtommath/tommath_class.h	83;"	d
BN_MP_PRIME_RABIN_MILLER_TRIALS_C	libtommath/tommath_superclass.h	32;"	d
BN_MP_PRIME_RANDOM_EX_C	libtommath/tommath_class.h	84;"	d
BN_MP_PRIME_RANDOM_EX_C	libtommath/tommath_superclass.h	19;"	d
BN_MP_RADIX_SIZE_C	libtommath/tommath_class.h	383;"	d
BN_MP_RADIX_SIZE_C	libtommath/tommath_class.h	85;"	d
BN_MP_RADIX_SMAP_C	libtommath/tommath_class.h	690;"	d
BN_MP_RADIX_SMAP_C	libtommath/tommath_class.h	86;"	d
BN_MP_RAND_C	libtommath/tommath_class.h	87;"	d
BN_MP_READ_RADIX_C	libtommath/tommath_class.h	88;"	d
BN_MP_READ_SIGNED_BIN_C	libtommath/tommath_class.h	89;"	d
BN_MP_READ_UNSIGNED_BIN_C	libtommath/tommath_class.h	661;"	d
BN_MP_READ_UNSIGNED_BIN_C	libtommath/tommath_class.h	697;"	d
BN_MP_READ_UNSIGNED_BIN_C	libtommath/tommath_class.h	90;"	d
BN_MP_REDUCE_2K_C	libtommath/tommath_class.h	350;"	d
BN_MP_REDUCE_2K_C	libtommath/tommath_class.h	765;"	d
BN_MP_REDUCE_2K_C	libtommath/tommath_class.h	92;"	d
BN_MP_REDUCE_2K_C	libtommath/tommath_superclass.h	55;"	d
BN_MP_REDUCE_2K_L_C	libtommath/tommath_class.h	93;"	d
BN_MP_REDUCE_2K_L_C	libtommath/tommath_class.h	948;"	d
BN_MP_REDUCE_2K_SETUP_C	libtommath/tommath_class.h	349;"	d
BN_MP_REDUCE_2K_SETUP_C	libtommath/tommath_class.h	94;"	d
BN_MP_REDUCE_2K_SETUP_C	libtommath/tommath_superclass.h	54;"	d
BN_MP_REDUCE_2K_SETUP_L_C	libtommath/tommath_class.h	947;"	d
BN_MP_REDUCE_2K_SETUP_L_C	libtommath/tommath_class.h	95;"	d
BN_MP_REDUCE_C	libtommath/tommath_class.h	91;"	d
BN_MP_REDUCE_C	libtommath/tommath_class.h	946;"	d
BN_MP_REDUCE_C	libtommath/tommath_superclass.h	48;"	d
BN_MP_REDUCE_IS_2K_C	libtommath/tommath_class.h	335;"	d
BN_MP_REDUCE_IS_2K_C	libtommath/tommath_class.h	96;"	d
BN_MP_REDUCE_IS_2K_C	libtommath/tommath_superclass.h	53;"	d
BN_MP_REDUCE_IS_2K_L_C	libtommath/tommath_class.h	332;"	d
BN_MP_REDUCE_IS_2K_L_C	libtommath/tommath_class.h	97;"	d
BN_MP_REDUCE_SETUP_C	libtommath/tommath_class.h	708;"	d
BN_MP_REDUCE_SETUP_C	libtommath/tommath_class.h	945;"	d
BN_MP_REDUCE_SETUP_C	libtommath/tommath_class.h	98;"	d
BN_MP_REDUCE_SETUP_C	libtommath/tommath_superclass.h	49;"	d
BN_MP_RSHD_C	libtommath/tommath_class.h	155;"	d
BN_MP_RSHD_C	libtommath/tommath_class.h	262;"	d
BN_MP_RSHD_C	libtommath/tommath_class.h	279;"	d
BN_MP_RSHD_C	libtommath/tommath_class.h	512;"	d
BN_MP_RSHD_C	libtommath/tommath_class.h	546;"	d
BN_MP_RSHD_C	libtommath/tommath_class.h	710;"	d
BN_MP_RSHD_C	libtommath/tommath_class.h	817;"	d
BN_MP_RSHD_C	libtommath/tommath_class.h	870;"	d
BN_MP_RSHD_C	libtommath/tommath_class.h	887;"	d
BN_MP_RSHD_C	libtommath/tommath_class.h	99;"	d
BN_MP_SET_C	libtommath/tommath_class.h	100;"	d
BN_MP_SET_C	libtommath/tommath_class.h	141;"	d
BN_MP_SET_C	libtommath/tommath_class.h	248;"	d
BN_MP_SET_C	libtommath/tommath_class.h	320;"	d
BN_MP_SET_C	libtommath/tommath_class.h	353;"	d
BN_MP_SET_C	libtommath/tommath_class.h	363;"	d
BN_MP_SET_C	libtommath/tommath_class.h	422;"	d
BN_MP_SET_C	libtommath/tommath_class.h	447;"	d
BN_MP_SET_C	libtommath/tommath_class.h	536;"	d
BN_MP_SET_C	libtommath/tommath_class.h	587;"	d
BN_MP_SET_C	libtommath/tommath_class.h	628;"	d
BN_MP_SET_C	libtommath/tommath_class.h	647;"	d
BN_MP_SET_C	libtommath/tommath_class.h	718;"	d
BN_MP_SET_C	libtommath/tommath_class.h	953;"	d
BN_MP_SET_INT_C	libtommath/tommath_class.h	101;"	d
BN_MP_SET_INT_C	libtommath/tommath_class.h	427;"	d
BN_MP_SET_INT_C	libtommath/tommath_superclass.h	26;"	d
BN_MP_SHRINK_C	libtommath/tommath_class.h	102;"	d
BN_MP_SHRINK_C	libtommath/tommath_superclass.h	17;"	d
BN_MP_SIGNED_BIN_SIZE_C	libtommath/tommath_class.h	103;"	d
BN_MP_SIGNED_BIN_SIZE_C	libtommath/tommath_class.h	850;"	d
BN_MP_SQRMOD_C	libtommath/tommath_class.h	105;"	d
BN_MP_SQRMOD_C	libtommath/tommath_class.h	641;"	d
BN_MP_SQRT_C	libtommath/tommath_class.h	106;"	d
BN_MP_SQRT_C	libtommath/tommath_class.h	464;"	d
BN_MP_SQR_C	libtommath/tommath_class.h	104;"	d
BN_MP_SQR_C	libtommath/tommath_class.h	321;"	d
BN_MP_SQR_C	libtommath/tommath_class.h	356;"	d
BN_MP_SQR_C	libtommath/tommath_class.h	465;"	d
BN_MP_SQR_C	libtommath/tommath_class.h	493;"	d
BN_MP_SQR_C	libtommath/tommath_class.h	807;"	d
BN_MP_SQR_C	libtommath/tommath_class.h	888;"	d
BN_MP_SQR_C	libtommath/tommath_class.h	951;"	d
BN_MP_SUBMOD_C	libtommath/tommath_class.h	109;"	d
BN_MP_SUB_C	libtommath/tommath_class.h	107;"	d
BN_MP_SUB_C	libtommath/tommath_class.h	144;"	d
BN_MP_SUB_C	libtommath/tommath_class.h	253;"	d
BN_MP_SUB_C	libtommath/tommath_class.h	368;"	d
BN_MP_SUB_C	libtommath/tommath_class.h	451;"	d
BN_MP_SUB_C	libtommath/tommath_class.h	484;"	d
BN_MP_SUB_C	libtommath/tommath_class.h	494;"	d
BN_MP_SUB_C	libtommath/tommath_class.h	591;"	d
BN_MP_SUB_C	libtommath/tommath_class.h	716;"	d
BN_MP_SUB_C	libtommath/tommath_class.h	840;"	d
BN_MP_SUB_C	libtommath/tommath_class.h	874;"	d
BN_MP_SUB_C	libtommath/tommath_class.h	891;"	d
BN_MP_SUB_D_C	libtommath/tommath_class.h	108;"	d
BN_MP_SUB_D_C	libtommath/tommath_class.h	193;"	d
BN_MP_SUB_D_C	libtommath/tommath_class.h	595;"	d
BN_MP_SUB_D_C	libtommath/tommath_class.h	636;"	d
BN_MP_SUB_D_C	libtommath/tommath_class.h	648;"	d
BN_MP_SUB_D_C	libtommath/tommath_class.h	663;"	d
BN_MP_S_RMAP_C	libtommath/tommath_class.h	376;"	d
BN_MP_S_RMAP_C	libtommath/tommath_class.h	678;"	d
BN_MP_S_RMAP_C	libtommath/tommath_class.h	689;"	d
BN_MP_S_RMAP_C	libtommath/tommath_class.h	905;"	d
BN_MP_S_RMAP_C	libtommath/tommath_class.h	913;"	d
BN_MP_TOOM_MUL_C	libtommath/tommath_class.h	114;"	d
BN_MP_TOOM_MUL_C	libtommath/tommath_class.h	555;"	d
BN_MP_TOOM_MUL_C	libtommath/tommath_superclass.h	44;"	d
BN_MP_TOOM_SQR_C	libtommath/tommath_class.h	115;"	d
BN_MP_TOOM_SQR_C	libtommath/tommath_class.h	799;"	d
BN_MP_TOOM_SQR_C	libtommath/tommath_superclass.h	45;"	d
BN_MP_TORADIX_C	libtommath/tommath_class.h	116;"	d
BN_MP_TORADIX_C	libtommath/tommath_class.h	384;"	d
BN_MP_TORADIX_N_C	libtommath/tommath_class.h	117;"	d
BN_MP_TO_SIGNED_BIN_C	libtommath/tommath_class.h	110;"	d
BN_MP_TO_SIGNED_BIN_C	libtommath/tommath_class.h	851;"	d
BN_MP_TO_SIGNED_BIN_N_C	libtommath/tommath_class.h	111;"	d
BN_MP_TO_UNSIGNED_BIN_C	libtommath/tommath_class.h	112;"	d
BN_MP_TO_UNSIGNED_BIN_C	libtommath/tommath_class.h	846;"	d
BN_MP_TO_UNSIGNED_BIN_C	libtommath/tommath_class.h	863;"	d
BN_MP_TO_UNSIGNED_BIN_C	libtommath/tommath_superclass.h	30;"	d
BN_MP_TO_UNSIGNED_BIN_N_C	libtommath/tommath_class.h	113;"	d
BN_MP_UNSIGNED_BIN_SIZE_C	libtommath/tommath_class.h	118;"	d
BN_MP_UNSIGNED_BIN_SIZE_C	libtommath/tommath_class.h	795;"	d
BN_MP_UNSIGNED_BIN_SIZE_C	libtommath/tommath_class.h	862;"	d
BN_MP_UNSIGNED_BIN_SIZE_C	libtommath/tommath_superclass.h	29;"	d
BN_MP_XOR_C	libtommath/tommath_class.h	119;"	d
BN_MP_ZERO_C	libtommath/tommath_class.h	120;"	d
BN_MP_ZERO_C	libtommath/tommath_class.h	177;"	d
BN_MP_ZERO_C	libtommath/tommath_class.h	246;"	d
BN_MP_ZERO_C	libtommath/tommath_class.h	275;"	d
BN_MP_ZERO_C	libtommath/tommath_class.h	375;"	d
BN_MP_ZERO_C	libtommath/tommath_class.h	390;"	d
BN_MP_ZERO_C	libtommath/tommath_class.h	524;"	d
BN_MP_ZERO_C	libtommath/tommath_class.h	682;"	d
BN_MP_ZERO_C	libtommath/tommath_class.h	688;"	d
BN_MP_ZERO_C	libtommath/tommath_class.h	702;"	d
BN_MP_ZERO_C	libtommath/tommath_class.h	778;"	d
BN_MP_ZERO_C	libtommath/tommath_class.h	782;"	d
BN_MP_ZERO_C	libtommath/tommath_class.h	786;"	d
BN_MP_ZERO_C	libtommath/tommath_class.h	815;"	d
BN_PRIME_TAB_C	libtommath/tommath_class.h	121;"	d
BN_PRIME_TAB_C	libtommath/tommath_superclass.h	34;"	d
BN_REVERSE_C	libtommath/tommath_class.h	122;"	d
BN_REVERSE_C	libtommath/tommath_superclass.h	33;"	d
BN_S_MP_ADD_C	libtommath/tommath_class.h	123;"	d
BN_S_MP_ADD_C	libtommath/tommath_class.h	186;"	d
BN_S_MP_ADD_C	libtommath/tommath_class.h	495;"	d
BN_S_MP_ADD_C	libtommath/tommath_class.h	731;"	d
BN_S_MP_ADD_C	libtommath/tommath_class.h	742;"	d
BN_S_MP_ADD_C	libtommath/tommath_class.h	827;"	d
BN_S_MP_EXPTMOD_C	libtommath/tommath_class.h	124;"	d
BN_S_MP_EXPTMOD_C	libtommath/tommath_class.h	333;"	d
BN_S_MP_EXPTMOD_C	libtommath/tommath_superclass.h	56;"	d
BN_S_MP_MUL_C	libtommath/tommath_class.h	558;"	d
BN_S_MP_MUL_DIGS_C	libtommath/tommath_class.h	125;"	d
BN_S_MP_MUL_DIGS_C	libtommath/tommath_class.h	559;"	d
BN_S_MP_MUL_DIGS_C	libtommath/tommath_class.h	715;"	d
BN_S_MP_MUL_DIGS_C	libtommath/tommath_superclass.h	67;"	d
BN_S_MP_MUL_HIGH_DIGS_C	libtommath/tommath_class.h	126;"	d
BN_S_MP_MUL_HIGH_DIGS_C	libtommath/tommath_class.h	712;"	d
BN_S_MP_MUL_HIGH_DIGS_C	libtommath/tommath_superclass.h	58;"	d
BN_S_MP_SQR_C	libtommath/tommath_class.h	127;"	d
BN_S_MP_SQR_C	libtommath/tommath_class.h	802;"	d
BN_S_MP_SQR_C	libtommath/tommath_superclass.h	68;"	d
BN_S_MP_SUB_C	libtommath/tommath_class.h	128;"	d
BN_S_MP_SUB_C	libtommath/tommath_class.h	158;"	d
BN_S_MP_SUB_C	libtommath/tommath_class.h	188;"	d
BN_S_MP_SUB_C	libtommath/tommath_class.h	309;"	d
BN_S_MP_SUB_C	libtommath/tommath_class.h	396;"	d
BN_S_MP_SUB_C	libtommath/tommath_class.h	539;"	d
BN_S_MP_SUB_C	libtommath/tommath_class.h	548;"	d
BN_S_MP_SUB_C	libtommath/tommath_class.h	722;"	d
BN_S_MP_SUB_C	libtommath/tommath_class.h	733;"	d
BN_S_MP_SUB_C	libtommath/tommath_class.h	744;"	d
BN_S_MP_SUB_C	libtommath/tommath_class.h	753;"	d
BN_S_MP_SUB_C	libtommath/tommath_class.h	760;"	d
BN_S_MP_SUB_C	libtommath/tommath_class.h	829;"	d
BPD	src/encauth/gcm/gcm_gf_mult.c	108;"	d	file:
BSWAP	libtomcrypt/headers/tomcrypt_macros.h	229;"	d
BSWAP	src/headers/tomcrypt_macros.h	230;"	d
BYTE2WORD	src/prngs/sober128.c	/^static ulong32 BYTE2WORD(unsigned char *b)$/;"	f	file:
CCM_DECRYPT	src/headers/tomcrypt_mac.h	199;"	d
CCM_ENCRYPT	src/headers/tomcrypt_mac.h	198;"	d
CHAR_BIT	libtommath/tommath.h	25;"	d
CONST64	libtomcrypt/headers/tomcrypt_macros.h	3;"	d
CONST64	libtomcrypt/headers/tomcrypt_macros.h	6;"	d
CONST64	src/headers/tomcrypt_macros.h	3;"	d
CONST64	src/headers/tomcrypt_macros.h	6;"	d
CRYPT	libtomcrypt/headers/tomcrypt.h	19;"	d
CRYPT	src/headers/tomcrypt.h	19;"	d
CRYPTODEV_INT_H	libtomcrypt/headers/cryptodev_int.h	3;"	d
CRYPT_BUFFER_OVERFLOW	libtomcrypt/headers/tomcrypt.h	/^		CRYPT_BUFFER_OVERFLOW,	\/* Not enough space for output *\/$/;"	e	enum:__anon16
CRYPT_BUFFER_OVERFLOW	src/headers/tomcrypt.h	/^   CRYPT_BUFFER_OVERFLOW,  \/* Not enough space for output *\/$/;"	e	enum:__anon53
CRYPT_ERROR	libtomcrypt/headers/tomcrypt.h	/^		CRYPT_ERROR,	\/* Generic Error *\/$/;"	e	enum:__anon16
CRYPT_ERROR	src/headers/tomcrypt.h	/^   CRYPT_ERROR,            \/* Generic Error *\/$/;"	e	enum:__anon53
CRYPT_ERROR_READPRNG	libtomcrypt/headers/tomcrypt.h	/^		CRYPT_ERROR_READPRNG,	\/* Could not read enough from PRNG *\/$/;"	e	enum:__anon16
CRYPT_ERROR_READPRNG	src/headers/tomcrypt.h	/^   CRYPT_ERROR_READPRNG,   \/* Could not read enough from PRNG *\/$/;"	e	enum:__anon53
CRYPT_FAIL_TESTVECTOR	libtomcrypt/headers/tomcrypt.h	/^		CRYPT_FAIL_TESTVECTOR,	\/* Algorithm failed test vectors *\/$/;"	e	enum:__anon16
CRYPT_FAIL_TESTVECTOR	src/headers/tomcrypt.h	/^   CRYPT_FAIL_TESTVECTOR,  \/* Algorithm failed test vectors *\/$/;"	e	enum:__anon53
CRYPT_FILE_NOTFOUND	libtomcrypt/headers/tomcrypt.h	/^		CRYPT_FILE_NOTFOUND,	\/* File Not Found *\/$/;"	e	enum:__anon16
CRYPT_FILE_NOTFOUND	src/headers/tomcrypt.h	/^   CRYPT_FILE_NOTFOUND,    \/* File Not Found *\/$/;"	e	enum:__anon53
CRYPT_INVALID_ARG	libtomcrypt/headers/tomcrypt.h	/^		CRYPT_INVALID_ARG,	\/* Generic invalid argument *\/$/;"	e	enum:__anon16
CRYPT_INVALID_ARG	src/headers/tomcrypt.h	/^   CRYPT_INVALID_ARG,      \/* Generic invalid argument *\/$/;"	e	enum:__anon53
CRYPT_INVALID_CIPHER	libtomcrypt/headers/tomcrypt.h	/^		CRYPT_INVALID_CIPHER,	\/* Invalid cipher specified *\/$/;"	e	enum:__anon16
CRYPT_INVALID_CIPHER	src/headers/tomcrypt.h	/^   CRYPT_INVALID_CIPHER,   \/* Invalid cipher specified *\/$/;"	e	enum:__anon53
CRYPT_INVALID_HASH	libtomcrypt/headers/tomcrypt.h	/^		CRYPT_INVALID_HASH,	\/* Invalid hash specified *\/$/;"	e	enum:__anon16
CRYPT_INVALID_HASH	src/headers/tomcrypt.h	/^   CRYPT_INVALID_HASH,     \/* Invalid hash specified *\/$/;"	e	enum:__anon53
CRYPT_INVALID_KEYSIZE	libtomcrypt/headers/tomcrypt.h	/^		CRYPT_INVALID_KEYSIZE,	\/* Invalid key size given *\/$/;"	e	enum:__anon16
CRYPT_INVALID_KEYSIZE	src/headers/tomcrypt.h	/^   CRYPT_INVALID_KEYSIZE,  \/* Invalid key size given *\/$/;"	e	enum:__anon53
CRYPT_INVALID_PACKET	libtomcrypt/headers/tomcrypt.h	/^		CRYPT_INVALID_PACKET,	\/* Invalid input packet given *\/$/;"	e	enum:__anon16
CRYPT_INVALID_PACKET	src/headers/tomcrypt.h	/^   CRYPT_INVALID_PACKET,   \/* Invalid input packet given *\/$/;"	e	enum:__anon53
CRYPT_INVALID_PRIME_SIZE	libtomcrypt/headers/tomcrypt.h	/^		CRYPT_INVALID_PRIME_SIZE,	\/* Invalid size of prime requested *\/$/;"	e	enum:__anon16
CRYPT_INVALID_PRIME_SIZE	src/headers/tomcrypt.h	/^   CRYPT_INVALID_PRIME_SIZE,\/* Invalid size of prime requested *\/$/;"	e	enum:__anon53
CRYPT_INVALID_PRNG	libtomcrypt/headers/tomcrypt.h	/^		CRYPT_INVALID_PRNG,	\/* Invalid PRNG specified *\/$/;"	e	enum:__anon16
CRYPT_INVALID_PRNG	src/headers/tomcrypt.h	/^   CRYPT_INVALID_PRNG,     \/* Invalid PRNG specified *\/$/;"	e	enum:__anon53
CRYPT_INVALID_PRNGSIZE	libtomcrypt/headers/tomcrypt.h	/^		CRYPT_INVALID_PRNGSIZE,	\/* Invalid number of bits for a PRNG *\/$/;"	e	enum:__anon16
CRYPT_INVALID_PRNGSIZE	src/headers/tomcrypt.h	/^   CRYPT_INVALID_PRNGSIZE, \/* Invalid number of bits for a PRNG *\/$/;"	e	enum:__anon53
CRYPT_INVALID_ROUNDS	libtomcrypt/headers/tomcrypt.h	/^		CRYPT_INVALID_ROUNDS,	\/* Invalid number of rounds *\/$/;"	e	enum:__anon16
CRYPT_INVALID_ROUNDS	src/headers/tomcrypt.h	/^   CRYPT_INVALID_ROUNDS,   \/* Invalid number of rounds *\/$/;"	e	enum:__anon53
CRYPT_MEM	libtomcrypt/headers/tomcrypt.h	/^		CRYPT_MEM,	\/* Out of memory *\/$/;"	e	enum:__anon16
CRYPT_MEM	src/headers/tomcrypt.h	/^   CRYPT_MEM,              \/* Out of memory *\/$/;"	e	enum:__anon53
CRYPT_NOP	libtomcrypt/headers/tomcrypt.h	/^		CRYPT_NOP,	\/* Not a failure but no operation was performed *\/$/;"	e	enum:__anon16
CRYPT_NOP	src/headers/tomcrypt.h	/^   CRYPT_NOP,              \/* Not a failure but no operation was performed *\/$/;"	e	enum:__anon53
CRYPT_OK	libtomcrypt/headers/tomcrypt.h	/^		CRYPT_OK = 0,	\/* Result OK *\/$/;"	e	enum:__anon16
CRYPT_OK	src/headers/tomcrypt.h	/^   CRYPT_OK=0,             \/* Result OK *\/$/;"	e	enum:__anon53
CRYPT_PK_DUP	libtomcrypt/headers/tomcrypt.h	/^		CRYPT_PK_DUP,	\/* Duplicate key already in key ring *\/$/;"	e	enum:__anon16
CRYPT_PK_DUP	src/headers/tomcrypt.h	/^   CRYPT_PK_DUP,           \/* Duplicate key already in key ring *\/$/;"	e	enum:__anon53
CRYPT_PK_INVALID_PADDING	libtomcrypt/headers/tomcrypt.h	/^		CRYPT_PK_INVALID_PADDING	\/* Invalid padding on input *\/$/;"	e	enum:__anon16
CRYPT_PK_INVALID_PADDING	src/headers/tomcrypt.h	/^   CRYPT_PK_INVALID_PADDING \/* Invalid padding on input *\/$/;"	e	enum:__anon53
CRYPT_PK_INVALID_SIZE	libtomcrypt/headers/tomcrypt.h	/^		CRYPT_PK_INVALID_SIZE,	\/* Invalid size input for PK parameters *\/$/;"	e	enum:__anon16
CRYPT_PK_INVALID_SIZE	src/headers/tomcrypt.h	/^   CRYPT_PK_INVALID_SIZE,  \/* Invalid size input for PK parameters *\/$/;"	e	enum:__anon53
CRYPT_PK_INVALID_SYSTEM	libtomcrypt/headers/tomcrypt.h	/^		CRYPT_PK_INVALID_SYSTEM,	\/* Invalid PK system specified *\/$/;"	e	enum:__anon16
CRYPT_PK_INVALID_SYSTEM	src/headers/tomcrypt.h	/^   CRYPT_PK_INVALID_SYSTEM,\/* Invalid PK system specified *\/$/;"	e	enum:__anon53
CRYPT_PK_INVALID_TYPE	libtomcrypt/headers/tomcrypt.h	/^		CRYPT_PK_INVALID_TYPE,	\/* Invalid type of PK key *\/$/;"	e	enum:__anon16
CRYPT_PK_INVALID_TYPE	src/headers/tomcrypt.h	/^   CRYPT_PK_INVALID_TYPE,  \/* Invalid type of PK key *\/$/;"	e	enum:__anon53
CRYPT_PK_NOT_FOUND	libtomcrypt/headers/tomcrypt.h	/^		CRYPT_PK_NOT_FOUND,	\/* Key not found in keyring *\/$/;"	e	enum:__anon16
CRYPT_PK_NOT_FOUND	src/headers/tomcrypt.h	/^   CRYPT_PK_NOT_FOUND,     \/* Key not found in keyring *\/$/;"	e	enum:__anon53
CRYPT_PK_NOT_PRIVATE	libtomcrypt/headers/tomcrypt.h	/^		CRYPT_PK_NOT_PRIVATE,	\/* Requires a private PK key *\/$/;"	e	enum:__anon16
CRYPT_PK_NOT_PRIVATE	src/headers/tomcrypt.h	/^   CRYPT_PK_NOT_PRIVATE,   \/* Requires a private PK key *\/$/;"	e	enum:__anon53
CRYPT_PK_TYPE_MISMATCH	libtomcrypt/headers/tomcrypt.h	/^		CRYPT_PK_TYPE_MISMATCH,	\/* Not equivalent types of PK keys *\/$/;"	e	enum:__anon16
CRYPT_PK_TYPE_MISMATCH	src/headers/tomcrypt.h	/^   CRYPT_PK_TYPE_MISMATCH, \/* Not equivalent types of PK keys *\/$/;"	e	enum:__anon53
CTR_COUNTER_BIG_ENDIAN	src/headers/tomcrypt_cipher.h	800;"	d
CTR_COUNTER_LITTLE_ENDIAN	src/headers/tomcrypt_cipher.h	799;"	d
Ch	src/hashes/sha2/sha256.c	58;"	d	file:
Ch	src/hashes/sha2/sha512.c	83;"	d	file:
DD	libtomcrypt/headers/tomcrypt_pk.h	/^	 DD,			\/* day *\/$/;"	m	struct:__anon15
DD	src/headers/tomcrypt_pk.h	/^            DD, \/* day *\/$/;"	m	struct:__anon44
DE1	src/ciphers/des.c	21;"	d	file:
DEBFLAGS	Makefile	/^	DEBFLAGS = -O -g -DOK_DEBUG $/;"	m
DEBFLAGS	Makefile	/^	DEBFLAGS = -O2$/;"	m
DEBUG	Makefile	/^DEBUG = y$/;"	m
DECODE_V	libtomcrypt/pk/asn1/der/utctime/der_decode_utctime.c	37;"	d	file:
DECODE_V	src/pk/asn1/der/utctime/der_decode_utctime.c	37;"	d	file:
DEFAULT_PREALLOC_PAGES	libtomcrypt/headers/cryptodev_int.h	37;"	d
DESC_DEF_ONLY	src/math/gmp_desc.c	12;"	d	file:
DESC_DEF_ONLY	src/math/ltm_desc.c	12;"	d	file:
DESC_DEF_ONLY	src/math/tfm_desc.c	12;"	d	file:
DIGIT	libtommath/tommath.h	172;"	d
DIGIT_BIT	libtommath/tommath.h	75;"	d
DIGIT_BIT	libtommath/tommath.h	84;"	d
DROUND	src/prngs/sober128.c	176;"	d	file:
ECB_DEC	src/ciphers/aes/aes.c	/^int ECB_DEC(const unsigned char *ct, unsigned char *pt, symmetric_key *skey) $/;"	f
ECB_DEC	src/ciphers/aes/aes.c	41;"	d	file:
ECB_DONE	src/ciphers/aes/aes.c	/^void ECB_DONE(symmetric_key *skey)$/;"	f
ECB_DONE	src/ciphers/aes/aes.c	42;"	d	file:
ECB_DONE	src/ciphers/aes/aes.c	69;"	d	file:
ECB_ENC	src/ciphers/aes/aes.c	/^int ECB_ENC(const unsigned char *pt, unsigned char *ct, symmetric_key *skey) $/;"	f
ECB_ENC	src/ciphers/aes/aes.c	40;"	d	file:
ECB_ENC	src/ciphers/aes/aes.c	67;"	d	file:
ECB_KS	src/ciphers/aes/aes.c	/^int ECB_KS(int *keysize)$/;"	f
ECB_KS	src/ciphers/aes/aes.c	44;"	d	file:
ECB_KS	src/ciphers/aes/aes.c	68;"	d	file:
ECB_TEST	src/ciphers/aes/aes.c	/^int ECB_TEST(void)$/;"	f
ECB_TEST	src/ciphers/aes/aes.c	43;"	d	file:
ECC112	libtomcrypt/headers/tomcrypt_custom.h	344;"	d
ECC112	src/headers/tomcrypt_custom.h	343;"	d
ECC128	libtomcrypt/headers/tomcrypt_custom.h	345;"	d
ECC128	src/headers/tomcrypt_custom.h	344;"	d
ECC160	libtomcrypt/headers/tomcrypt_custom.h	346;"	d
ECC160	src/headers/tomcrypt_custom.h	345;"	d
ECC192	libtomcrypt/headers/tomcrypt_custom.h	347;"	d
ECC192	src/headers/tomcrypt_custom.h	346;"	d
ECC224	libtomcrypt/headers/tomcrypt_custom.h	348;"	d
ECC224	src/headers/tomcrypt_custom.h	347;"	d
ECC256	libtomcrypt/headers/tomcrypt_custom.h	349;"	d
ECC256	src/headers/tomcrypt_custom.h	348;"	d
ECC384	libtomcrypt/headers/tomcrypt_custom.h	350;"	d
ECC384	src/headers/tomcrypt_custom.h	349;"	d
ECC521	libtomcrypt/headers/tomcrypt_custom.h	351;"	d
ECC521	src/headers/tomcrypt_custom.h	350;"	d
ECC_BUF_SIZE	src/headers/tomcrypt_pk.h	150;"	d
ECC_MAXSIZE	src/headers/tomcrypt_pk.h	153;"	d
EN0	src/ciphers/des.c	20;"	d	file:
ENCRYPT_ONLY	src/mac/pelican/pelican.c	20;"	d	file:
ENDIAN_32BITWORD	libtomcrypt/headers/tomcrypt_cfg.h	108;"	d
ENDIAN_32BITWORD	libtomcrypt/headers/tomcrypt_cfg.h	61;"	d
ENDIAN_32BITWORD	libtomcrypt/headers/tomcrypt_cfg.h	83;"	d
ENDIAN_32BITWORD	libtomcrypt/headers/tomcrypt_cfg.h	94;"	d
ENDIAN_32BITWORD	src/headers/tomcrypt_cfg.h	109;"	d
ENDIAN_32BITWORD	src/headers/tomcrypt_cfg.h	61;"	d
ENDIAN_32BITWORD	src/headers/tomcrypt_cfg.h	83;"	d
ENDIAN_32BITWORD	src/headers/tomcrypt_cfg.h	94;"	d
ENDIAN_64BITWORD	libtomcrypt/headers/tomcrypt_cfg.h	109;"	d
ENDIAN_64BITWORD	libtomcrypt/headers/tomcrypt_cfg.h	69;"	d
ENDIAN_64BITWORD	libtomcrypt/headers/tomcrypt_cfg.h	75;"	d
ENDIAN_64BITWORD	libtomcrypt/headers/tomcrypt_cfg.h	92;"	d
ENDIAN_64BITWORD	src/headers/tomcrypt_cfg.h	110;"	d
ENDIAN_64BITWORD	src/headers/tomcrypt_cfg.h	69;"	d
ENDIAN_64BITWORD	src/headers/tomcrypt_cfg.h	75;"	d
ENDIAN_64BITWORD	src/headers/tomcrypt_cfg.h	92;"	d
ENDIAN_BIG	libtomcrypt/headers/tomcrypt_cfg.h	107;"	d
ENDIAN_BIG	libtomcrypt/headers/tomcrypt_cfg.h	82;"	d
ENDIAN_BIG	libtomcrypt/headers/tomcrypt_cfg.h	90;"	d
ENDIAN_BIG	src/headers/tomcrypt_cfg.h	108;"	d
ENDIAN_BIG	src/headers/tomcrypt_cfg.h	82;"	d
ENDIAN_BIG	src/headers/tomcrypt_cfg.h	90;"	d
ENDIAN_LITTLE	libtomcrypt/headers/tomcrypt_cfg.h	106;"	d
ENDIAN_LITTLE	libtomcrypt/headers/tomcrypt_cfg.h	60;"	d
ENDIAN_LITTLE	libtomcrypt/headers/tomcrypt_cfg.h	68;"	d
ENDIAN_LITTLE	libtomcrypt/headers/tomcrypt_cfg.h	74;"	d
ENDIAN_LITTLE	src/headers/tomcrypt_cfg.h	107;"	d
ENDIAN_LITTLE	src/headers/tomcrypt_cfg.h	60;"	d
ENDIAN_LITTLE	src/headers/tomcrypt_cfg.h	68;"	d
ENDIAN_LITTLE	src/headers/tomcrypt_cfg.h	74;"	d
ENDIAN_NEUTRAL	libtomcrypt/headers/tomcrypt_cfg.h	127;"	d
ENDIAN_NEUTRAL	src/headers/tomcrypt_cfg.h	128;"	d
EXP	src/ciphers/safer/safer.c	92;"	d	file:
F	src/ciphers/blowfish.c	378;"	d	file:
F	src/ciphers/blowfish.c	380;"	d	file:
F	src/ciphers/kseed.c	188;"	d	file:
F	src/hashes/md4.c	52;"	d	file:
F	src/hashes/md5.c	39;"	d	file:
F	src/hashes/rmd128.c	45;"	d	file:
F	src/hashes/rmd160.c	45;"	d	file:
F	src/hashes/rmd256.c	39;"	d	file:
F	src/hashes/rmd320.c	39;"	d	file:
F0	src/hashes/sha1.c	39;"	d	file:
F1	src/hashes/sha1.c	40;"	d	file:
F2	src/hashes/sha1.c	41;"	d	file:
F3	src/hashes/sha1.c	42;"	d	file:
FF	src/hashes/md4.c	62;"	d	file:
FF	src/hashes/md5.c	46;"	d	file:
FF	src/hashes/md5.c	85;"	d	file:
FF	src/hashes/rmd128.c	51;"	d	file:
FF	src/hashes/rmd160.c	52;"	d	file:
FF	src/hashes/rmd256.c	45;"	d	file:
FF	src/hashes/rmd320.c	46;"	d	file:
FF0	src/hashes/sha1.c	135;"	d	file:
FF0	src/hashes/sha1.c	74;"	d	file:
FF1	src/hashes/sha1.c	136;"	d	file:
FF1	src/hashes/sha1.c	75;"	d	file:
FF2	src/hashes/sha1.c	137;"	d	file:
FF2	src/hashes/sha1.c	76;"	d	file:
FF3	src/hashes/sha1.c	138;"	d	file:
FF3	src/hashes/sha1.c	77;"	d	file:
FFF	src/hashes/rmd128.c	67;"	d	file:
FFF	src/hashes/rmd160.c	77;"	d	file:
FFF	src/hashes/rmd256.c	61;"	d	file:
FFF	src/hashes/rmd320.c	71;"	d	file:
FI	src/ciphers/cast5.c	/^INLINE static ulong32 FI(ulong32 R, ulong32 Km, ulong32 Kr)$/;"	f	file:
FI	src/ciphers/kasumi.c	/^static u16 FI( u16 in, u16 subkey )$/;"	f	file:
FII	src/ciphers/cast5.c	/^INLINE static ulong32 FII(ulong32 R, ulong32 Km, ulong32 Kr)$/;"	f	file:
FIII	src/ciphers/cast5.c	/^INLINE static ulong32 FIII(ulong32 R, ulong32 Km, ulong32 Kr)$/;"	f	file:
FL	src/ciphers/kasumi.c	/^static ulong32 FL( ulong32 in, int round_no, symmetric_key *key )$/;"	f	file:
FO	src/ciphers/kasumi.c	/^static ulong32 FO( ulong32 in, int round_no, symmetric_key *key)$/;"	f	file:
FOLD	src/prngs/sober128.c	38;"	d	file:
FOLDP	src/prngs/sober128.c	41;"	d	file:
FP_ENTRIES	src/math/fp/ltc_ecc_fp_mulmod.c	23;"	d	file:
FP_LUT	src/math/fp/ltc_ecc_fp_mulmod.c	28;"	d	file:
G	src/ciphers/kseed.c	186;"	d	file:
G	src/hashes/md4.c	53;"	d	file:
G	src/hashes/md5.c	40;"	d	file:
G	src/hashes/rmd128.c	46;"	d	file:
G	src/hashes/rmd160.c	46;"	d	file:
G	src/hashes/rmd256.c	40;"	d	file:
G	src/hashes/rmd320.c	40;"	d	file:
GAMMA	src/ciphers/noekeon.c	53;"	d	file:
GB	src/ciphers/cast5.c	395;"	d	file:
GB	src/ciphers/cast5.c	397;"	d	file:
GB	src/hashes/whirl/whirl.c	43;"	d	file:
GCM_DECRYPT	src/headers/tomcrypt_mac.h	228;"	d
GCM_ENCRYPT	src/headers/tomcrypt_mac.h	227;"	d
GG	src/hashes/md4.c	66;"	d	file:
GG	src/hashes/md5.c	49;"	d	file:
GG	src/hashes/md5.c	88;"	d	file:
GG	src/hashes/rmd128.c	55;"	d	file:
GG	src/hashes/rmd160.c	57;"	d	file:
GG	src/hashes/rmd256.c	49;"	d	file:
GG	src/hashes/rmd320.c	51;"	d	file:
GGG	src/hashes/rmd128.c	71;"	d	file:
GGG	src/hashes/rmd160.c	82;"	d	file:
GGG	src/hashes/rmd256.c	65;"	d	file:
GGG	src/hashes/rmd320.c	76;"	d	file:
Gamma0	src/hashes/sha2/sha256.c	64;"	d	file:
Gamma0	src/hashes/sha2/sha512.c	89;"	d	file:
Gamma1	src/hashes/sha2/sha256.c	65;"	d	file:
Gamma1	src/hashes/sha2/sha512.c	90;"	d	file:
Gx	src/headers/tomcrypt_pk.h	/^   char *Gx;$/;"	m	struct:__anon39
Gy	src/headers/tomcrypt_pk.h	/^   char *Gy;$/;"	m	struct:__anon39
H	src/hashes/md4.c	54;"	d	file:
H	src/hashes/md5.c	41;"	d	file:
H	src/hashes/rmd128.c	47;"	d	file:
H	src/hashes/rmd160.c	47;"	d	file:
H	src/hashes/rmd256.c	41;"	d	file:
H	src/hashes/rmd320.c	41;"	d	file:
H	src/headers/tomcrypt_mac.h	/^   unsigned char       H[16],        \/* multiplier *\/$/;"	m	struct:__anon49
HASH_PROCESS	src/headers/tomcrypt_hash.h	341;"	d
HH	src/hashes/md4.c	70;"	d	file:
HH	src/hashes/md5.c	52;"	d	file:
HH	src/hashes/md5.c	91;"	d	file:
HH	src/hashes/rmd128.c	59;"	d	file:
HH	src/hashes/rmd160.c	62;"	d	file:
HH	src/hashes/rmd256.c	53;"	d	file:
HH	src/hashes/rmd320.c	56;"	d	file:
HHH	src/hashes/rmd128.c	75;"	d	file:
HHH	src/hashes/rmd160.c	87;"	d	file:
HHH	src/hashes/rmd256.c	69;"	d	file:
HHH	src/hashes/rmd320.c	81;"	d	file:
Hash_state	src/headers/tomcrypt_hash.h	/^typedef union Hash_state {$/;"	u
Hmac_state	src/headers/tomcrypt_mac.h	/^typedef struct Hmac_state {$/;"	s
I	src/hashes/md5.c	42;"	d	file:
I	src/hashes/rmd128.c	48;"	d	file:
I	src/hashes/rmd160.c	48;"	d	file:
I	src/hashes/rmd256.c	42;"	d	file:
I	src/hashes/rmd320.c	42;"	d	file:
ID	src/headers/tomcrypt_cipher.h	/^   unsigned char ID;$/;"	m	struct:ltc_cipher_descriptor
ID	src/headers/tomcrypt_hash.h	/^    unsigned char ID;$/;"	m	struct:ltc_hash_descriptor
II	src/hashes/md5.c	55;"	d	file:
II	src/hashes/md5.c	94;"	d	file:
II	src/hashes/rmd128.c	63;"	d	file:
II	src/hashes/rmd160.c	67;"	d	file:
II	src/hashes/rmd256.c	57;"	d	file:
II	src/hashes/rmd320.c	61;"	d	file:
III	src/hashes/rmd128.c	79;"	d	file:
III	src/hashes/rmd160.c	92;"	d	file:
III	src/hashes/rmd256.c	73;"	d	file:
III	src/hashes/rmd320.c	86;"	d	file:
INITKONST	src/prngs/sober128.c	39;"	d	file:
INLINE	src/ciphers/cast5.c	503;"	d	file:
INLINE	src/ciphers/cast5.c	505;"	d	file:
INLINE	src/hashes/tiger.c	559;"	d	file:
INLINE	src/hashes/tiger.c	561;"	d	file:
IPHT	src/ciphers/safer/safer.c	95;"	d	file:
IV	src/headers/tomcrypt_cipher.h	/^    unsigned char     IV[16],$/;"	m	struct:__anon35
IV	src/headers/tomcrypt_cipher.h	/^   unsigned char       IV[MAXBLOCKSIZE], $/;"	m	struct:__anon31
IV	src/headers/tomcrypt_cipher.h	/^   unsigned char       IV[MAXBLOCKSIZE],$/;"	m	struct:__anon36
IV	src/headers/tomcrypt_cipher.h	/^   unsigned char       IV[MAXBLOCKSIZE];$/;"	m	struct:__anon32
IV	src/headers/tomcrypt_cipher.h	/^   unsigned char       IV[MAXBLOCKSIZE];$/;"	m	struct:__anon33
IV	src/headers/tomcrypt_mac.h	/^                 IV[MAXBLOCKSIZE];$/;"	m	struct:__anon50
IV	src/headers/tomcrypt_mac.h	/^                 IV[MAXBLOCKSIZE];$/;"	m	struct:__anon51
IV	src/headers/tomcrypt_prng.h	/^                  IV[16];     \/* IV for CTR mode *\/$/;"	m	struct:fortuna_prng
J	src/hashes/rmd160.c	49;"	d	file:
J	src/hashes/rmd320.c	43;"	d	file:
JJ	src/hashes/rmd160.c	72;"	d	file:
JJ	src/hashes/rmd320.c	66;"	d	file:
JJJ	src/hashes/rmd160.c	97;"	d	file:
JJJ	src/hashes/rmd320.c	91;"	d	file:
K	src/hashes/sha2/sha256.c	/^static const ulong32 K[64] = {$/;"	v	file:
K	src/hashes/sha2/sha512.c	/^static const ulong64 K[80] = {$/;"	v	file:
K	src/headers/tomcrypt_cipher.h	/^      ulong32 K[40];$/;"	m	struct:twofish_key
K	src/headers/tomcrypt_cipher.h	/^      ulong32 S[4][256], K[40];$/;"	m	struct:twofish_key
K	src/headers/tomcrypt_cipher.h	/^    ulong32 K[32], dK[32];$/;"	m	struct:kseed_key
K	src/headers/tomcrypt_cipher.h	/^    ulong32 K[32], keylen;$/;"	m	struct:cast5_key
K	src/headers/tomcrypt_cipher.h	/^    ulong32 K[4], dK[4];$/;"	m	struct:noekeon_key
K	src/headers/tomcrypt_cipher.h	/^   ulong32 K[18];$/;"	m	struct:blowfish_key
K	src/headers/tomcrypt_cipher.h	/^   ulong32 K[44];$/;"	m	struct:rc6_key
K	src/headers/tomcrypt_cipher.h	/^   ulong32 K[50];$/;"	m	struct:rc5_key
K	src/headers/tomcrypt_cipher.h	/^   unsigned char K[33][16];$/;"	m	struct:saferp_key
K	src/headers/tomcrypt_mac.h	/^    symmetric_key K;$/;"	m	struct:pelican_state
K	src/headers/tomcrypt_mac.h	/^   symmetric_key       K;$/;"	m	struct:__anon49
K	src/headers/tomcrypt_mac.h	/^   unsigned char K[3][MAXBLOCKSIZE],$/;"	m	struct:__anon50
K	src/headers/tomcrypt_prng.h	/^    unsigned char K[32],      \/* the current key *\/$/;"	m	struct:fortuna_prng
KARATSUBA_MUL_CUTOFF	libtommath/bncore.c	/^int KARATSUBA_MUL_CUTOFF = 80,	\/* Min. number of digits before Karatsuba multiplication is used. *\/$/;"	v
KARATSUBA_SQR_CUTOFF	libtommath/bncore.c	/^    KARATSUBA_SQR_CUTOFF = 120,	\/* Min. number of digits before Karatsuba squaring is used. *\/$/;"	v
KAT_key	src/headers/tomcrypt_pk.h	/^typedef struct KAT_key {$/;"	s
KCi	src/ciphers/kseed.c	/^static const ulong32 KCi[16] = {$/;"	v	file:
KERNELDIR	Makefile	/^KERNELDIR ?= \/lib\/modules\/$(shell uname -r)\/build$/;"	m
KEYP	src/prngs/sober128.c	40;"	d	file:
KEYSIZE	src/ciphers/khazad.c	35;"	d	file:
KEYSIZEB	src/ciphers/khazad.c	36;"	d	file:
KEY_DATA_MAX_SIZE	libtomcrypt/headers/ncr-int.h	13;"	d
KIi1	src/headers/tomcrypt_cipher.h	/^            KIi1[8], KIi2[8], KIi3[8];$/;"	m	struct:kasumi_key
KIi2	src/headers/tomcrypt_cipher.h	/^            KIi1[8], KIi2[8], KIi3[8];$/;"	m	struct:kasumi_key
KIi3	src/headers/tomcrypt_cipher.h	/^            KIi1[8], KIi2[8], KIi3[8];$/;"	m	struct:kasumi_key
KLi1	src/headers/tomcrypt_cipher.h	/^    ulong32 KLi1[8], KLi2[8],$/;"	m	struct:kasumi_key
KLi2	src/headers/tomcrypt_cipher.h	/^    ulong32 KLi1[8], KLi2[8],$/;"	m	struct:kasumi_key
KOi1	src/headers/tomcrypt_cipher.h	/^            KOi1[8], KOi2[8], KOi3[8],$/;"	m	struct:kasumi_key
KOi2	src/headers/tomcrypt_cipher.h	/^            KOi1[8], KOi2[8], KOi3[8],$/;"	m	struct:kasumi_key
KOi3	src/headers/tomcrypt_cipher.h	/^            KOi1[8], KOi2[8], KOi3[8],$/;"	m	struct:kasumi_key
Korder	src/hashes/md5.c	/^static const ulong32 Korder[64] = {$/;"	v	file:
L	src/headers/tomcrypt_mac.h	/^   unsigned char     L[MAXBLOCKSIZE],         \/* L value *\/$/;"	m	struct:__anon48
LIMIT_TYPE_KEY	libtomcrypt/headers/ncr-int.h	/^	LIMIT_TYPE_KEY,$/;"	e	enum:__anon20
LOAD32H	libtomcrypt/headers/tomcrypt_macros.h	197;"	d
LOAD32H	libtomcrypt/headers/tomcrypt_macros.h	217;"	d
LOAD32H	libtomcrypt/headers/tomcrypt_macros.h	48;"	d
LOAD32H	libtomcrypt/headers/tomcrypt_macros.h	79;"	d
LOAD32H	libtomcrypt/headers/tomcrypt_macros.h	91;"	d
LOAD32H	src/headers/tomcrypt_macros.h	198;"	d
LOAD32H	src/headers/tomcrypt_macros.h	218;"	d
LOAD32H	src/headers/tomcrypt_macros.h	48;"	d
LOAD32H	src/headers/tomcrypt_macros.h	79;"	d
LOAD32H	src/headers/tomcrypt_macros.h	91;"	d
LOAD32L	libtomcrypt/headers/tomcrypt_macros.h	136;"	d
LOAD32L	libtomcrypt/headers/tomcrypt_macros.h	156;"	d
LOAD32L	libtomcrypt/headers/tomcrypt_macros.h	174;"	d
LOAD32L	libtomcrypt/headers/tomcrypt_macros.h	26;"	d
LOAD32L	src/headers/tomcrypt_macros.h	137;"	d
LOAD32L	src/headers/tomcrypt_macros.h	157;"	d
LOAD32L	src/headers/tomcrypt_macros.h	175;"	d
LOAD32L	src/headers/tomcrypt_macros.h	26;"	d
LOAD64H	libtomcrypt/headers/tomcrypt_macros.h	109;"	d
LOAD64H	libtomcrypt/headers/tomcrypt_macros.h	123;"	d
LOAD64H	libtomcrypt/headers/tomcrypt_macros.h	206;"	d
LOAD64H	libtomcrypt/headers/tomcrypt_macros.h	223;"	d
LOAD64H	libtomcrypt/headers/tomcrypt_macros.h	60;"	d
LOAD64H	src/headers/tomcrypt_macros.h	110;"	d
LOAD64H	src/headers/tomcrypt_macros.h	124;"	d
LOAD64H	src/headers/tomcrypt_macros.h	207;"	d
LOAD64H	src/headers/tomcrypt_macros.h	224;"	d
LOAD64H	src/headers/tomcrypt_macros.h	60;"	d
LOAD64L	libtomcrypt/headers/tomcrypt_macros.h	145;"	d
LOAD64L	libtomcrypt/headers/tomcrypt_macros.h	162;"	d
LOAD64L	libtomcrypt/headers/tomcrypt_macros.h	186;"	d
LOAD64L	libtomcrypt/headers/tomcrypt_macros.h	38;"	d
LOAD64L	src/headers/tomcrypt_macros.h	146;"	d
LOAD64L	src/headers/tomcrypt_macros.h	163;"	d
LOAD64L	src/headers/tomcrypt_macros.h	187;"	d
LOAD64L	src/headers/tomcrypt_macros.h	38;"	d
LOG	src/ciphers/safer/safer.c	93;"	d	file:
LRW_DECRYPT	src/headers/tomcrypt_cipher.h	819;"	d
LRW_ENCRYPT	src/headers/tomcrypt_cipher.h	818;"	d
LRW_TABLES	libtomcrypt/headers/tomcrypt_custom.h	182;"	d
LRW_TABLES	src/headers/tomcrypt_custom.h	181;"	d
LT	src/ciphers/safer/saferp.c	124;"	d	file:
LT	src/ciphers/safer/saferp.c	165;"	d	file:
LT	src/ciphers/safer/saferp.c	166;"	d	file:
LTC_ANUBIS	libtomcrypt/headers/tomcrypt_custom.h	157;"	d
LTC_ANUBIS	src/headers/tomcrypt_custom.h	155;"	d
LTC_ANUBIS_TWEAK	libtomcrypt/headers/tomcrypt_custom.h	158;"	d
LTC_ANUBIS_TWEAK	src/headers/tomcrypt_custom.h	156;"	d
LTC_ARGCHK	libtomcrypt/headers/tomcrypt_argchk.h	13;"	d
LTC_ARGCHK	libtomcrypt/headers/tomcrypt_argchk.h	18;"	d
LTC_ARGCHK	libtomcrypt/headers/tomcrypt_argchk.h	23;"	d
LTC_ARGCHK	libtomcrypt/headers/tomcrypt_argchk.h	28;"	d
LTC_ARGCHK	libtomcrypt/headers/tomcrypt_argchk.h	7;"	d
LTC_ARGCHK	src/headers/tomcrypt_argchk.h	15;"	d
LTC_ARGCHK	src/headers/tomcrypt_argchk.h	20;"	d
LTC_ARGCHK	src/headers/tomcrypt_argchk.h	25;"	d
LTC_ARGCHK	src/headers/tomcrypt_argchk.h	30;"	d
LTC_ARGCHK	src/headers/tomcrypt_argchk.h	9;"	d
LTC_ARGCHKVD	libtomcrypt/headers/tomcrypt_argchk.h	14;"	d
LTC_ARGCHKVD	libtomcrypt/headers/tomcrypt_argchk.h	19;"	d
LTC_ARGCHKVD	libtomcrypt/headers/tomcrypt_argchk.h	24;"	d
LTC_ARGCHKVD	libtomcrypt/headers/tomcrypt_argchk.h	29;"	d
LTC_ARGCHKVD	libtomcrypt/headers/tomcrypt_argchk.h	8;"	d
LTC_ARGCHKVD	src/headers/tomcrypt_argchk.h	10;"	d
LTC_ARGCHKVD	src/headers/tomcrypt_argchk.h	16;"	d
LTC_ARGCHKVD	src/headers/tomcrypt_argchk.h	21;"	d
LTC_ARGCHKVD	src/headers/tomcrypt_argchk.h	26;"	d
LTC_ARGCHKVD	src/headers/tomcrypt_argchk.h	31;"	d
LTC_ASN1_BIT_STRING	libtomcrypt/headers/tomcrypt_pk.h	/^	LTC_ASN1_BIT_STRING,$/;"	e	enum:__anon14
LTC_ASN1_BIT_STRING	src/headers/tomcrypt_pk.h	/^ LTC_ASN1_BIT_STRING,$/;"	e	enum:__anon43
LTC_ASN1_BOOLEAN	libtomcrypt/headers/tomcrypt_pk.h	/^	LTC_ASN1_BOOLEAN,$/;"	e	enum:__anon14
LTC_ASN1_BOOLEAN	src/headers/tomcrypt_pk.h	/^ LTC_ASN1_BOOLEAN,$/;"	e	enum:__anon43
LTC_ASN1_CHOICE	libtomcrypt/headers/tomcrypt_pk.h	/^	LTC_ASN1_CHOICE,$/;"	e	enum:__anon14
LTC_ASN1_CHOICE	src/headers/tomcrypt_pk.h	/^ LTC_ASN1_CHOICE,$/;"	e	enum:__anon43
LTC_ASN1_EOL	libtomcrypt/headers/tomcrypt_pk.h	/^	LTC_ASN1_EOL,$/;"	e	enum:__anon14
LTC_ASN1_EOL	src/headers/tomcrypt_pk.h	/^ LTC_ASN1_EOL,$/;"	e	enum:__anon43
LTC_ASN1_IA5_STRING	libtomcrypt/headers/tomcrypt_pk.h	/^	LTC_ASN1_IA5_STRING,$/;"	e	enum:__anon14
LTC_ASN1_IA5_STRING	src/headers/tomcrypt_pk.h	/^ LTC_ASN1_IA5_STRING,$/;"	e	enum:__anon43
LTC_ASN1_INTEGER	libtomcrypt/headers/tomcrypt_pk.h	/^	LTC_ASN1_INTEGER,$/;"	e	enum:__anon14
LTC_ASN1_INTEGER	src/headers/tomcrypt_pk.h	/^ LTC_ASN1_INTEGER,$/;"	e	enum:__anon43
LTC_ASN1_NULL	libtomcrypt/headers/tomcrypt_pk.h	/^	LTC_ASN1_NULL,$/;"	e	enum:__anon14
LTC_ASN1_NULL	src/headers/tomcrypt_pk.h	/^ LTC_ASN1_NULL,$/;"	e	enum:__anon43
LTC_ASN1_OBJECT_IDENTIFIER	libtomcrypt/headers/tomcrypt_pk.h	/^	LTC_ASN1_OBJECT_IDENTIFIER,$/;"	e	enum:__anon14
LTC_ASN1_OBJECT_IDENTIFIER	src/headers/tomcrypt_pk.h	/^ LTC_ASN1_OBJECT_IDENTIFIER,$/;"	e	enum:__anon43
LTC_ASN1_OCTET_STRING	libtomcrypt/headers/tomcrypt_pk.h	/^	LTC_ASN1_OCTET_STRING,$/;"	e	enum:__anon14
LTC_ASN1_OCTET_STRING	src/headers/tomcrypt_pk.h	/^ LTC_ASN1_OCTET_STRING,$/;"	e	enum:__anon43
LTC_ASN1_PRINTABLE_STRING	libtomcrypt/headers/tomcrypt_pk.h	/^	LTC_ASN1_PRINTABLE_STRING,$/;"	e	enum:__anon14
LTC_ASN1_PRINTABLE_STRING	src/headers/tomcrypt_pk.h	/^ LTC_ASN1_PRINTABLE_STRING,$/;"	e	enum:__anon43
LTC_ASN1_SEQUENCE	libtomcrypt/headers/tomcrypt_pk.h	/^	LTC_ASN1_SEQUENCE,$/;"	e	enum:__anon14
LTC_ASN1_SEQUENCE	src/headers/tomcrypt_pk.h	/^ LTC_ASN1_SEQUENCE,$/;"	e	enum:__anon43
LTC_ASN1_SET	libtomcrypt/headers/tomcrypt_pk.h	/^	LTC_ASN1_SET,$/;"	e	enum:__anon14
LTC_ASN1_SET	src/headers/tomcrypt_pk.h	/^ LTC_ASN1_SET,$/;"	e	enum:__anon43
LTC_ASN1_SETOF	libtomcrypt/headers/tomcrypt_pk.h	/^	LTC_ASN1_SETOF$/;"	e	enum:__anon14
LTC_ASN1_SETOF	src/headers/tomcrypt_pk.h	/^ LTC_ASN1_SETOF$/;"	e	enum:__anon43
LTC_ASN1_SHORT_INTEGER	libtomcrypt/headers/tomcrypt_pk.h	/^	LTC_ASN1_SHORT_INTEGER,$/;"	e	enum:__anon14
LTC_ASN1_SHORT_INTEGER	src/headers/tomcrypt_pk.h	/^ LTC_ASN1_SHORT_INTEGER,$/;"	e	enum:__anon43
LTC_ASN1_UTCTIME	libtomcrypt/headers/tomcrypt_pk.h	/^	LTC_ASN1_UTCTIME,$/;"	e	enum:__anon14
LTC_ASN1_UTCTIME	src/headers/tomcrypt_pk.h	/^ LTC_ASN1_UTCTIME,$/;"	e	enum:__anon43
LTC_ASN1_UTF8_STRING	libtomcrypt/headers/tomcrypt_pk.h	/^	LTC_ASN1_UTF8_STRING,$/;"	e	enum:__anon14
LTC_ASN1_UTF8_STRING	src/headers/tomcrypt_pk.h	/^ LTC_ASN1_UTF8_STRING,$/;"	e	enum:__anon43
LTC_BASE64	libtomcrypt/headers/tomcrypt_custom.h	249;"	d
LTC_BASE64	src/headers/tomcrypt_custom.h	248;"	d
LTC_BLOWFISH	libtomcrypt/headers/tomcrypt_custom.h	133;"	d
LTC_BLOWFISH	libtomcrypt/headers/tomcrypt_custom.h	75;"	d
LTC_BLOWFISH	src/headers/tomcrypt_custom.h	131;"	d
LTC_BLOWFISH	src/headers/tomcrypt_custom.h	73;"	d
LTC_CALL	libtomcrypt/headers/tomcrypt_cfg.h	11;"	d
LTC_CALL	libtomcrypt/headers/tomcrypt_cfg.h	14;"	d
LTC_CALL	src/headers/tomcrypt_cfg.h	11;"	d
LTC_CALL	src/headers/tomcrypt_cfg.h	14;"	d
LTC_CAST5	libtomcrypt/headers/tomcrypt_custom.h	152;"	d
LTC_CAST5	libtomcrypt/headers/tomcrypt_custom.h	77;"	d
LTC_CAST5	src/headers/tomcrypt_custom.h	150;"	d
LTC_CAST5	src/headers/tomcrypt_custom.h	75;"	d
LTC_CBC_MODE	libtomcrypt/headers/tomcrypt_custom.h	170;"	d
LTC_CBC_MODE	libtomcrypt/headers/tomcrypt_custom.h	81;"	d
LTC_CBC_MODE	src/headers/tomcrypt_custom.h	169;"	d
LTC_CBC_MODE	src/headers/tomcrypt_custom.h	79;"	d
LTC_CCM_MODE	libtomcrypt/headers/tomcrypt_custom.h	233;"	d
LTC_CCM_MODE	libtomcrypt/headers/tomcrypt_custom.h	94;"	d
LTC_CCM_MODE	src/headers/tomcrypt_custom.h	232;"	d
LTC_CCM_MODE	src/headers/tomcrypt_custom.h	92;"	d
LTC_CFB_MODE	libtomcrypt/headers/tomcrypt_custom.h	167;"	d
LTC_CFB_MODE	src/headers/tomcrypt_custom.h	166;"	d
LTC_CHC_HASH	libtomcrypt/headers/tomcrypt_custom.h	193;"	d
LTC_CHC_HASH	src/headers/tomcrypt_custom.h	192;"	d
LTC_CTR_MODE	libtomcrypt/headers/tomcrypt_custom.h	171;"	d
LTC_CTR_MODE	libtomcrypt/headers/tomcrypt_custom.h	82;"	d
LTC_CTR_MODE	src/headers/tomcrypt_custom.h	170;"	d
LTC_CTR_MODE	src/headers/tomcrypt_custom.h	80;"	d
LTC_CTR_RFC3686	src/headers/tomcrypt_cipher.h	801;"	d
LTC_DER	libtomcrypt/headers/tomcrypt_custom.h	335;"	d
LTC_DER	src/headers/tomcrypt_custom.h	334;"	d
LTC_DES	libtomcrypt/headers/tomcrypt_custom.h	151;"	d
LTC_DES	libtomcrypt/headers/tomcrypt_custom.h	76;"	d
LTC_DES	src/headers/tomcrypt_custom.h	149;"	d
LTC_DES	src/headers/tomcrypt_custom.h	74;"	d
LTC_DEVRANDOM	libtomcrypt/headers/tomcrypt_custom.h	281;"	d
LTC_DEVRANDOM	libtomcrypt/headers/tomcrypt_custom.h	99;"	d
LTC_DEVRANDOM	src/headers/tomcrypt_custom.h	280;"	d
LTC_DEVRANDOM	src/headers/tomcrypt_custom.h	97;"	d
LTC_EAX_MODE	libtomcrypt/headers/tomcrypt_custom.h	227;"	d
LTC_EAX_MODE	src/headers/tomcrypt_custom.h	226;"	d
LTC_ECB_MODE	libtomcrypt/headers/tomcrypt_custom.h	169;"	d
LTC_ECB_MODE	libtomcrypt/headers/tomcrypt_custom.h	80;"	d
LTC_ECB_MODE	src/headers/tomcrypt_custom.h	168;"	d
LTC_ECB_MODE	src/headers/tomcrypt_custom.h	78;"	d
LTC_ECC_SHAMIR	libtomcrypt/headers/tomcrypt_custom.h	314;"	d
LTC_ECC_SHAMIR	src/headers/tomcrypt_custom.h	313;"	d
LTC_EXPORT	libtomcrypt/headers/tomcrypt_cfg.h	19;"	d
LTC_EXPORT	src/headers/tomcrypt_cfg.h	19;"	d
LTC_F8_MODE	libtomcrypt/headers/tomcrypt_custom.h	174;"	d
LTC_F8_MODE	src/headers/tomcrypt_custom.h	173;"	d
LTC_F9_MODE	libtomcrypt/headers/tomcrypt_custom.h	218;"	d
LTC_F9_MODE	src/headers/tomcrypt_custom.h	217;"	d
LTC_FAST	libtomcrypt/headers/tomcrypt_cfg.h	100;"	d
LTC_FAST	libtomcrypt/headers/tomcrypt_cfg.h	110;"	d
LTC_FAST	libtomcrypt/headers/tomcrypt_cfg.h	62;"	d
LTC_FAST	libtomcrypt/headers/tomcrypt_cfg.h	76;"	d
LTC_FAST	libtomcrypt/headers/tomcrypt_cfg.h	84;"	d
LTC_FAST	src/headers/tomcrypt_cfg.h	101;"	d
LTC_FAST	src/headers/tomcrypt_cfg.h	111;"	d
LTC_FAST	src/headers/tomcrypt_cfg.h	62;"	d
LTC_FAST	src/headers/tomcrypt_cfg.h	76;"	d
LTC_FAST	src/headers/tomcrypt_cfg.h	84;"	d
LTC_FAST_TYPE	libtomcrypt/headers/tomcrypt_cfg.h	111;"	d
LTC_FAST_TYPE	libtomcrypt/headers/tomcrypt_cfg.h	63;"	d
LTC_FAST_TYPE	libtomcrypt/headers/tomcrypt_cfg.h	77;"	d
LTC_FAST_TYPE	libtomcrypt/headers/tomcrypt_cfg.h	85;"	d
LTC_FAST_TYPE	src/headers/tomcrypt_cfg.h	112;"	d
LTC_FAST_TYPE	src/headers/tomcrypt_cfg.h	63;"	d
LTC_FAST_TYPE	src/headers/tomcrypt_cfg.h	77;"	d
LTC_FAST_TYPE	src/headers/tomcrypt_cfg.h	85;"	d
LTC_FORTUNA	libtomcrypt/headers/tomcrypt_custom.h	271;"	d
LTC_FORTUNA	src/headers/tomcrypt_custom.h	270;"	d
LTC_FORTUNA_POOLS	libtomcrypt/headers/tomcrypt_custom.h	275;"	d
LTC_FORTUNA_POOLS	src/headers/tomcrypt_custom.h	274;"	d
LTC_FORTUNA_POOLS	src/prngs/fortuna.c	33;"	d	file:
LTC_FORTUNA_WD	libtomcrypt/headers/tomcrypt_custom.h	273;"	d
LTC_FORTUNA_WD	src/headers/tomcrypt_custom.h	272;"	d
LTC_GCM_MODE	libtomcrypt/headers/tomcrypt_custom.h	234;"	d
LTC_GCM_MODE	src/headers/tomcrypt_custom.h	233;"	d
LTC_GCM_MODE_AAD	src/headers/tomcrypt_mac.h	231;"	d
LTC_GCM_MODE_IV	src/headers/tomcrypt_mac.h	230;"	d
LTC_GCM_MODE_TEXT	src/headers/tomcrypt_mac.h	232;"	d
LTC_GCM_TABLES	libtomcrypt/headers/tomcrypt_custom.h	238;"	d
LTC_GCM_TABLES	src/headers/tomcrypt_custom.h	237;"	d
LTC_HMAC	libtomcrypt/headers/tomcrypt_custom.h	214;"	d
LTC_HMAC	libtomcrypt/headers/tomcrypt_custom.h	92;"	d
LTC_HMAC	src/headers/tomcrypt_custom.h	213;"	d
LTC_HMAC	src/headers/tomcrypt_custom.h	90;"	d
LTC_HMAC_BLOCKSIZE	src/mac/hmac/hmac_done.c	20;"	d	file:
LTC_HMAC_BLOCKSIZE	src/mac/hmac/hmac_init.c	20;"	d	file:
LTC_HMAC_BLOCKSIZE	src/mac/hmac/hmac_test.c	20;"	d	file:
LTC_KASUMI	libtomcrypt/headers/tomcrypt_custom.h	160;"	d
LTC_KASUMI	src/headers/tomcrypt_custom.h	158;"	d
LTC_KHAZAD	libtomcrypt/headers/tomcrypt_custom.h	156;"	d
LTC_KHAZAD	src/headers/tomcrypt_custom.h	154;"	d
LTC_KSEED	libtomcrypt/headers/tomcrypt_custom.h	159;"	d
LTC_KSEED	src/headers/tomcrypt_custom.h	157;"	d
LTC_LRW_MODE	libtomcrypt/headers/tomcrypt_custom.h	177;"	d
LTC_LRW_MODE	src/headers/tomcrypt_custom.h	176;"	d
LTC_LTC_PKCS_1_EME	libtomcrypt/headers/tomcrypt_pkcs.h	/^	LTC_LTC_PKCS_1_EME = 2	\/* Block type 2 (LTC_PKCS #1 v1.5 encryption padding) *\/$/;"	e	enum:ltc_pkcs_1_v1_5_blocks
LTC_LTC_PKCS_1_EME	src/headers/tomcrypt_pkcs.h	/^  LTC_LTC_PKCS_1_EME    = 2         \/* Block type 2 (LTC_PKCS #1 v1.5 encryption padding) *\/$/;"	e	enum:ltc_pkcs_1_v1_5_blocks
LTC_LTC_PKCS_1_EMSA	libtomcrypt/headers/tomcrypt_pkcs.h	/^	LTC_LTC_PKCS_1_EMSA = 1,	\/* Block type 1 (LTC_PKCS #1 v1.5 signature padding) *\/$/;"	e	enum:ltc_pkcs_1_v1_5_blocks
LTC_LTC_PKCS_1_EMSA	src/headers/tomcrypt_pkcs.h	/^  LTC_LTC_PKCS_1_EMSA   = 1,        \/* Block type 1 (LTC_PKCS #1 v1.5 signature padding) *\/$/;"	e	enum:ltc_pkcs_1_v1_5_blocks
LTC_LTC_PKCS_1_OAEP	libtomcrypt/headers/tomcrypt_pkcs.h	/^	LTC_LTC_PKCS_1_OAEP = 2,	\/* LTC_PKCS #1 v2.0 encryption padding *\/$/;"	e	enum:ltc_pkcs_1_paddings
LTC_LTC_PKCS_1_OAEP	src/headers/tomcrypt_pkcs.h	/^  LTC_LTC_PKCS_1_OAEP   = 2,        \/* LTC_PKCS #1 v2.0 encryption padding *\/$/;"	e	enum:ltc_pkcs_1_paddings
LTC_LTC_PKCS_1_PSS	libtomcrypt/headers/tomcrypt_pkcs.h	/^	LTC_LTC_PKCS_1_PSS = 3	\/* LTC_PKCS #1 v2.1 signature padding *\/$/;"	e	enum:ltc_pkcs_1_paddings
LTC_LTC_PKCS_1_PSS	src/headers/tomcrypt_pkcs.h	/^  LTC_LTC_PKCS_1_PSS    = 3         \/* LTC_PKCS #1 v2.1 signature padding *\/$/;"	e	enum:ltc_pkcs_1_paddings
LTC_LTC_PKCS_1_V1_5	libtomcrypt/headers/tomcrypt_pkcs.h	/^	LTC_LTC_PKCS_1_V1_5 = 1,	\/* LTC_PKCS #1 v1.5 padding (\\sa ltc_pkcs_1_v1_5_blocks) *\/$/;"	e	enum:ltc_pkcs_1_paddings
LTC_LTC_PKCS_1_V1_5	src/headers/tomcrypt_pkcs.h	/^  LTC_LTC_PKCS_1_V1_5   = 1,        \/* LTC_PKCS #1 v1.5 padding (\\sa ltc_pkcs_1_v1_5_blocks) *\/$/;"	e	enum:ltc_pkcs_1_paddings
LTC_MD2	libtomcrypt/headers/tomcrypt_custom.h	203;"	d
LTC_MD2	src/headers/tomcrypt_custom.h	202;"	d
LTC_MD4	libtomcrypt/headers/tomcrypt_custom.h	202;"	d
LTC_MD4	src/headers/tomcrypt_custom.h	201;"	d
LTC_MD5	libtomcrypt/headers/tomcrypt_custom.h	201;"	d
LTC_MD5	src/headers/tomcrypt_custom.h	200;"	d
LTC_MDSA	libtomcrypt/headers/tomcrypt_custom.h	308;"	d
LTC_MDSA	src/headers/tomcrypt_custom.h	307;"	d
LTC_MDSA_DELTA	libtomcrypt/headers/tomcrypt_pk.h	113;"	d
LTC_MDSA_DELTA	src/headers/tomcrypt_pk.h	304;"	d
LTC_MDSA_MAX_GROUP	libtomcrypt/headers/tomcrypt_pk.h	116;"	d
LTC_MDSA_MAX_GROUP	src/headers/tomcrypt_pk.h	307;"	d
LTC_MECC	libtomcrypt/headers/tomcrypt_custom.h	104;"	d
LTC_MECC	libtomcrypt/headers/tomcrypt_custom.h	311;"	d
LTC_MECC	src/headers/tomcrypt_custom.h	102;"	d
LTC_MECC	src/headers/tomcrypt_custom.h	310;"	d
LTC_MECC_ACCEL	libtomcrypt/headers/tomcrypt_custom.h	317;"	d
LTC_MECC_ACCEL	src/headers/tomcrypt_custom.h	316;"	d
LTC_MP_EQ	libtomcrypt/headers/tomcrypt_math.h	4;"	d
LTC_MP_EQ	src/headers/tomcrypt_math.h	4;"	d
LTC_MP_GT	libtomcrypt/headers/tomcrypt_math.h	5;"	d
LTC_MP_GT	src/headers/tomcrypt_math.h	5;"	d
LTC_MP_LT	libtomcrypt/headers/tomcrypt_math.h	3;"	d
LTC_MP_LT	src/headers/tomcrypt_math.h	3;"	d
LTC_MP_NO	libtomcrypt/headers/tomcrypt_math.h	7;"	d
LTC_MP_NO	src/headers/tomcrypt_math.h	7;"	d
LTC_MP_YES	libtomcrypt/headers/tomcrypt_math.h	8;"	d
LTC_MP_YES	src/headers/tomcrypt_math.h	8;"	d
LTC_MRSA	libtomcrypt/headers/tomcrypt_custom.h	103;"	d
LTC_MRSA	libtomcrypt/headers/tomcrypt_custom.h	302;"	d
LTC_MRSA	src/headers/tomcrypt_custom.h	101;"	d
LTC_MRSA	src/headers/tomcrypt_custom.h	301;"	d
LTC_MUTEX_GLOBAL	libtomcrypt/headers/tomcrypt_custom.h	377;"	d
LTC_MUTEX_GLOBAL	libtomcrypt/headers/tomcrypt_custom.h	387;"	d
LTC_MUTEX_GLOBAL	src/headers/tomcrypt_custom.h	376;"	d
LTC_MUTEX_GLOBAL	src/headers/tomcrypt_custom.h	386;"	d
LTC_MUTEX_INIT	libtomcrypt/headers/tomcrypt_custom.h	380;"	d
LTC_MUTEX_INIT	libtomcrypt/headers/tomcrypt_custom.h	390;"	d
LTC_MUTEX_INIT	src/headers/tomcrypt_custom.h	379;"	d
LTC_MUTEX_INIT	src/headers/tomcrypt_custom.h	389;"	d
LTC_MUTEX_LOCK	libtomcrypt/headers/tomcrypt_custom.h	381;"	d
LTC_MUTEX_LOCK	libtomcrypt/headers/tomcrypt_custom.h	391;"	d
LTC_MUTEX_LOCK	src/headers/tomcrypt_custom.h	380;"	d
LTC_MUTEX_LOCK	src/headers/tomcrypt_custom.h	390;"	d
LTC_MUTEX_PROTO	libtomcrypt/headers/tomcrypt_custom.h	378;"	d
LTC_MUTEX_PROTO	libtomcrypt/headers/tomcrypt_custom.h	388;"	d
LTC_MUTEX_PROTO	src/headers/tomcrypt_custom.h	377;"	d
LTC_MUTEX_PROTO	src/headers/tomcrypt_custom.h	387;"	d
LTC_MUTEX_TYPE	libtomcrypt/headers/tomcrypt_custom.h	379;"	d
LTC_MUTEX_TYPE	libtomcrypt/headers/tomcrypt_custom.h	389;"	d
LTC_MUTEX_TYPE	src/headers/tomcrypt_custom.h	378;"	d
LTC_MUTEX_TYPE	src/headers/tomcrypt_custom.h	388;"	d
LTC_MUTEX_UNLOCK	libtomcrypt/headers/tomcrypt_custom.h	382;"	d
LTC_MUTEX_UNLOCK	libtomcrypt/headers/tomcrypt_custom.h	392;"	d
LTC_MUTEX_UNLOCK	src/headers/tomcrypt_custom.h	381;"	d
LTC_MUTEX_UNLOCK	src/headers/tomcrypt_custom.h	391;"	d
LTC_NOEKEON	libtomcrypt/headers/tomcrypt_custom.h	153;"	d
LTC_NOEKEON	src/headers/tomcrypt_custom.h	151;"	d
LTC_NO_BSWAP	libtomcrypt/headers/tomcrypt_cfg.h	113;"	d
LTC_NO_BSWAP	src/headers/tomcrypt_cfg.h	114;"	d
LTC_NO_CIPHERS	libtomcrypt/headers/tomcrypt_custom.h	73;"	d
LTC_NO_CIPHERS	src/headers/tomcrypt_custom.h	71;"	d
LTC_NO_HASHES	libtomcrypt/headers/tomcrypt_custom.h	84;"	d
LTC_NO_HASHES	src/headers/tomcrypt_custom.h	82;"	d
LTC_NO_MACS	libtomcrypt/headers/tomcrypt_custom.h	91;"	d
LTC_NO_MACS	src/headers/tomcrypt_custom.h	89;"	d
LTC_NO_MODES	libtomcrypt/headers/tomcrypt_custom.h	79;"	d
LTC_NO_MODES	src/headers/tomcrypt_custom.h	77;"	d
LTC_NO_PK	libtomcrypt/headers/tomcrypt_custom.h	102;"	d
LTC_NO_PK	src/headers/tomcrypt_custom.h	100;"	d
LTC_NO_PRNGS	libtomcrypt/headers/tomcrypt_custom.h	96;"	d
LTC_NO_PRNGS	src/headers/tomcrypt_custom.h	94;"	d
LTC_NO_PROTOTYPES	libtomcrypt/headers/tomcrypt_custom.h	15;"	d
LTC_NO_PROTOTYPES	libtomcrypt/headers/tomcrypt_custom.h	21;"	d
LTC_NO_PROTOTYPES	libtomcrypt/headers/tomcrypt_custom.h	27;"	d
LTC_NO_PROTOTYPES	libtomcrypt/headers/tomcrypt_custom.h	34;"	d
LTC_NO_PROTOTYPES	libtomcrypt/headers/tomcrypt_custom.h	40;"	d
LTC_NO_PROTOTYPES	libtomcrypt/headers/tomcrypt_custom.h	46;"	d
LTC_NO_PROTOTYPES	libtomcrypt/headers/tomcrypt_custom.h	4;"	d
LTC_NO_PROTOTYPES	libtomcrypt/headers/tomcrypt_custom.h	52;"	d
LTC_NO_PROTOTYPES	libtomcrypt/headers/tomcrypt_custom.h	66;"	d
LTC_NO_PROTOTYPES	libtomcrypt/headers/tomcrypt_custom.h	9;"	d
LTC_NO_PROTOTYPES	src/headers/tomcrypt_custom.h	13;"	d
LTC_NO_PROTOTYPES	src/headers/tomcrypt_custom.h	19;"	d
LTC_NO_PROTOTYPES	src/headers/tomcrypt_custom.h	25;"	d
LTC_NO_PROTOTYPES	src/headers/tomcrypt_custom.h	32;"	d
LTC_NO_PROTOTYPES	src/headers/tomcrypt_custom.h	38;"	d
LTC_NO_PROTOTYPES	src/headers/tomcrypt_custom.h	44;"	d
LTC_NO_PROTOTYPES	src/headers/tomcrypt_custom.h	50;"	d
LTC_NO_PROTOTYPES	src/headers/tomcrypt_custom.h	64;"	d
LTC_NO_PROTOTYPES	src/headers/tomcrypt_custom.h	7;"	d
LTC_NO_ROLC	libtomcrypt/headers/tomcrypt_cfg.h	112;"	d
LTC_NO_ROLC	src/headers/tomcrypt_cfg.h	113;"	d
LTC_OCB_MODE	libtomcrypt/headers/tomcrypt_custom.h	232;"	d
LTC_OCB_MODE	src/headers/tomcrypt_custom.h	231;"	d
LTC_OFB_MODE	libtomcrypt/headers/tomcrypt_custom.h	168;"	d
LTC_OFB_MODE	src/headers/tomcrypt_custom.h	167;"	d
LTC_OMAC	libtomcrypt/headers/tomcrypt_custom.h	215;"	d
LTC_OMAC	libtomcrypt/headers/tomcrypt_custom.h	93;"	d
LTC_OMAC	src/headers/tomcrypt_custom.h	214;"	d
LTC_OMAC	src/headers/tomcrypt_custom.h	91;"	d
LTC_PELICAN	libtomcrypt/headers/tomcrypt_custom.h	219;"	d
LTC_PELICAN	src/headers/tomcrypt_custom.h	218;"	d
LTC_PKCS_1	libtomcrypt/headers/tomcrypt_custom.h	331;"	d
LTC_PKCS_1	libtomcrypt/headers/tomcrypt_custom.h	361;"	d
LTC_PKCS_1	src/headers/tomcrypt_custom.h	330;"	d
LTC_PKCS_1	src/headers/tomcrypt_custom.h	360;"	d
LTC_PKCS_5	libtomcrypt/headers/tomcrypt_custom.h	332;"	d
LTC_PKCS_5	src/headers/tomcrypt_custom.h	331;"	d
LTC_PMAC	libtomcrypt/headers/tomcrypt_custom.h	216;"	d
LTC_PMAC	src/headers/tomcrypt_custom.h	215;"	d
LTC_RC2	libtomcrypt/headers/tomcrypt_custom.h	134;"	d
LTC_RC2	src/headers/tomcrypt_custom.h	132;"	d
LTC_RC4	libtomcrypt/headers/tomcrypt_custom.h	268;"	d
LTC_RC4	src/headers/tomcrypt_custom.h	267;"	d
LTC_RC5	libtomcrypt/headers/tomcrypt_custom.h	135;"	d
LTC_RC5	src/headers/tomcrypt_custom.h	133;"	d
LTC_RC6	libtomcrypt/headers/tomcrypt_custom.h	136;"	d
LTC_RC6	src/headers/tomcrypt_custom.h	134;"	d
LTC_RIJNDAEL	libtomcrypt/headers/tomcrypt_custom.h	138;"	d
LTC_RIJNDAEL	libtomcrypt/headers/tomcrypt_custom.h	74;"	d
LTC_RIJNDAEL	src/headers/tomcrypt_custom.h	136;"	d
LTC_RIJNDAEL	src/headers/tomcrypt_custom.h	72;"	d
LTC_RIPEMD128	libtomcrypt/headers/tomcrypt_custom.h	204;"	d
LTC_RIPEMD128	src/headers/tomcrypt_custom.h	203;"	d
LTC_RIPEMD160	libtomcrypt/headers/tomcrypt_custom.h	205;"	d
LTC_RIPEMD160	src/headers/tomcrypt_custom.h	204;"	d
LTC_RIPEMD256	libtomcrypt/headers/tomcrypt_custom.h	206;"	d
LTC_RIPEMD256	src/headers/tomcrypt_custom.h	205;"	d
LTC_RIPEMD320	libtomcrypt/headers/tomcrypt_custom.h	207;"	d
LTC_RIPEMD320	src/headers/tomcrypt_custom.h	206;"	d
LTC_SAFER	libtomcrypt/headers/tomcrypt_custom.h	155;"	d
LTC_SAFER	src/headers/tomcrypt_custom.h	153;"	d
LTC_SAFERP	libtomcrypt/headers/tomcrypt_custom.h	137;"	d
LTC_SAFERP	src/headers/tomcrypt_custom.h	135;"	d
LTC_SAFER_BLOCK_LEN	src/headers/tomcrypt_cipher.h	79;"	d
LTC_SAFER_K128_DEFAULT_NOF_ROUNDS	src/headers/tomcrypt_cipher.h	75;"	d
LTC_SAFER_K64_DEFAULT_NOF_ROUNDS	src/headers/tomcrypt_cipher.h	74;"	d
LTC_SAFER_KEY_LEN	src/headers/tomcrypt_cipher.h	80;"	d
LTC_SAFER_MAX_NOF_ROUNDS	src/headers/tomcrypt_cipher.h	78;"	d
LTC_SAFER_SK128_DEFAULT_NOF_ROUNDS	src/headers/tomcrypt_cipher.h	77;"	d
LTC_SAFER_SK64_DEFAULT_NOF_ROUNDS	src/headers/tomcrypt_cipher.h	76;"	d
LTC_SET_ASN1	libtomcrypt/headers/tomcrypt_pk.h	212;"	d
LTC_SET_ASN1	src/headers/tomcrypt_pk.h	406;"	d
LTC_SHA1	libtomcrypt/headers/tomcrypt_custom.h	200;"	d
LTC_SHA1	libtomcrypt/headers/tomcrypt_custom.h	85;"	d
LTC_SHA1	src/headers/tomcrypt_custom.h	199;"	d
LTC_SHA1	src/headers/tomcrypt_custom.h	83;"	d
LTC_SHA224	libtomcrypt/headers/tomcrypt_custom.h	198;"	d
LTC_SHA224	libtomcrypt/headers/tomcrypt_custom.h	89;"	d
LTC_SHA224	src/headers/tomcrypt_custom.h	197;"	d
LTC_SHA224	src/headers/tomcrypt_custom.h	87;"	d
LTC_SHA256	libtomcrypt/headers/tomcrypt_custom.h	197;"	d
LTC_SHA256	libtomcrypt/headers/tomcrypt_custom.h	88;"	d
LTC_SHA256	src/headers/tomcrypt_custom.h	196;"	d
LTC_SHA256	src/headers/tomcrypt_custom.h	86;"	d
LTC_SHA384	libtomcrypt/headers/tomcrypt_custom.h	196;"	d
LTC_SHA384	libtomcrypt/headers/tomcrypt_custom.h	87;"	d
LTC_SHA384	src/headers/tomcrypt_custom.h	195;"	d
LTC_SHA384	src/headers/tomcrypt_custom.h	85;"	d
LTC_SHA512	libtomcrypt/headers/tomcrypt_custom.h	195;"	d
LTC_SHA512	libtomcrypt/headers/tomcrypt_custom.h	86;"	d
LTC_SHA512	src/headers/tomcrypt_custom.h	194;"	d
LTC_SHA512	src/headers/tomcrypt_custom.h	84;"	d
LTC_SKIPJACK	libtomcrypt/headers/tomcrypt_custom.h	154;"	d
LTC_SKIPJACK	src/headers/tomcrypt_custom.h	152;"	d
LTC_SOBER128	libtomcrypt/headers/tomcrypt_custom.h	278;"	d
LTC_SOBER128	src/headers/tomcrypt_custom.h	277;"	d
LTC_SPRNG	libtomcrypt/headers/tomcrypt_custom.h	265;"	d
LTC_SPRNG	libtomcrypt/headers/tomcrypt_custom.h	97;"	d
LTC_SPRNG	src/headers/tomcrypt_custom.h	264;"	d
LTC_SPRNG	src/headers/tomcrypt_custom.h	95;"	d
LTC_TEST	libtomcrypt/headers/tomcrypt_custom.h	112;"	d
LTC_TEST	src/headers/tomcrypt_custom.h	110;"	d
LTC_TIGER	libtomcrypt/headers/tomcrypt_custom.h	199;"	d
LTC_TIGER	src/headers/tomcrypt_custom.h	198;"	d
LTC_TWOFISH	libtomcrypt/headers/tomcrypt_custom.h	142;"	d
LTC_TWOFISH	src/headers/tomcrypt_custom.h	140;"	d
LTC_TWOFISH_SMALL	libtomcrypt/headers/tomcrypt_custom.h	147;"	d
LTC_TWOFISH_SMALL	src/headers/tomcrypt_custom.h	145;"	d
LTC_TWOFISH_TABLES	libtomcrypt/headers/tomcrypt_custom.h	144;"	d
LTC_TWOFISH_TABLES	src/ciphers/twofish/twofish.c	23;"	d	file:
LTC_TWOFISH_TABLES	src/headers/tomcrypt_custom.h	142;"	d
LTC_WHIRLPOOL	libtomcrypt/headers/tomcrypt_custom.h	194;"	d
LTC_WHIRLPOOL	src/headers/tomcrypt_custom.h	193;"	d
LTC_XCBC	libtomcrypt/headers/tomcrypt_custom.h	217;"	d
LTC_XCBC	src/headers/tomcrypt_custom.h	216;"	d
LTC_XCBC_PURE	src/headers/tomcrypt_mac.h	315;"	d
LTC_XTEA	libtomcrypt/headers/tomcrypt_custom.h	139;"	d
LTC_XTEA	src/headers/tomcrypt_custom.h	137;"	d
LTC_XTS_MODE	libtomcrypt/headers/tomcrypt_custom.h	186;"	d
LTC_XTS_MODE	src/headers/tomcrypt_custom.h	185;"	d
LTC_YARROW	libtomcrypt/headers/tomcrypt_custom.h	255;"	d
LTC_YARROW	libtomcrypt/headers/tomcrypt_custom.h	98;"	d
LTC_YARROW	src/headers/tomcrypt_custom.h	254;"	d
LTC_YARROW	src/headers/tomcrypt_custom.h	96;"	d
LTC_YARROW_AES	libtomcrypt/headers/tomcrypt_custom.h	258;"	d
LTC_YARROW_AES	src/headers/tomcrypt_custom.h	257;"	d
LTM1	libtommath/tommath_class.h	8;"	d
LTM2	libtommath/tommath_class.h	6;"	d
LTM3	libtommath/tommath_class.h	3;"	d
LTM_ALL	libtommath/tommath_superclass.h	4;"	d
LTM_LAST	libtommath/tommath_class.h	989;"	d
LTM_LAST	libtommath/tommath_class.h	994;"	d
LTM_LTC_DESC	libtomcrypt/headers/tomcrypt_custom.h	291;"	d
LTM_PRIME_2MSB_ON	libtommath/tommath.h	138;"	d
LTM_PRIME_BBS	libtommath/tommath.h	136;"	d
LTM_PRIME_SAFE	libtommath/tommath.h	137;"	d
LUT	src/math/fp/ltc_ecc_fp_mulmod.c	/^             *LUT[1U<<FP_LUT]; \/* fixed point lookup *\/ $/;"	m	struct:__anon27	file:
L_NCR_H	libtomcrypt/headers/ncr.h	2;"	d
Li	src/headers/tomcrypt_mac.h	/^                     Li[MAXBLOCKSIZE],        \/* value of Li [current value, we calc from previous recall] *\/$/;"	m	struct:__anon46
Li	src/headers/tomcrypt_mac.h	/^                     Li[MAXBLOCKSIZE],        \/* value of Li [current value, we calc from previous recall] *\/$/;"	m	struct:__anon48
Lr	src/headers/tomcrypt_mac.h	/^                     Lr[MAXBLOCKSIZE],        \/* L * x^-1 *\/$/;"	m	struct:__anon46
Lr	src/headers/tomcrypt_mac.h	/^                     Lr[MAXBLOCKSIZE],        \/* L * x^-1 *\/$/;"	m	struct:__anon48
Ls	src/headers/tomcrypt_mac.h	/^                     Ls[32][MAXBLOCKSIZE],    \/* L shifted by i bits to the left *\/$/;"	m	struct:__anon48
Ls	src/headers/tomcrypt_mac.h	/^   unsigned char     Ls[32][MAXBLOCKSIZE],    \/* L shifted by i bits to the left *\/$/;"	m	struct:__anon46
Lu	src/headers/tomcrypt_mac.h	/^                   Lu[2][MAXBLOCKSIZE];$/;"	m	struct:__anon45
M	src/encauth/gcm/gcm_gf_mult.c	106;"	d	file:
MAKE	Makefile	/^MAKE := make$/;"	m
MAX	libtomcrypt/headers/tomcrypt_macros.h	392;"	d
MAX	libtommath/tommath.h	43;"	d
MAX	src/headers/tomcrypt_macros.h	408;"	d
MAXBLOCKSIZE	libtomcrypt/headers/tomcrypt.h	23;"	d
MAXBLOCKSIZE	src/headers/tomcrypt.h	23;"	d
MAX_KAT_SIZE	src/headers/tomcrypt_pk.h	96;"	d
MAX_KEYSIZEB	src/ciphers/anubis.c	40;"	d	file:
MAX_KEY_ID_SIZE	libtomcrypt/headers/ncr.h	182;"	d
MAX_N	src/ciphers/anubis.c	36;"	d	file:
MAX_ROUNDS	src/ciphers/anubis.c	38;"	d	file:
MAX_RSA_SIZE	libtomcrypt/headers/tomcrypt_pk.h	29;"	d
MAX_RSA_SIZE	src/headers/tomcrypt_pk.h	15;"	d
MDS	src/ciphers/twofish/twofish.c	/^static const unsigned char MDS[4][4] = {$/;"	v	file:
MDS_POLY	src/ciphers/twofish/twofish.c	42;"	d	file:
MIN	libtomcrypt/headers/tomcrypt_macros.h	396;"	d
MIN	libtommath/tommath.h	39;"	d
MIN	src/headers/tomcrypt_macros.h	412;"	d
MIN_KAT_SIZE	src/headers/tomcrypt_pk.h	95;"	d
MIN_KEYSIZEB	src/ciphers/anubis.c	39;"	d	file:
MIN_N	src/ciphers/anubis.c	35;"	d	file:
MIN_ROUNDS	src/ciphers/anubis.c	37;"	d	file:
MIN_RSA_SIZE	libtomcrypt/headers/tomcrypt_pk.h	28;"	d
MIN_RSA_SIZE	src/headers/tomcrypt_pk.h	14;"	d
MIV	src/headers/tomcrypt_cipher.h	/^                       MIV[MAXBLOCKSIZE];$/;"	m	struct:__anon36
MM	libtomcrypt/headers/tomcrypt_pk.h	/^	 MM,			\/* month *\/$/;"	m	struct:__anon15
MM	src/headers/tomcrypt_pk.h	/^            MM, \/* month *\/$/;"	m	struct:__anon44
MPI	libtomcrypt/headers/tomcrypt_custom.h	357;"	d
MPI	src/headers/tomcrypt_custom.h	356;"	d
MP_DIGIT_BIT	libtommath/tommath.h	115;"	d
MP_DIGIT_BIT	src/headers/tomcrypt_math.h	435;"	d
MP_DIGIT_MAX	libtommath/tommath.h	117;"	d
MP_EQ	libtommath/tommath.h	121;"	d
MP_GT	libtommath/tommath.h	122;"	d
MP_LOW_MEM	libtommath/tommath.h	148;"	d
MP_LT	libtommath/tommath.h	120;"	d
MP_MASK	libtommath/tommath.h	116;"	d
MP_MEM	libtommath/tommath.h	128;"	d
MP_NEG	libtommath/tommath.h	125;"	d
MP_NO	libtommath/tommath.h	133;"	d
MP_OKAY	libtommath/tommath.h	127;"	d
MP_PREC	libtommath/tommath.h	153;"	d
MP_PREC	libtommath/tommath.h	155;"	d
MP_RANGE	libtommath/tommath.h	130;"	d
MP_VAL	libtommath/tommath.h	129;"	d
MP_WARRAY	libtommath/tommath.h	160;"	d
MP_YES	libtommath/tommath.h	132;"	d
MP_ZPOS	libtommath/tommath.h	124;"	d
Maj	src/hashes/sha2/sha256.c	59;"	d	file:
Maj	src/hashes/sha2/sha512.c	84;"	d	file:
Multab	src/prngs/sober128tab.c	/^static const ulong32 Multab[256] = {$/;"	v	file:
N	libtomcrypt/headers/tomcrypt_pk.h	/^	mp_int N;$/;"	m	struct:Rsa_key
N	src/headers/tomcrypt_cipher.h	/^    int N;$/;"	m	struct:multi2_key
N	src/headers/tomcrypt_mac.h	/^   unsigned char N[MAXBLOCKSIZE];$/;"	m	struct:__anon47
N	src/headers/tomcrypt_pk.h	/^    void *N; $/;"	m	struct:KAT_key
N	src/headers/tomcrypt_pk.h	/^    void *N; $/;"	m	struct:Rsa_key
N	src/prngs/sober128.c	37;"	d	file:
NCRIO_KEY_DEINIT	libtomcrypt/headers/ncr.h	220;"	d
NCRIO_KEY_DERIVE	libtomcrypt/headers/ncr.h	212;"	d
NCRIO_KEY_EXPORT	libtomcrypt/headers/ncr.h	216;"	d
NCRIO_KEY_GENERATE	libtomcrypt/headers/ncr.h	208;"	d
NCRIO_KEY_GENERATE_PAIR	libtomcrypt/headers/ncr.h	210;"	d
NCRIO_KEY_GET_INFO	libtomcrypt/headers/ncr.h	214;"	d
NCRIO_KEY_IMPORT	libtomcrypt/headers/ncr.h	218;"	d
NCRIO_KEY_INIT	libtomcrypt/headers/ncr.h	206;"	d
NCRIO_KEY_STORAGE_UNWRAP	libtomcrypt/headers/ncr.h	274;"	d
NCRIO_KEY_STORAGE_WRAP	libtomcrypt/headers/ncr.h	273;"	d
NCRIO_KEY_UNWRAP	libtomcrypt/headers/ncr.h	243;"	d
NCRIO_KEY_WRAP	libtomcrypt/headers/ncr.h	242;"	d
NCRIO_MASTER_KEY_SET	libtomcrypt/headers/ncr.h	253;"	d
NCRIO_SESSION_FINAL	libtomcrypt/headers/ncr.h	326;"	d
NCRIO_SESSION_INIT	libtomcrypt/headers/ncr.h	324;"	d
NCRIO_SESSION_ONCE	libtomcrypt/headers/ncr.h	329;"	d
NCRIO_SESSION_UPDATE	libtomcrypt/headers/ncr.h	325;"	d
NCR_ALG_3DES_CBC	libtomcrypt/headers/ncr.h	/^	NCR_ALG_3DES_CBC,$/;"	e	enum:__anon4
NCR_ALG_3DES_ECB	libtomcrypt/headers/ncr.h	/^	NCR_ALG_3DES_ECB,$/;"	e	enum:__anon4
NCR_ALG_AES_CBC	libtomcrypt/headers/ncr.h	/^	NCR_ALG_AES_CBC,$/;"	e	enum:__anon4
NCR_ALG_AES_CTR	libtomcrypt/headers/ncr.h	/^	NCR_ALG_AES_CTR,$/;"	e	enum:__anon4
NCR_ALG_AES_ECB	libtomcrypt/headers/ncr.h	/^	NCR_ALG_AES_ECB,$/;"	e	enum:__anon4
NCR_ALG_CAMELIA_CBC	libtomcrypt/headers/ncr.h	/^	NCR_ALG_CAMELIA_CBC,$/;"	e	enum:__anon4
NCR_ALG_CAMELIA_CTR	libtomcrypt/headers/ncr.h	/^	NCR_ALG_CAMELIA_CTR,$/;"	e	enum:__anon4
NCR_ALG_CAMELIA_ECB	libtomcrypt/headers/ncr.h	/^	NCR_ALG_CAMELIA_ECB,$/;"	e	enum:__anon4
NCR_ALG_DH	libtomcrypt/headers/ncr.h	/^	NCR_ALG_DH,$/;"	e	enum:__anon4
NCR_ALG_DSA	libtomcrypt/headers/ncr.h	/^	NCR_ALG_DSA,$/;"	e	enum:__anon4
NCR_ALG_HMAC_MD5	libtomcrypt/headers/ncr.h	/^	NCR_ALG_HMAC_MD5 = 300,$/;"	e	enum:__anon4
NCR_ALG_HMAC_SHA1	libtomcrypt/headers/ncr.h	/^	NCR_ALG_HMAC_SHA1,$/;"	e	enum:__anon4
NCR_ALG_HMAC_SHA2_224	libtomcrypt/headers/ncr.h	/^	NCR_ALG_HMAC_SHA2_224,$/;"	e	enum:__anon4
NCR_ALG_HMAC_SHA2_256	libtomcrypt/headers/ncr.h	/^	NCR_ALG_HMAC_SHA2_256,$/;"	e	enum:__anon4
NCR_ALG_HMAC_SHA2_384	libtomcrypt/headers/ncr.h	/^	NCR_ALG_HMAC_SHA2_384,$/;"	e	enum:__anon4
NCR_ALG_HMAC_SHA2_512	libtomcrypt/headers/ncr.h	/^	NCR_ALG_HMAC_SHA2_512,$/;"	e	enum:__anon4
NCR_ALG_MD5	libtomcrypt/headers/ncr.h	/^	NCR_ALG_MD5 = 200,$/;"	e	enum:__anon4
NCR_ALG_NONE	libtomcrypt/headers/ncr.h	/^	NCR_ALG_NONE,$/;"	e	enum:__anon4
NCR_ALG_NULL	libtomcrypt/headers/ncr.h	/^	NCR_ALG_NULL,$/;"	e	enum:__anon4
NCR_ALG_RSA	libtomcrypt/headers/ncr.h	/^	NCR_ALG_RSA = 600,$/;"	e	enum:__anon4
NCR_ALG_SHA1	libtomcrypt/headers/ncr.h	/^	NCR_ALG_SHA1,$/;"	e	enum:__anon4
NCR_ALG_SHA2_224	libtomcrypt/headers/ncr.h	/^	NCR_ALG_SHA2_224,$/;"	e	enum:__anon4
NCR_ALG_SHA2_256	libtomcrypt/headers/ncr.h	/^	NCR_ALG_SHA2_256,$/;"	e	enum:__anon4
NCR_ALG_SHA2_384	libtomcrypt/headers/ncr.h	/^	NCR_ALG_SHA2_384,$/;"	e	enum:__anon4
NCR_ALG_SHA2_512	libtomcrypt/headers/ncr.h	/^	NCR_ALG_SHA2_512,$/;"	e	enum:__anon4
NCR_ATTR_ALGORITHM	libtomcrypt/headers/ncr.h	/^	NCR_ATTR_ALGORITHM,	\/* NLA_U32 <- ncr_algorithm_t *\/$/;"	e	enum:__anon7
NCR_ATTR_DERIVATION_ALGORITHM	libtomcrypt/headers/ncr.h	/^	NCR_ATTR_DERIVATION_ALGORITHM,	\/* NLA_U32 <- ncr_derive_t *\/$/;"	e	enum:__anon7
NCR_ATTR_DH_BASE	libtomcrypt/headers/ncr.h	/^	NCR_ATTR_DH_BASE,	\/* NLA_BINARY *\/$/;"	e	enum:__anon7
NCR_ATTR_DH_PRIME	libtomcrypt/headers/ncr.h	/^	NCR_ATTR_DH_PRIME,	\/* NLA_BINARY *\/$/;"	e	enum:__anon7
NCR_ATTR_DH_PUBLIC	libtomcrypt/headers/ncr.h	/^	NCR_ATTR_DH_PUBLIC,	\/* NLA_BINARY *\/$/;"	e	enum:__anon7
NCR_ATTR_DSA_P_BITS	libtomcrypt/headers/ncr.h	/^	NCR_ATTR_DSA_P_BITS,	\/* NLA_U32 *\/$/;"	e	enum:__anon7
NCR_ATTR_DSA_Q_BITS	libtomcrypt/headers/ncr.h	/^	NCR_ATTR_DSA_Q_BITS,	\/* NLA_U32 *\/$/;"	e	enum:__anon7
NCR_ATTR_END__	libtomcrypt/headers/ncr.h	/^	NCR_ATTR_END__,$/;"	e	enum:__anon7
NCR_ATTR_FINAL_INPUT_DATA	libtomcrypt/headers/ncr.h	/^	NCR_ATTR_FINAL_INPUT_DATA,	\/* NLA_BINARY - ncr_session_input_data *\/$/;"	e	enum:__anon7
NCR_ATTR_FINAL_OUTPUT_BUFFER	libtomcrypt/headers/ncr.h	/^	NCR_ATTR_FINAL_OUTPUT_BUFFER,$/;"	e	enum:__anon7
NCR_ATTR_IV	libtomcrypt/headers/ncr.h	/^	NCR_ATTR_IV,		\/* NLA_BINARY *\/$/;"	e	enum:__anon7
NCR_ATTR_KEY	libtomcrypt/headers/ncr.h	/^	NCR_ATTR_KEY,		\/* NLA_U32 - ncr_key_t *\/$/;"	e	enum:__anon7
NCR_ATTR_KEY_FLAGS	libtomcrypt/headers/ncr.h	/^	NCR_ATTR_KEY_FLAGS,	\/* NLA_U32 - NCR_KEY_FLAG_* *\/$/;"	e	enum:__anon7
NCR_ATTR_KEY_ID	libtomcrypt/headers/ncr.h	/^	NCR_ATTR_KEY_ID,	\/* NLA_BINARY *\/$/;"	e	enum:__anon7
NCR_ATTR_KEY_TYPE	libtomcrypt/headers/ncr.h	/^	NCR_ATTR_KEY_TYPE,	\/* NLA_U32 - ncr_key_type_t *\/$/;"	e	enum:__anon7
NCR_ATTR_MAX	libtomcrypt/headers/ncr.h	/^	NCR_ATTR_MAX = NCR_ATTR_END__ - 1$/;"	e	enum:__anon7
NCR_ATTR_RSA_E	libtomcrypt/headers/ncr.h	/^	NCR_ATTR_RSA_E,		\/* NLA_BINARY *\/$/;"	e	enum:__anon7
NCR_ATTR_RSA_ENCODING_METHOD	libtomcrypt/headers/ncr.h	/^	NCR_ATTR_RSA_ENCODING_METHOD,	\/* NLA_U32 - ncr_rsa_type_t *\/$/;"	e	enum:__anon7
NCR_ATTR_RSA_MODULUS_BITS	libtomcrypt/headers/ncr.h	/^	NCR_ATTR_RSA_MODULUS_BITS,	\/* NLA_U32 *\/$/;"	e	enum:__anon7
NCR_ATTR_RSA_OAEP_HASH_ALGORITHM	libtomcrypt/headers/ncr.h	/^	NCR_ATTR_RSA_OAEP_HASH_ALGORITHM,	\/* NLA_NUL_STRING *\/$/;"	e	enum:__anon7
NCR_ATTR_RSA_PSS_SALT_LENGTH	libtomcrypt/headers/ncr.h	/^	NCR_ATTR_RSA_PSS_SALT_LENGTH,	\/* NLA_U32 *\/$/;"	e	enum:__anon7
NCR_ATTR_SECRET_KEY_BITS	libtomcrypt/headers/ncr.h	/^	NCR_ATTR_SECRET_KEY_BITS,	\/* NLA_U32 *\/$/;"	e	enum:__anon7
NCR_ATTR_SESSION_CLONE_FROM	libtomcrypt/headers/ncr.h	/^	NCR_ATTR_SESSION_CLONE_FROM,	\/* NLA_U32 - ncr_session_t *\/$/;"	e	enum:__anon7
NCR_ATTR_SIGNATURE_HASH_ALGORITHM	libtomcrypt/headers/ncr.h	/^	NCR_ATTR_SIGNATURE_HASH_ALGORITHM,	\/* NLA_U32 *\/$/;"	e	enum:__anon7
NCR_ATTR_SIGNATURE_TRANSPARENT	libtomcrypt/headers/ncr.h	/^	NCR_ATTR_SIGNATURE_TRANSPARENT,	\/* NLA_U32 *\/$/;"	e	enum:__anon7
NCR_ATTR_UNSPEC	libtomcrypt/headers/ncr.h	/^	NCR_ATTR_UNSPEC,	\/* 0 is special in lib\/nlattr.c. *\/$/;"	e	enum:__anon7
NCR_ATTR_UPDATE_INPUT_DATA	libtomcrypt/headers/ncr.h	/^	NCR_ATTR_UPDATE_INPUT_DATA,	\/* NLA_BINARY - ncr_session_input_data *\/$/;"	e	enum:__anon7
NCR_ATTR_UPDATE_INPUT_KEY_AS_DATA	libtomcrypt/headers/ncr.h	/^	NCR_ATTR_UPDATE_INPUT_KEY_AS_DATA,	\/* NLA_U32 - ncr_key_t *\/$/;"	e	enum:__anon7
NCR_ATTR_UPDATE_OUTPUT_BUFFER	libtomcrypt/headers/ncr.h	/^	NCR_ATTR_UPDATE_OUTPUT_BUFFER,$/;"	e	enum:__anon7
NCR_ATTR_WANTED_ATTRS	libtomcrypt/headers/ncr.h	/^	NCR_ATTR_WANTED_ATTRS,	\/* NLA_BINARY - array of u16 IDs *\/$/;"	e	enum:__anon7
NCR_ATTR_WRAPPING_ALGORITHM	libtomcrypt/headers/ncr.h	/^	NCR_ATTR_WRAPPING_ALGORITHM,	\/* NLA_U32 <- ncr_wrap_algorithm_t  *\/$/;"	e	enum:__anon7
NCR_CIPHER_MAX_BLOCK_LEN	libtomcrypt/headers/ncr.h	120;"	d
NCR_CIPHER_MAX_KEY_LEN	libtomcrypt/headers/ncr-int.h	14;"	d
NCR_DERIVE_DH	libtomcrypt/headers/ncr.h	/^       NCR_DERIVE_DH=1,$/;"	e	enum:__anon6
NCR_DH_H	libtomcrypt/headers/ncr-dh.h	2;"	d
NCR_FINISH	libtomcrypt/headers/ncr.h	412;"	d
NCR_HASH_MAX_OUTPUT_SIZE	libtomcrypt/headers/ncr.h	121;"	d
NCR_INIT	libtomcrypt/headers/ncr.h	342;"	d
NCR_INT_H	libtomcrypt/headers/ncr-int.h	2;"	d
NCR_KEY_FLAG_ALLOW_TRANSPARENT_HASH	libtomcrypt/headers/ncr.h	154;"	d
NCR_KEY_FLAG_DECRYPT	libtomcrypt/headers/ncr.h	144;"	d
NCR_KEY_FLAG_ENCRYPT	libtomcrypt/headers/ncr.h	146;"	d
NCR_KEY_FLAG_EXPORTABLE	libtomcrypt/headers/ncr.h	137;"	d
NCR_KEY_FLAG_HASHABLE	libtomcrypt/headers/ncr.h	153;"	d
NCR_KEY_FLAG_SIGN	libtomcrypt/headers/ncr.h	145;"	d
NCR_KEY_FLAG_UNWRAPPING	libtomcrypt/headers/ncr.h	152;"	d
NCR_KEY_FLAG_VERIFY	libtomcrypt/headers/ncr.h	147;"	d
NCR_KEY_FLAG_WRAPPABLE	libtomcrypt/headers/ncr.h	138;"	d
NCR_KEY_FLAG_WRAPPING	libtomcrypt/headers/ncr.h	151;"	d
NCR_KEY_INVALID	libtomcrypt/headers/ncr.h	135;"	d
NCR_KEY_TYPE_INVALID	libtomcrypt/headers/ncr.h	/^	NCR_KEY_TYPE_INVALID,$/;"	e	enum:__anon8
NCR_KEY_TYPE_PRIVATE	libtomcrypt/headers/ncr.h	/^	NCR_KEY_TYPE_PRIVATE = 3,$/;"	e	enum:__anon8
NCR_KEY_TYPE_PUBLIC	libtomcrypt/headers/ncr.h	/^	NCR_KEY_TYPE_PUBLIC = 2,$/;"	e	enum:__anon8
NCR_KEY_TYPE_SECRET	libtomcrypt/headers/ncr.h	/^	NCR_KEY_TYPE_SECRET = 1,$/;"	e	enum:__anon8
NCR_MAX_REQUEST	libtomcrypt/headers/ncr.h	335;"	d
NCR_OP_DECRYPT	libtomcrypt/headers/ncr.h	/^	NCR_OP_DECRYPT,$/;"	e	enum:__anon10
NCR_OP_ENCRYPT	libtomcrypt/headers/ncr.h	/^	NCR_OP_ENCRYPT = 1,$/;"	e	enum:__anon10
NCR_OP_SIGN	libtomcrypt/headers/ncr.h	/^	NCR_OP_SIGN,$/;"	e	enum:__anon10
NCR_OP_VERIFY	libtomcrypt/headers/ncr.h	/^	NCR_OP_VERIFY,$/;"	e	enum:__anon10
NCR_PK_H	libtomcrypt/headers/ncr-pk.h	2;"	d
NCR_SESSION_INVALID	libtomcrypt/headers/ncr.h	287;"	d
NCR_STRUCT	libtomcrypt/headers/ncr.h	337;"	d
NCR_WALG_AES_RFC3394	libtomcrypt/headers/ncr.h	/^       NCR_WALG_AES_RFC3394, \/* for secret keys only *\/$/;"	e	enum:__anon5
NCR_WALG_AES_RFC5649	libtomcrypt/headers/ncr.h	/^       NCR_WALG_AES_RFC5649, \/* can wrap arbitrary key *\/$/;"	e	enum:__anon5
NLFUNC	src/prngs/sober128.c	87;"	d	file:
NUM_LIMIT_TYPES	libtomcrypt/headers/ncr-int.h	/^	NUM_LIMIT_TYPES$/;"	e	enum:__anon20
Nr	src/headers/tomcrypt_cipher.h	/^   int Nr;$/;"	m	struct:rijndael_key
OFF	src/prngs/sober128.c	65;"	d	file:
OID	libtomcrypt/headers/tomcrypt_pk.h	/^	unsigned long OID[16];$/;"	m	struct:Oid
OID	src/headers/tomcrypt_hash.h	/^    unsigned long OID[16];$/;"	m	struct:ltc_hash_descriptor
OIDlen	libtomcrypt/headers/tomcrypt_pk.h	/^	unsigned long OIDlen;$/;"	m	struct:Oid
OIDlen	src/headers/tomcrypt_hash.h	/^    unsigned long OIDlen;$/;"	m	struct:ltc_hash_descriptor
OKDEBUG	include/ok_log.h	24;"	d
OKDEBUG	include/ok_log.h	26;"	d
OKDEBUG	include/ok_log.h	29;"	d
OK_MAGIC	include/ok_type.h	33;"	d
OK_NR_DEVS	include/ok_type.h	41;"	d
OK_NR_MINOR	include/ok_type.h	42;"	d
OK_QSET	include/ok_type.h	39;"	d
OK_QUANTUM	include/ok_type.h	40;"	d
OK_RESULT	include/ok_type.h	/^typedef unsigned int OK_RESULT;$/;"	t
OK_SUCCESS	include/ok_type.h	30;"	d
OK_TEST	include/ok_type.h	35;"	d
OPT_CAST	libtommath/tommath.h	50;"	d
OPT_CAST	libtommath/tommath.h	55;"	d
ORIG_P	src/ciphers/blowfish.c	/^static const ulong32 ORIG_P[16 + 2] = {$/;"	v	file:
ORIG_S	src/ciphers/blowfish.c	/^static const ulong32 ORIG_S[4][256] = {$/;"	v	file:
Oid	libtomcrypt/headers/tomcrypt_pk.h	/^typedef struct Oid {$/;"	s
PAGECOUNT	libtomcrypt/headers/cryptodev_int.h	33;"	d
PC	src/headers/tomcrypt_cipher.h	/^    unsigned char     PC[16][256][16];$/;"	m	struct:__anon35
PC	src/headers/tomcrypt_mac.h	/^   unsigned char       PC[16][256][16]  \/* 16 tables of 8x128 *\/$/;"	m	struct:__anon49
PELI_TAB	src/mac/pelican/pelican.c	21;"	d	file:
PFX	libtomcrypt/headers/cryptodev_int.h	16;"	d
PHT	src/ciphers/safer/safer.c	94;"	d	file:
PHT	src/ciphers/safer/saferp.c	85;"	d	file:
PI1	src/ciphers/noekeon.c	61;"	d	file:
PI2	src/ciphers/noekeon.c	64;"	d	file:
PI_SUBST	src/hashes/md2.c	/^static const unsigned char PI_SUBST[256] = {$/;"	v	file:
PKA_DSA	libtomcrypt/headers/tomcrypt_pk.h	/^	PKA_DSA$/;"	e	enum:__anon12
PKA_RSA	libtomcrypt/headers/tomcrypt_pk.h	/^	PKA_RSA,$/;"	e	enum:__anon12
PK_PRIVATE	libtomcrypt/headers/tomcrypt_pk.h	/^	PK_PRIVATE = 1$/;"	e	enum:__anon11
PK_PRIVATE	src/headers/tomcrypt_pk.h	/^   PK_PRIVATE=1$/;"	e	enum:__anon38
PK_PUBLIC	libtomcrypt/headers/tomcrypt_pk.h	/^	PK_PUBLIC = 0,$/;"	e	enum:__anon11
PK_PUBLIC	src/headers/tomcrypt_pk.h	/^   PK_PUBLIC=0,$/;"	e	enum:__anon38
PRIME_SIZE	libtommath/tommath.h	433;"	d
PRIME_SIZE	libtommath/tommath.h	435;"	d
PWD	Makefile	/^PWD := $(shell pwd)$/;"	m
Prng_state	libtomcrypt/headers/tomcrypt_prng.h	/^typedef union Prng_state {$/;"	u
Prng_state	src/headers/tomcrypt_prng.h	/^typedef union Prng_state {$/;"	u
R	src/ciphers/khazad.c	34;"	d	file:
R	src/hashes/sha2/sha256.c	61;"	d	file:
R	src/hashes/sha2/sha512.c	86;"	d	file:
R	src/headers/tomcrypt_cipher.h	/^   int R; $/;"	m	struct:anubis_key
R	src/headers/tomcrypt_mac.h	/^                     R[MAXBLOCKSIZE],         \/* R value *\/$/;"	m	struct:__anon48
R	src/headers/tomcrypt_prng.h	/^    ulong32      R[17],          \/* Working storage for the shift register *\/$/;"	m	struct:sober128_prng
RC	src/ciphers/noekeon.c	/^static const ulong32 RC[] = {$/;"	v	file:
RND	src/ciphers/rc6.c	139;"	d	file:
RND	src/ciphers/rc6.c	153;"	d	file:
RND	src/ciphers/rc6.c	193;"	d	file:
RND	src/ciphers/rc6.c	208;"	d	file:
RND	src/hashes/sha2/sha256.c	97;"	d	file:
ROL	libtomcrypt/headers/tomcrypt_macros.h	/^static inline unsigned ROL(unsigned word, int i)$/;"	f
ROL	libtomcrypt/headers/tomcrypt_macros.h	239;"	d
ROL	libtomcrypt/headers/tomcrypt_macros.h	324;"	d
ROL	src/headers/tomcrypt_macros.h	/^static inline unsigned ROL(unsigned word, int i)$/;"	f
ROL	src/headers/tomcrypt_macros.h	241;"	d
ROL	src/headers/tomcrypt_macros.h	335;"	d
ROL16	src/ciphers/kasumi.c	24;"	d	file:
ROL64	libtomcrypt/headers/tomcrypt_macros.h	/^static inline unsigned long ROL64(unsigned long word, int i)$/;"	f
ROL64	libtomcrypt/headers/tomcrypt_macros.h	373;"	d
ROL64	src/headers/tomcrypt_macros.h	/^static inline unsigned long ROL64(unsigned long word, int i)$/;"	f
ROL64	src/headers/tomcrypt_macros.h	389;"	d
ROL64c	libtomcrypt/headers/tomcrypt_macros.h	/^static inline unsigned long ROL64c(unsigned long word, const int i)$/;"	f
ROL64c	libtomcrypt/headers/tomcrypt_macros.h	366;"	d
ROL64c	libtomcrypt/headers/tomcrypt_macros.h	381;"	d
ROL64c	src/headers/tomcrypt_macros.h	/^static inline unsigned long ROL64c(unsigned long word, const int i)$/;"	f
ROL64c	src/headers/tomcrypt_macros.h	382;"	d
ROL64c	src/headers/tomcrypt_macros.h	397;"	d
ROL8	src/ciphers/safer/safer.c	90;"	d	file:
ROLc	libtomcrypt/headers/tomcrypt_macros.h	/^static inline unsigned ROLc(unsigned word, const int i)$/;"	f
ROLc	libtomcrypt/headers/tomcrypt_macros.h	241;"	d
ROLc	libtomcrypt/headers/tomcrypt_macros.h	277;"	d
ROLc	libtomcrypt/headers/tomcrypt_macros.h	316;"	d
ROLc	libtomcrypt/headers/tomcrypt_macros.h	326;"	d
ROLc	src/headers/tomcrypt_macros.h	/^static inline unsigned ROLc(unsigned word, const int i)$/;"	f
ROLc	src/headers/tomcrypt_macros.h	243;"	d
ROLc	src/headers/tomcrypt_macros.h	283;"	d
ROLc	src/headers/tomcrypt_macros.h	326;"	d
ROLc	src/headers/tomcrypt_macros.h	337;"	d
ROR	libtomcrypt/headers/tomcrypt_macros.h	/^static inline unsigned ROR(unsigned word, int i)$/;"	f
ROR	libtomcrypt/headers/tomcrypt_macros.h	238;"	d
ROR	libtomcrypt/headers/tomcrypt_macros.h	325;"	d
ROR	src/headers/tomcrypt_macros.h	/^static inline unsigned ROR(unsigned word, int i)$/;"	f
ROR	src/headers/tomcrypt_macros.h	240;"	d
ROR	src/headers/tomcrypt_macros.h	336;"	d
ROR64	libtomcrypt/headers/tomcrypt_macros.h	/^static inline unsigned long ROR64(unsigned long word, int i)$/;"	f
ROR64	libtomcrypt/headers/tomcrypt_macros.h	377;"	d
ROR64	src/headers/tomcrypt_macros.h	/^static inline unsigned long ROR64(unsigned long word, int i)$/;"	f
ROR64	src/headers/tomcrypt_macros.h	393;"	d
ROR64c	libtomcrypt/headers/tomcrypt_macros.h	/^static inline unsigned long ROR64c(unsigned long word, const int i)$/;"	f
ROR64c	libtomcrypt/headers/tomcrypt_macros.h	367;"	d
ROR64c	libtomcrypt/headers/tomcrypt_macros.h	385;"	d
ROR64c	src/headers/tomcrypt_macros.h	/^static inline unsigned long ROR64c(unsigned long word, const int i)$/;"	f
ROR64c	src/headers/tomcrypt_macros.h	383;"	d
ROR64c	src/headers/tomcrypt_macros.h	401;"	d
RORc	libtomcrypt/headers/tomcrypt_macros.h	/^static inline unsigned RORc(unsigned word, const int i)$/;"	f
RORc	libtomcrypt/headers/tomcrypt_macros.h	240;"	d
RORc	libtomcrypt/headers/tomcrypt_macros.h	278;"	d
RORc	libtomcrypt/headers/tomcrypt_macros.h	317;"	d
RORc	libtomcrypt/headers/tomcrypt_macros.h	327;"	d
RORc	src/headers/tomcrypt_macros.h	/^static inline unsigned RORc(unsigned word, const int i)$/;"	f
RORc	src/headers/tomcrypt_macros.h	242;"	d
RORc	src/headers/tomcrypt_macros.h	284;"	d
RORc	src/headers/tomcrypt_macros.h	327;"	d
RORc	src/headers/tomcrypt_macros.h	338;"	d
ROTATE_LEFT	src/hashes/md4.c	57;"	d	file:
ROUND	src/ciphers/noekeon.c	128;"	d	file:
ROUND	src/ciphers/noekeon.c	139;"	d	file:
ROUND	src/ciphers/noekeon.c	183;"	d	file:
ROUND	src/ciphers/noekeon.c	194;"	d	file:
ROUND	src/ciphers/safer/saferp.c	159;"	d	file:
ROUND	src/ciphers/safer/saferp.c	160;"	d	file:
ROUND	src/ciphers/safer/saferp.c	47;"	d	file:
RS	src/ciphers/twofish/twofish.c	/^static const unsigned char RS[4][8] = {$/;"	v	file:
RSA_PKCS1_OAEP	libtomcrypt/headers/ncr.h	/^	RSA_PKCS1_OAEP,		\/* for encryption only *\/$/;"	e	enum:__anon9
RSA_PKCS1_PSS	libtomcrypt/headers/ncr.h	/^	RSA_PKCS1_PSS,		\/* for signatures only *\/$/;"	e	enum:__anon9
RSA_PKCS1_V1_5	libtomcrypt/headers/ncr.h	/^	RSA_PKCS1_V1_5,		\/* both signatures and encryption *\/$/;"	e	enum:__anon9
RS_POLY	src/ciphers/twofish/twofish.c	43;"	d	file:
RULE_A	src/ciphers/skipjack.c	90;"	d	file:
RULE_A1	src/ciphers/skipjack.c	102;"	d	file:
RULE_B	src/ciphers/skipjack.c	96;"	d	file:
RULE_B1	src/ciphers/skipjack.c	107;"	d	file:
Rorder	src/hashes/md5.c	/^static const unsigned char Rorder[64] = {$/;"	v	file:
Rsa_key	libtomcrypt/headers/tomcrypt_pk.h	/^typedef struct Rsa_key {$/;"	s
Rsa_key	src/headers/tomcrypt_pk.h	/^typedef struct Rsa_key {$/;"	s
S	src/hashes/sha2/sha256.c	60;"	d	file:
S	src/hashes/sha2/sha512.c	85;"	d	file:
S	src/headers/tomcrypt_cipher.h	/^      ulong32 S[4][256], K[40];$/;"	m	struct:twofish_key
S	src/headers/tomcrypt_cipher.h	/^      unsigned char S[32], start;$/;"	m	struct:twofish_key
S	src/headers/tomcrypt_cipher.h	/^   ulong32 S[4][256];$/;"	m	struct:blowfish_key
S1	src/ciphers/cast5.c	/^static const ulong32 S1[256] = {$/;"	v	file:
S1	src/ciphers/twofish/twofish.c	278;"	d	file:
S11	src/hashes/md4.c	38;"	d	file:
S12	src/hashes/md4.c	39;"	d	file:
S13	src/hashes/md4.c	40;"	d	file:
S14	src/hashes/md4.c	41;"	d	file:
S2	src/ciphers/cast5.c	/^static const ulong32 S2[256] = {$/;"	v	file:
S2	src/ciphers/twofish/twofish.c	279;"	d	file:
S21	src/hashes/md4.c	42;"	d	file:
S22	src/hashes/md4.c	43;"	d	file:
S23	src/hashes/md4.c	44;"	d	file:
S24	src/hashes/md4.c	45;"	d	file:
S3	src/ciphers/cast5.c	/^static const ulong32 S3[256] = {$/;"	v	file:
S3	src/ciphers/twofish/twofish.c	280;"	d	file:
S31	src/hashes/md4.c	46;"	d	file:
S32	src/hashes/md4.c	47;"	d	file:
S33	src/hashes/md4.c	48;"	d	file:
S34	src/hashes/md4.c	49;"	d	file:
S4	src/ciphers/cast5.c	/^static const ulong32 S4[256] = {$/;"	v	file:
S4	src/ciphers/twofish/twofish.c	281;"	d	file:
S5	src/ciphers/cast5.c	/^static const ulong32 S5[256] = {$/;"	v	file:
S6	src/ciphers/cast5.c	/^static const ulong32 S6[256] = {$/;"	v	file:
S7	src/ciphers/cast5.c	/^static const ulong32 S7[256] = {$/;"	v	file:
S8	src/ciphers/cast5.c	/^static const ulong32 S8[256] = {$/;"	v	file:
SB0	src/hashes/whirl/whirltab.c	74;"	d	file:
SB0	src/hashes/whirl/whirltab.c	85;"	d	file:
SB1	src/hashes/whirl/whirltab.c	75;"	d	file:
SB1	src/hashes/whirl/whirltab.c	86;"	d	file:
SB2	src/hashes/whirl/whirltab.c	76;"	d	file:
SB2	src/hashes/whirl/whirltab.c	87;"	d	file:
SB3	src/hashes/whirl/whirltab.c	77;"	d	file:
SB3	src/hashes/whirl/whirltab.c	88;"	d	file:
SB4	src/hashes/whirl/whirltab.c	78;"	d	file:
SB4	src/hashes/whirl/whirltab.c	89;"	d	file:
SB5	src/hashes/whirl/whirltab.c	79;"	d	file:
SB5	src/hashes/whirl/whirltab.c	90;"	d	file:
SB6	src/hashes/whirl/whirltab.c	80;"	d	file:
SB6	src/hashes/whirl/whirltab.c	91;"	d	file:
SB7	src/hashes/whirl/whirltab.c	81;"	d	file:
SB7	src/hashes/whirl/whirltab.c	92;"	d	file:
SBOX	src/ciphers/twofish/twofish_tab.c	/^static const unsigned char SBOX[2][256] = {$/;"	v	file:
SCRYPT	libtomcrypt/headers/tomcrypt.h	20;"	d
SCRYPT	src/headers/tomcrypt.h	20;"	d
SETUP	src/ciphers/aes/aes.c	/^int SETUP(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey)$/;"	f
SETUP	src/ciphers/aes/aes.c	39;"	d	file:
SETUP	src/ciphers/aes/aes.c	66;"	d	file:
SHUF	src/ciphers/safer/saferp.c	107;"	d	file:
SIGN	libtommath/tommath.h	173;"	d
SP1	src/ciphers/des.c	/^static const ulong32 SP1[64] =$/;"	v	file:
SP2	src/ciphers/des.c	/^static const ulong32 SP2[64] =$/;"	v	file:
SP3	src/ciphers/des.c	/^static const ulong32 SP3[64] =$/;"	v	file:
SP4	src/ciphers/des.c	/^static const ulong32 SP4[64] =$/;"	v	file:
SP5	src/ciphers/des.c	/^static const ulong32 SP5[64] =$/;"	v	file:
SP6	src/ciphers/des.c	/^static const ulong32 SP6[64] =$/;"	v	file:
SP7	src/ciphers/des.c	/^static const ulong32 SP7[64] =$/;"	v	file:
SP8	src/ciphers/des.c	/^static const ulong32 SP8[64] =$/;"	v	file:
SROUND	src/prngs/sober128.c	280;"	d	file:
SS0	src/ciphers/kseed.c	/^static const ulong32 SS0[256] = {$/;"	v	file:
SS1	src/ciphers/kseed.c	/^static const ulong32 SS1[256] = {$/;"	v	file:
SS2	src/ciphers/kseed.c	/^static const ulong32 SS2[256] = {$/;"	v	file:
SS3	src/ciphers/kseed.c	/^static const ulong32 SS3[256] = {$/;"	v	file:
STEP	src/prngs/sober128.c	69;"	d	file:
STORE32H	libtomcrypt/headers/tomcrypt_macros.h	194;"	d
STORE32H	libtomcrypt/headers/tomcrypt_macros.h	214;"	d
STORE32H	libtomcrypt/headers/tomcrypt_macros.h	44;"	d
STORE32H	libtomcrypt/headers/tomcrypt_macros.h	72;"	d
STORE32H	libtomcrypt/headers/tomcrypt_macros.h	87;"	d
STORE32H	src/headers/tomcrypt_macros.h	195;"	d
STORE32H	src/headers/tomcrypt_macros.h	215;"	d
STORE32H	src/headers/tomcrypt_macros.h	44;"	d
STORE32H	src/headers/tomcrypt_macros.h	72;"	d
STORE32H	src/headers/tomcrypt_macros.h	87;"	d
STORE32L	libtomcrypt/headers/tomcrypt_macros.h	133;"	d
STORE32L	libtomcrypt/headers/tomcrypt_macros.h	153;"	d
STORE32L	libtomcrypt/headers/tomcrypt_macros.h	170;"	d
STORE32L	libtomcrypt/headers/tomcrypt_macros.h	22;"	d
STORE32L	src/headers/tomcrypt_macros.h	134;"	d
STORE32L	src/headers/tomcrypt_macros.h	154;"	d
STORE32L	src/headers/tomcrypt_macros.h	171;"	d
STORE32L	src/headers/tomcrypt_macros.h	22;"	d
STORE64H	libtomcrypt/headers/tomcrypt_macros.h	102;"	d
STORE64H	libtomcrypt/headers/tomcrypt_macros.h	117;"	d
STORE64H	libtomcrypt/headers/tomcrypt_macros.h	200;"	d
STORE64H	libtomcrypt/headers/tomcrypt_macros.h	220;"	d
STORE64H	libtomcrypt/headers/tomcrypt_macros.h	54;"	d
STORE64H	src/headers/tomcrypt_macros.h	103;"	d
STORE64H	src/headers/tomcrypt_macros.h	118;"	d
STORE64H	src/headers/tomcrypt_macros.h	201;"	d
STORE64H	src/headers/tomcrypt_macros.h	221;"	d
STORE64H	src/headers/tomcrypt_macros.h	54;"	d
STORE64L	libtomcrypt/headers/tomcrypt_macros.h	139;"	d
STORE64L	libtomcrypt/headers/tomcrypt_macros.h	159;"	d
STORE64L	libtomcrypt/headers/tomcrypt_macros.h	180;"	d
STORE64L	libtomcrypt/headers/tomcrypt_macros.h	32;"	d
STORE64L	src/headers/tomcrypt_macros.h	140;"	d
STORE64L	src/headers/tomcrypt_macros.h	160;"	d
STORE64L	src/headers/tomcrypt_macros.h	181;"	d
STORE64L	src/headers/tomcrypt_macros.h	32;"	d
STORE_V	libtomcrypt/pk/asn1/der/utctime/der_encode_utctime.c	22;"	d	file:
STORE_V	src/pk/asn1/der/utctime/der_encode_utctime.c	22;"	d	file:
Safer_Expand_Userkey	src/ciphers/safer/safer.c	/^static void Safer_Expand_Userkey(const unsigned char *userkey_1,$/;"	f	file:
Sbox	src/prngs/sober128tab.c	/^static const ulong32 Sbox[256] = {$/;"	v	file:
Sigma0	src/hashes/sha2/sha256.c	62;"	d	file:
Sigma0	src/hashes/sha2/sha512.c	87;"	d	file:
Sigma1	src/hashes/sha2/sha256.c	63;"	d	file:
Sigma1	src/hashes/sha2/sha512.c	88;"	d	file:
Symmetric_key	src/headers/tomcrypt_cipher.h	/^typedef union Symmetric_key {$/;"	u
T0	src/ciphers/anubis.c	/^static const ulong32 T0[256] = {$/;"	v	file:
T0	src/ciphers/khazad.c	/^static const ulong64 T0[256] = {$/;"	v	file:
T1	src/ciphers/anubis.c	/^static const ulong32 T1[256] = {$/;"	v	file:
T1	src/ciphers/khazad.c	/^static const ulong64 T1[256] = {$/;"	v	file:
T2	src/ciphers/anubis.c	/^static const ulong32 T2[256] = {$/;"	v	file:
T2	src/ciphers/khazad.c	/^static const ulong64 T2[256] = {$/;"	v	file:
T3	src/ciphers/anubis.c	/^static const ulong32 T3[256] = {$/;"	v	file:
T3	src/ciphers/khazad.c	/^static const ulong64 T3[256] = {$/;"	v	file:
T4	src/ciphers/anubis.c	/^static const ulong32 T4[256] = {$/;"	v	file:
T4	src/ciphers/khazad.c	/^static const ulong64 T4[256] = {$/;"	v	file:
T5	src/ciphers/anubis.c	/^static const ulong32 T5[256] = {$/;"	v	file:
T5	src/ciphers/khazad.c	/^static const ulong64 T5[256] = {$/;"	v	file:
T6	src/ciphers/khazad.c	/^static const ulong64 T6[256] = {$/;"	v	file:
T7	src/ciphers/khazad.c	/^static const ulong64 T7[256] = {$/;"	v	file:
TAB_SIZE	libtomcrypt/headers/tomcrypt.h	26;"	d
TAB_SIZE	libtommath/bn_mp_exptmod_fast.c	27;"	d	file:
TAB_SIZE	libtommath/bn_mp_exptmod_fast.c	29;"	d	file:
TAB_SIZE	libtommath/bn_s_mp_exptmod.c	18;"	d	file:
TAB_SIZE	libtommath/bn_s_mp_exptmod.c	20;"	d	file:
TAB_SIZE	src/headers/tomcrypt.h	26;"	d
TD0	src/ciphers/aes/aes_tab.c	/^static const ulong32 TD0[256] = {$/;"	v	file:
TD1	src/ciphers/aes/aes_tab.c	/^static const ulong32 TD1[256] = {$/;"	v	file:
TD2	src/ciphers/aes/aes_tab.c	/^static const ulong32 TD2[256] = {$/;"	v	file:
TD3	src/ciphers/aes/aes_tab.c	/^static const ulong32 TD3[256] = {$/;"	v	file:
TE0	src/ciphers/aes/aes_tab.c	/^static const ulong32 TE0[256] = {$/;"	v	file:
TE1	src/ciphers/aes/aes_tab.c	/^static const ulong32 TE1[256] = {$/;"	v	file:
TE2	src/ciphers/aes/aes_tab.c	/^static const ulong32 TE2[256] = {$/;"	v	file:
TE3	src/ciphers/aes/aes_tab.c	/^static const ulong32 TE3[256] = {$/;"	v	file:
THETA	src/ciphers/noekeon.c	47;"	d	file:
TOMCRYPT_CFG_H	libtomcrypt/headers/tomcrypt_cfg.h	8;"	d
TOMCRYPT_CFG_H	src/headers/tomcrypt_cfg.h	8;"	d
TOMCRYPT_CUSTOM_H_	libtomcrypt/headers/tomcrypt_custom.h	2;"	d
TOMCRYPT_CUSTOM_H_	src/headers/tomcrypt_custom.h	2;"	d
TOMCRYPT_H_	libtomcrypt/headers/tomcrypt.h	2;"	d
TOMCRYPT_H_	src/headers/tomcrypt.h	2;"	d
TOMCRYPT_OBJECTS	Makefile	/^TOMCRYPT_OBJECTS = libtomcrypt\/pk\/pkcs1\/pkcs_1_i2osp.o \\$/;"	m
TOMMATH_OBJECTS	Makefile	/^TOMMATH_OBJECTS = libtommath\/bncore.o libtommath\/bn_mp_init.o libtommath\/bn_mp_clear.o libtommath\/bn_mp_exch.o libtommath\/bn_mp_grow.o libtommath\/bn_mp_shrink.o \\$/;"	m
TOOM_MUL_CUTOFF	libtommath/bncore.c	/^    TOOM_MUL_CUTOFF = 350,	\/* no optimal values of these are known yet so set em high *\/$/;"	v
TOOM_SQR_CUTOFF	libtommath/bncore.c	/^    TOOM_SQR_CUTOFF = 400;$/;"	v
TRY_URANDOM_FIRST	libtomcrypt/headers/tomcrypt_custom.h	100;"	d
TRY_URANDOM_FIRST	libtomcrypt/headers/tomcrypt_custom.h	283;"	d
TRY_URANDOM_FIRST	src/headers/tomcrypt_custom.h	282;"	d
TRY_URANDOM_FIRST	src/headers/tomcrypt_custom.h	98;"	d
Td0	src/ciphers/aes/aes_tab.c	311;"	d	file:
Td0	src/ciphers/aes/aes_tab.c	328;"	d	file:
Td1	src/ciphers/aes/aes_tab.c	312;"	d	file:
Td1	src/ciphers/aes/aes_tab.c	329;"	d	file:
Td2	src/ciphers/aes/aes_tab.c	313;"	d	file:
Td2	src/ciphers/aes/aes_tab.c	330;"	d	file:
Td3	src/ciphers/aes/aes_tab.c	314;"	d	file:
Td3	src/ciphers/aes/aes_tab.c	331;"	d	file:
Td4	src/ciphers/aes/aes_tab.c	/^static const ulong32 Td4[256] = {$/;"	v	file:
Te0	src/ciphers/aes/aes_tab.c	306;"	d	file:
Te0	src/ciphers/aes/aes_tab.c	323;"	d	file:
Te1	src/ciphers/aes/aes_tab.c	307;"	d	file:
Te1	src/ciphers/aes/aes_tab.c	324;"	d	file:
Te2	src/ciphers/aes/aes_tab.c	308;"	d	file:
Te2	src/ciphers/aes/aes_tab.c	325;"	d	file:
Te3	src/ciphers/aes/aes_tab.c	309;"	d	file:
Te3	src/ciphers/aes/aes_tab.c	326;"	d	file:
Te4	src/ciphers/aes/aes_tab.c	/^static const ulong32 Te4[256] = {$/;"	v	file:
Te4_0	src/ciphers/aes/aes_tab.c	/^static const ulong32 Te4_0[] = {$/;"	v	file:
Te4_0	src/ciphers/aes/aes_tab.c	316;"	d	file:
Te4_1	src/ciphers/aes/aes_tab.c	/^static const ulong32 Te4_1[] = {$/;"	v	file:
Te4_1	src/ciphers/aes/aes_tab.c	317;"	d	file:
Te4_2	src/ciphers/aes/aes_tab.c	/^static const ulong32 Te4_2[] = {$/;"	v	file:
Te4_2	src/ciphers/aes/aes_tab.c	318;"	d	file:
Te4_3	src/ciphers/aes/aes_tab.c	/^static const ulong32 Te4_3[] = {$/;"	v	file:
Te4_3	src/ciphers/aes/aes_tab.c	319;"	d	file:
Tks0	src/ciphers/aes/aes_tab.c	/^static const ulong32 Tks0[] = {$/;"	v	file:
Tks1	src/ciphers/aes/aes_tab.c	/^static const ulong32 Tks1[] = {$/;"	v	file:
Tks2	src/ciphers/aes/aes_tab.c	/^static const ulong32 Tks2[] = {$/;"	v	file:
Tks3	src/ciphers/aes/aes_tab.c	/^static const ulong32 Tks3[] = {$/;"	v	file:
UNDEFED_HASH	src/hashes/chc/chc.c	21;"	d	file:
UNDER_CE	src/prngs/rng_get_bytes.c	93;"	d	file:
USED	libtommath/tommath.h	171;"	d
USE_BBS	libtomcrypt/math/rand_prime.c	18;"	d	file:
USE_BBS	src/math/rand_prime.c	18;"	d	file:
WINSIZE	src/pk/ecc/ltc_ecc_mulmod.c	216;"	d	file:
WINSIZE	src/pk/ecc/ltc_ecc_mulmod.c	28;"	d	file:
WORD2BYTE	src/prngs/sober128.c	52;"	d	file:
WPV	src/encauth/gcm/gcm_gf_mult.c	109;"	d	file:
Worder	src/hashes/md5.c	/^static const unsigned char Worder[64] = {$/;"	v	file:
X	src/headers/tomcrypt_hash.h	/^    unsigned char chksum[16], X[48], buf[16];$/;"	m	struct:md2_state
X	src/headers/tomcrypt_mac.h	/^                       X[16],        \/* accumulator *\/$/;"	m	struct:__anon49
XCALLOC	libtomcrypt/headers/tomcrypt_custom.h	23;"	d
XCALLOC	libtommath/tommath.h	107;"	d
XCALLOC	src/headers/tomcrypt_custom.h	21;"	d
XCLOCK	libtomcrypt/headers/tomcrypt_custom.h	58;"	d
XCLOCK	src/headers/tomcrypt_custom.h	56;"	d
XCLOCKS_PER_SEC	libtomcrypt/headers/tomcrypt_custom.h	61;"	d
XCLOCKS_PER_SEC	src/headers/tomcrypt_custom.h	59;"	d
XFREE	libtomcrypt/headers/tomcrypt_custom.h	29;"	d
XFREE	libtommath/tommath.h	105;"	d
XFREE	src/headers/tomcrypt_custom.h	27;"	d
XMALLOC	libtomcrypt/headers/tomcrypt_custom.h	11;"	d
XMALLOC	libtommath/tommath.h	104;"	d
XMALLOC	src/headers/tomcrypt_custom.h	9;"	d
XMEMCMP	libtomcrypt/headers/tomcrypt_custom.h	48;"	d
XMEMCMP	src/headers/tomcrypt_custom.h	46;"	d
XMEMCPY	libtomcrypt/headers/tomcrypt_custom.h	42;"	d
XMEMCPY	src/headers/tomcrypt_custom.h	40;"	d
XMEMSET	libtomcrypt/headers/tomcrypt_custom.h	36;"	d
XMEMSET	src/headers/tomcrypt_custom.h	34;"	d
XORNL	src/prngs/sober128.c	172;"	d	file:
XORWORD	src/prngs/sober128.c	/^static void XORWORD(ulong32 w, unsigned char *b)$/;"	f	file:
XQSORT	libtomcrypt/headers/tomcrypt_custom.h	68;"	d
XQSORT	src/headers/tomcrypt_custom.h	66;"	d
XREALLOC	libtomcrypt/headers/tomcrypt_custom.h	17;"	d
XREALLOC	libtommath/tommath.h	106;"	d
XREALLOC	src/headers/tomcrypt_custom.h	15;"	d
XSTRCMP	libtomcrypt/headers/tomcrypt_custom.h	54;"	d
XSTRCMP	src/headers/tomcrypt_custom.h	52;"	d
Y	src/headers/tomcrypt_mac.h	/^                       Y[16],        \/* counter *\/$/;"	m	struct:__anon49
YY	libtomcrypt/headers/tomcrypt_pk.h	/^	unsigned YY,		\/* year *\/$/;"	m	struct:__anon15
YY	src/headers/tomcrypt_pk.h	/^   unsigned YY, \/* year *\/$/;"	m	struct:__anon44
Y_0	src/headers/tomcrypt_mac.h	/^                       Y_0[16],      \/* initial counter *\/$/;"	m	struct:__anon49
_Safer_Expand_Userkey	src/ciphers/safer/safer.c	/^static void _Safer_Expand_Userkey(const unsigned char *userkey_1,$/;"	f	file:
_WIN32_WINNT	src/prngs/rng_get_bytes.c	91;"	d	file:
__NL_ATTRIBUTES	libtomcrypt/headers/ncr.h	/^	 __NL_ATTRIBUTES;$/;"	m	struct:ncr_key_derive
__NL_ATTRIBUTES	libtomcrypt/headers/ncr.h	/^	 __NL_ATTRIBUTES;$/;"	m	struct:ncr_key_export
__NL_ATTRIBUTES	libtomcrypt/headers/ncr.h	/^	 __NL_ATTRIBUTES;$/;"	m	struct:ncr_key_generate
__NL_ATTRIBUTES	libtomcrypt/headers/ncr.h	/^	 __NL_ATTRIBUTES;$/;"	m	struct:ncr_key_generate_pair
__NL_ATTRIBUTES	libtomcrypt/headers/ncr.h	/^	 __NL_ATTRIBUTES;$/;"	m	struct:ncr_key_get_info
__NL_ATTRIBUTES	libtomcrypt/headers/ncr.h	/^	 __NL_ATTRIBUTES;$/;"	m	struct:ncr_key_import
__NL_ATTRIBUTES	libtomcrypt/headers/ncr.h	/^	 __NL_ATTRIBUTES;$/;"	m	struct:ncr_key_storage_unwrap
__NL_ATTRIBUTES	libtomcrypt/headers/ncr.h	/^	 __NL_ATTRIBUTES;$/;"	m	struct:ncr_key_storage_wrap
__NL_ATTRIBUTES	libtomcrypt/headers/ncr.h	/^	 __NL_ATTRIBUTES;$/;"	m	struct:ncr_key_unwrap
__NL_ATTRIBUTES	libtomcrypt/headers/ncr.h	/^	 __NL_ATTRIBUTES;$/;"	m	struct:ncr_key_wrap
__NL_ATTRIBUTES	libtomcrypt/headers/ncr.h	/^	 __NL_ATTRIBUTES;$/;"	m	struct:ncr_master_key_set
__NL_ATTRIBUTES	libtomcrypt/headers/ncr.h	/^	 __NL_ATTRIBUTES;$/;"	m	struct:ncr_session_final
__NL_ATTRIBUTES	libtomcrypt/headers/ncr.h	/^	 __NL_ATTRIBUTES;$/;"	m	struct:ncr_session_init
__NL_ATTRIBUTES	libtomcrypt/headers/ncr.h	/^	 __NL_ATTRIBUTES;$/;"	m	struct:ncr_session_once
__NL_ATTRIBUTES	libtomcrypt/headers/ncr.h	/^	 __NL_ATTRIBUTES;$/;"	m	struct:ncr_session_update
__NL_ATTRIBUTES	libtomcrypt/headers/ncr.h	65;"	d
__OK_FILE_H__	include/ok_file.h	20;"	d
__OK_LOG_H__	include/ok_log.h	20;"	d
__OK_MAIN_H__	include/ok_main.h	20;"	d
__OK_MEM_H__	include/ok_mem.h	19;"	d
__OK_TYPE_H__	include/ok_type.h	20;"	d
__this_module	ok_crypto.mod.c	/^struct module __this_module$/;"	v	typeref:struct:module
__used	ok_crypto.mod.c	/^__used$/;"	v	file:
__user	libtomcrypt/headers/ncr.h	6;"	d
_anubis_setup	src/ciphers/anubis.c	/^static int _anubis_setup(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey)$/;"	f	file:
_blowfish_ecb_decrypt	src/ciphers/blowfish.c	/^static int _blowfish_ecb_decrypt(const unsigned char *ct, unsigned char *pt, symmetric_key *skey)$/;"	f	file:
_blowfish_ecb_encrypt	src/ciphers/blowfish.c	/^static int _blowfish_ecb_encrypt(const unsigned char *pt, unsigned char *ct, symmetric_key *skey)$/;"	f	file:
_cast5_ecb_decrypt	src/ciphers/cast5.c	/^static int _cast5_ecb_decrypt(const unsigned char *ct, unsigned char *pt, symmetric_key *skey)$/;"	f	file:
_cast5_ecb_encrypt	src/ciphers/cast5.c	/^static int _cast5_ecb_encrypt(const unsigned char *pt, unsigned char *ct, symmetric_key *skey)$/;"	f	file:
_cast5_setup	src/ciphers/cast5.c	/^static int _cast5_setup(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey)$/;"	f	file:
_cookey	src/ciphers/des.c	/^static void _cookey(const ulong32 *raw1, ulong32 *keyout)$/;"	f	file:
_deskey	src/ciphers/des.c	/^static void _deskey(const unsigned char *key, short edf, ulong32 *keyout)$/;"	f	file:
_g_func	src/ciphers/twofish/twofish.c	/^static ulong32 _g_func(ulong32 x, symmetric_key *key)$/;"	f	file:
_ilt	src/ciphers/safer/saferp.c	/^static void _ilt(unsigned char *b, unsigned char *b2)$/;"	f	file:
_iround	src/ciphers/safer/saferp.c	/^static void _iround(unsigned char *b, int i, symmetric_key *skey)$/;"	f	file:
_lt	src/ciphers/safer/saferp.c	/^static void _lt(unsigned char *b, unsigned char *b2)$/;"	f	file:
_md4_compress	src/hashes/md4.c	/^static int _md4_compress(hash_state *md, unsigned char *buf)$/;"	f	file:
_md5_compress	src/hashes/md5.c	/^static int _md5_compress(hash_state *md, unsigned char *buf)$/;"	f	file:
_noekeon_ecb_decrypt	src/ciphers/noekeon.c	/^static int _noekeon_ecb_decrypt(const unsigned char *ct, unsigned char *pt, symmetric_key *skey)$/;"	f	file:
_noekeon_ecb_encrypt	src/ciphers/noekeon.c	/^static int _noekeon_ecb_encrypt(const unsigned char *pt, unsigned char *ct, symmetric_key *skey)$/;"	f	file:
_rc2_ecb_decrypt	src/ciphers/rc2.c	/^static int _rc2_ecb_decrypt( const unsigned char *ct,$/;"	f	file:
_rc2_ecb_encrypt	src/ciphers/rc2.c	/^static int _rc2_ecb_encrypt( const unsigned char *pt,$/;"	f	file:
_rc5_ecb_decrypt	src/ciphers/rc5.c	/^static int _rc5_ecb_decrypt(const unsigned char *ct, unsigned char *pt, symmetric_key *skey)$/;"	f	file:
_rc5_ecb_encrypt	src/ciphers/rc5.c	/^static int _rc5_ecb_encrypt(const unsigned char *pt, unsigned char *ct, symmetric_key *skey)$/;"	f	file:
_rc5_setup	src/ciphers/rc5.c	/^static int _rc5_setup(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey)$/;"	f	file:
_rc6_ecb_decrypt	src/ciphers/rc6.c	/^static int _rc6_ecb_decrypt(const unsigned char *ct, unsigned char *pt, symmetric_key *skey)$/;"	f	file:
_rc6_ecb_encrypt	src/ciphers/rc6.c	/^static int _rc6_ecb_encrypt(const unsigned char *pt, unsigned char *ct, symmetric_key *skey)$/;"	f	file:
_rc6_setup	src/ciphers/rc6.c	/^static int _rc6_setup(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey)$/;"	f	file:
_rijndael_ecb_decrypt	src/ciphers/aes/aes.c	/^static int _rijndael_ecb_decrypt(const unsigned char *ct, unsigned char *pt, symmetric_key *skey) $/;"	f	file:
_rijndael_ecb_encrypt	src/ciphers/aes/aes.c	/^static int _rijndael_ecb_encrypt(const unsigned char *pt, unsigned char *ct, symmetric_key *skey) $/;"	f	file:
_rmd128_compress	src/hashes/rmd128.c	/^static int _rmd128_compress(hash_state *md, unsigned char *buf)$/;"	f	file:
_rmd160_compress	src/hashes/rmd160.c	/^static int _rmd160_compress(hash_state *md, unsigned char *buf)$/;"	f	file:
_rmd256_compress	src/hashes/rmd256.c	/^static int _rmd256_compress(hash_state *md, unsigned char *buf)$/;"	f	file:
_rmd320_compress	src/hashes/rmd320.c	/^static int _rmd320_compress(hash_state *md, unsigned char *buf)$/;"	f	file:
_round	src/ciphers/safer/saferp.c	/^static void _round(unsigned char *b, int i, symmetric_key *skey) $/;"	f	file:
_safer_ecb_decrypt	src/ciphers/safer/safer.c	/^static int _safer_ecb_decrypt(const unsigned char *block_in,$/;"	f	file:
_safer_ecb_encrypt	src/ciphers/safer/safer.c	/^static int _safer_ecb_encrypt(const unsigned char *block_in,$/;"	f	file:
_sbox	src/ciphers/twofish/twofish.c	/^static ulong32 _sbox(int i, ulong32 x)$/;"	f	file:
_sha1_compress	src/hashes/sha1.c	/^static int _sha1_compress(hash_state *md, unsigned char *buf)$/;"	f	file:
_sha256_compress	src/hashes/sha2/sha256.c	/^static int _sha256_compress(hash_state * md, unsigned char *buf)$/;"	f	file:
_sha512_compress	src/hashes/sha2/sha512.c	/^static int _sha512_compress(hash_state * md, unsigned char *buf)$/;"	f	file:
_skipjack_ecb_decrypt	src/ciphers/skipjack.c	/^static int _skipjack_ecb_decrypt(const unsigned char *ct, unsigned char *pt, symmetric_key *skey)$/;"	f	file:
_skipjack_ecb_encrypt	src/ciphers/skipjack.c	/^static int _skipjack_ecb_encrypt(const unsigned char *pt, unsigned char *ct, symmetric_key *skey)$/;"	f	file:
_tiger_compress	src/hashes/tiger.c	/^static int _tiger_compress(hash_state *md, unsigned char *buf)$/;"	f	file:
_twofish_ecb_decrypt	src/ciphers/twofish/twofish.c	/^static int _twofish_ecb_decrypt(const unsigned char *ct, unsigned char *pt, symmetric_key *skey)$/;"	f	file:
_twofish_ecb_encrypt	src/ciphers/twofish/twofish.c	/^static int _twofish_ecb_encrypt(const unsigned char *pt, unsigned char *ct, symmetric_key *skey)$/;"	f	file:
_twofish_setup	src/ciphers/twofish/twofish.c	/^static int _twofish_setup(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey)$/;"	f	file:
_whirlpool_compress	src/hashes/whirl/whirl.c	/^static int _whirlpool_compress(hash_state *md, unsigned char *buf)$/;"	f	file:
accel_cbc_decrypt	src/headers/tomcrypt_cipher.h	/^   int (*accel_cbc_decrypt)(const unsigned char *ct, unsigned char *pt, unsigned long blocks, unsigned char *IV, symmetric_key *skey);$/;"	m	struct:ltc_cipher_descriptor
accel_cbc_encrypt	src/headers/tomcrypt_cipher.h	/^   int (*accel_cbc_encrypt)(const unsigned char *pt, unsigned char *ct, unsigned long blocks, unsigned char *IV, symmetric_key *skey);$/;"	m	struct:ltc_cipher_descriptor
accel_ccm_memory	src/headers/tomcrypt_cipher.h	/^   int (*accel_ccm_memory)($/;"	m	struct:ltc_cipher_descriptor
accel_ctr_encrypt	src/headers/tomcrypt_cipher.h	/^   int (*accel_ctr_encrypt)(const unsigned char *pt, unsigned char *ct, unsigned long blocks, unsigned char *IV, int mode, symmetric_key *skey);$/;"	m	struct:ltc_cipher_descriptor
accel_ecb_decrypt	src/headers/tomcrypt_cipher.h	/^   int (*accel_ecb_decrypt)(const unsigned char *ct, unsigned char *pt, unsigned long blocks, symmetric_key *skey);$/;"	m	struct:ltc_cipher_descriptor
accel_ecb_encrypt	src/headers/tomcrypt_cipher.h	/^   int (*accel_ecb_encrypt)(const unsigned char *pt, unsigned char *ct, unsigned long blocks, symmetric_key *skey);$/;"	m	struct:ltc_cipher_descriptor
accel_fp_mul	src/math/fp/ltc_ecc_fp_mulmod.c	/^static int accel_fp_mul(int idx, void *k, ecc_point *R, void *modulus, void *mp, int map)$/;"	f	file:
accel_fp_mul2add	src/math/fp/ltc_ecc_fp_mulmod.c	/^static int accel_fp_mul2add(int idx1, int idx2, $/;"	f	file:
accel_gcm_memory	src/headers/tomcrypt_cipher.h	/^   int (*accel_gcm_memory)($/;"	m	struct:ltc_cipher_descriptor
accel_lrw_decrypt	src/headers/tomcrypt_cipher.h	/^   int (*accel_lrw_decrypt)(const unsigned char *ct, unsigned char *pt, unsigned long blocks, unsigned char *IV, const unsigned char *tweak, symmetric_key *skey);$/;"	m	struct:ltc_cipher_descriptor
accel_lrw_encrypt	src/headers/tomcrypt_cipher.h	/^   int (*accel_lrw_encrypt)(const unsigned char *pt, unsigned char *ct, unsigned long blocks, unsigned char *IV, const unsigned char *tweak, symmetric_key *skey);$/;"	m	struct:ltc_cipher_descriptor
access_key	include/ok_type.h	/^    unsigned int access_key;$/;"	m	struct:ok_dev
add	src/headers/tomcrypt_math.h	/^   int (*add)(void *a, void *b, void *c);$/;"	m	struct:__anon52
add	src/math/gmp_desc.c	/^static int add(void *a, void *b, void *c)$/;"	f	file:
add	src/math/ltm_desc.c	/^static int add(void *a, void *b, void *c)$/;"	f	file:
add	src/math/tfm_desc.c	/^static int add(void *a, void *b, void *c)$/;"	f	file:
add_entropy	libtomcrypt/headers/tomcrypt_prng.h	/^	int (*add_entropy) (const unsigned char *in, unsigned long inlen,$/;"	m	struct:ltc_prng_descriptor
add_entropy	src/headers/tomcrypt_prng.h	/^    int (*add_entropy)(const unsigned char *in, unsigned long inlen, prng_state *prng);$/;"	m	struct:ltc_prng_descriptor
add_entry	src/math/fp/ltc_ecc_fp_mulmod.c	/^static int add_entry(int idx, ecc_point *g)$/;"	f	file:
addi	src/headers/tomcrypt_math.h	/^   int (*addi)(void *a, unsigned long b, void *c);$/;"	m	struct:__anon52
addi	src/math/gmp_desc.c	/^static int addi(void *a, unsigned long b, void *c)$/;"	f	file:
addi	src/math/ltm_desc.c	/^static int addi(void *a, unsigned long b, void *c)$/;"	f	file:
addi	src/math/tfm_desc.c	/^static int addi(void *a, unsigned long b, void *c)$/;"	f	file:
aes_desc	src/ciphers/aes/aes.c	/^const struct ltc_cipher_descriptor aes_desc =$/;"	v	typeref:struct:ltc_cipher_descriptor
aes_done	src/headers/tomcrypt_cipher.h	621;"	d
aes_ecb_decrypt	src/headers/tomcrypt_cipher.h	619;"	d
aes_ecb_encrypt	src/headers/tomcrypt_cipher.h	618;"	d
aes_enc_desc	src/ciphers/aes/aes.c	/^const struct ltc_cipher_descriptor aes_enc_desc =$/;"	v	typeref:struct:ltc_cipher_descriptor
aes_enc_ecb_encrypt	src/headers/tomcrypt_cipher.h	625;"	d
aes_enc_keysize	src/headers/tomcrypt_cipher.h	626;"	d
aes_enc_setup	src/headers/tomcrypt_cipher.h	624;"	d
aes_keysize	src/headers/tomcrypt_cipher.h	622;"	d
aes_setup	src/headers/tomcrypt_cipher.h	617;"	d
aes_test	src/headers/tomcrypt_cipher.h	620;"	d
akey	src/headers/tomcrypt_mac.h	/^   unsigned char akey[MAXBLOCKSIZE],$/;"	m	struct:__anon51
algo	libtomcrypt/headers/ncr-int.h	/^	ncr_algorithm_t algo;$/;"	m	struct:algo_properties_st
algo_oid_st	libtomcrypt/headers/ncr-int.h	/^struct algo_oid_st {$/;"	s
algo_properties_st	libtomcrypt/headers/ncr-int.h	/^struct algo_properties_st {$/;"	s
algorithm	libtomcrypt/headers/ncr-int.h	/^	const struct algo_properties_st *algorithm;	\/* non-NULL for public\/private keys *\/$/;"	m	struct:key_item_st	typeref:struct:key_item_st::algo_properties_st
algorithm	libtomcrypt/headers/ncr-pk.h	/^	const struct algo_properties_st *algorithm;	\/* algorithm *\/$/;"	m	struct:ncr_pk_ctx	typeref:struct:ncr_pk_ctx::algo_properties_st
alloc	libtommath/tommath.h	/^	int used, alloc, sign;$/;"	m	struct:__anon23
anubis	src/headers/tomcrypt_cipher.h	/^   struct anubis_key   anubis;$/;"	m	union:Symmetric_key	typeref:struct:Symmetric_key::anubis_key
anubis_crypt	src/ciphers/anubis.c	/^static void anubis_crypt(const unsigned char *plaintext, unsigned char *ciphertext,$/;"	f	file:
anubis_desc	src/ciphers/anubis.c	/^const struct ltc_cipher_descriptor anubis_desc = {$/;"	v	typeref:struct:ltc_cipher_descriptor
anubis_done	src/ciphers/anubis.c	/^void anubis_done(symmetric_key *skey)$/;"	f
anubis_ecb_decrypt	src/ciphers/anubis.c	/^int anubis_ecb_decrypt(const unsigned char *ct, unsigned char *pt, symmetric_key *skey)$/;"	f
anubis_ecb_encrypt	src/ciphers/anubis.c	/^int anubis_ecb_encrypt(const unsigned char *pt, unsigned char *ct, symmetric_key *skey)$/;"	f
anubis_key	src/headers/tomcrypt_cipher.h	/^struct anubis_key { $/;"	s
anubis_keysize	src/ciphers/anubis.c	/^int anubis_keysize(int *keysize)$/;"	f
anubis_setup	src/ciphers/anubis.c	/^int  anubis_setup(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey)$/;"	f
anubis_test	src/ciphers/anubis.c	/^int anubis_test(void)$/;"	f
async	libtomcrypt/headers/cryptodev_int.h	/^	} async;$/;"	m	struct:cipher_data	typeref:struct:cipher_data::__anon2
async	libtomcrypt/headers/cryptodev_int.h	/^	} async;$/;"	m	struct:hash_data	typeref:struct:hash_data::__anon3
base64_decode	src/misc/base64/base64_decode.c	/^int base64_decode(const unsigned char *in,  unsigned long inlen, $/;"	f
base64_encode	src/misc/base64/base64_encode.c	/^int base64_encode(const unsigned char *in,  unsigned long inlen, $/;"	f
baseten	libtomcrypt/pk/asn1/der/utctime/der_encode_utctime.c	/^static const char *baseten = "0123456789";$/;"	v	file:
baseten	src/pk/asn1/der/utctime/der_encode_utctime.c	/^static const char *baseten = "0123456789";$/;"	v	file:
bigbyte	src/ciphers/des.c	/^static const ulong32 bigbyte[24] =$/;"	v	file:
bits_per_digit	src/headers/tomcrypt_math.h	/^   int  bits_per_digit;$/;"	m	struct:__anon52
blklen	src/headers/tomcrypt_mac.h	/^                   blklen;$/;"	m	struct:__anon45
block	src/headers/tomcrypt_mac.h	/^                     block[MAXBLOCKSIZE],     \/* currently accumulated block *\/$/;"	m	struct:__anon46
block	src/headers/tomcrypt_mac.h	/^   unsigned char   block[MAXBLOCKSIZE],$/;"	m	struct:__anon45
block_index	src/headers/tomcrypt_mac.h	/^   unsigned long     block_index;             \/* index # for current block *\/$/;"	m	struct:__anon46
block_index	src/headers/tomcrypt_mac.h	/^   unsigned long     block_index;             \/* index # for current block *\/$/;"	m	struct:__anon48
block_len	src/headers/tomcrypt_mac.h	/^                     block_len,               \/* length of block *\/$/;"	m	struct:__anon46
block_len	src/headers/tomcrypt_mac.h	/^                     block_len;               \/* length of block *\/$/;"	m	struct:__anon48
block_length	src/headers/tomcrypt_cipher.h	/^        block_length, $/;"	m	struct:ltc_cipher_descriptor
blockcnt	src/headers/tomcrypt_cipher.h	/^   ulong32             blockcnt;$/;"	m	struct:__anon36
blocklen	src/headers/tomcrypt_cipher.h	/^                       blocklen, $/;"	m	struct:__anon31
blocklen	src/headers/tomcrypt_cipher.h	/^                       blocklen, $/;"	m	struct:__anon32
blocklen	src/headers/tomcrypt_cipher.h	/^                       blocklen, $/;"	m	struct:__anon34
blocklen	src/headers/tomcrypt_cipher.h	/^                       blocklen, $/;"	m	struct:__anon36
blocklen	src/headers/tomcrypt_cipher.h	/^                       blocklen;$/;"	m	struct:__anon30
blocklen	src/headers/tomcrypt_cipher.h	/^                       blocklen;$/;"	m	struct:__anon33
blocksize	libtomcrypt/headers/cryptodev_int.h	/^	int blocksize;$/;"	m	struct:cipher_data
blocksize	src/headers/tomcrypt_hash.h	/^    unsigned long blocksize;$/;"	m	struct:ltc_hash_descriptor
blocksize	src/headers/tomcrypt_mac.h	/^                 blocksize;$/;"	m	struct:__anon50
blocksize	src/headers/tomcrypt_mac.h	/^                 blocksize;$/;"	m	struct:__anon51
blowfish	src/headers/tomcrypt_cipher.h	/^   struct blowfish_key blowfish;$/;"	m	union:Symmetric_key	typeref:struct:Symmetric_key::blowfish_key
blowfish_desc	src/ciphers/blowfish.c	/^const struct ltc_cipher_descriptor blowfish_desc =$/;"	v	typeref:struct:ltc_cipher_descriptor
blowfish_done	src/ciphers/blowfish.c	/^void blowfish_done(symmetric_key *skey)$/;"	f
blowfish_ecb_decrypt	src/ciphers/blowfish.c	/^int blowfish_ecb_decrypt(const unsigned char *ct, unsigned char *pt, symmetric_key *skey)$/;"	f
blowfish_ecb_encrypt	src/ciphers/blowfish.c	/^int blowfish_ecb_encrypt(const unsigned char *pt, unsigned char *ct, symmetric_key *skey)$/;"	f
blowfish_key	src/headers/tomcrypt_cipher.h	/^struct blowfish_key {$/;"	s
blowfish_keysize	src/ciphers/blowfish.c	/^int blowfish_keysize(int *keysize)$/;"	f
blowfish_setup	src/ciphers/blowfish.c	/^int blowfish_setup(const unsigned char *key, int keylen, int num_rounds,$/;"	f
blowfish_test	src/ciphers/blowfish.c	/^int blowfish_test(void)$/;"	f
bn_reverse	libtommath/bn_reverse.c	/^void bn_reverse(unsigned char *s, int len)$/;"	f
buf	src/headers/tomcrypt_hash.h	/^    unsigned char buf[128];$/;"	m	struct:sha512_state
buf	src/headers/tomcrypt_hash.h	/^    unsigned char buf[64];$/;"	m	struct:md4_state
buf	src/headers/tomcrypt_hash.h	/^    unsigned char buf[64];$/;"	m	struct:md5_state
buf	src/headers/tomcrypt_hash.h	/^    unsigned char buf[64];$/;"	m	struct:rmd128_state
buf	src/headers/tomcrypt_hash.h	/^    unsigned char buf[64];$/;"	m	struct:rmd160_state
buf	src/headers/tomcrypt_hash.h	/^    unsigned char buf[64];$/;"	m	struct:rmd256_state
buf	src/headers/tomcrypt_hash.h	/^    unsigned char buf[64];$/;"	m	struct:rmd320_state
buf	src/headers/tomcrypt_hash.h	/^    unsigned char buf[64];$/;"	m	struct:sha1_state
buf	src/headers/tomcrypt_hash.h	/^    unsigned char buf[64];$/;"	m	struct:sha256_state
buf	src/headers/tomcrypt_hash.h	/^    unsigned char buf[64];$/;"	m	struct:tiger_state
buf	src/headers/tomcrypt_hash.h	/^    unsigned char buf[64];$/;"	m	struct:whirlpool_state
buf	src/headers/tomcrypt_hash.h	/^    unsigned char chksum[16], X[48], buf[16];$/;"	m	struct:md2_state
buf	src/headers/tomcrypt_hash.h	/^    unsigned char state[MAXBLOCKSIZE], buf[MAXBLOCKSIZE];$/;"	m	struct:chc_state
buf	src/headers/tomcrypt_mac.h	/^                       buf[16];      \/* buffer for stuff *\/$/;"	m	struct:__anon49
buf	src/headers/tomcrypt_prng.h	/^    unsigned char buf[256];$/;"	m	struct:rc4_prng
buffer	libtomcrypt/headers/ncr-int.h	/^	compat_uptr_t buffer;$/;"	m	struct:compat_ncr_session_output_buffer
buffer	libtomcrypt/headers/ncr.h	/^	void __user *buffer;$/;"	m	struct:ncr_key_export
buffer	libtomcrypt/headers/ncr.h	/^	void __user *buffer;$/;"	m	struct:ncr_key_storage_wrap
buffer	libtomcrypt/headers/ncr.h	/^	void __user *buffer;$/;"	m	struct:ncr_key_wrap
buffer	libtomcrypt/headers/ncr.h	/^	void __user *buffer;$/;"	m	struct:ncr_session_output_buffer
buffer_size	libtomcrypt/headers/ncr-int.h	/^	compat_size_t buffer_size;$/;"	m	struct:compat_ncr_session_output_buffer
buffer_size	libtomcrypt/headers/ncr.h	/^	__kernel_size_t buffer_size;$/;"	m	struct:ncr_session_output_buffer
buffer_size	libtomcrypt/headers/ncr.h	/^	int buffer_size;$/;"	m	struct:ncr_key_export
buffer_size	libtomcrypt/headers/ncr.h	/^	int buffer_size;$/;"	m	struct:ncr_key_storage_wrap
buffer_size	libtomcrypt/headers/ncr.h	/^	int buffer_size;$/;"	m	struct:ncr_key_wrap
buflen	src/headers/tomcrypt_mac.h	/^                       buflen;       \/* length of data in buf *\/$/;"	m	struct:__anon49
buflen	src/headers/tomcrypt_mac.h	/^                     buflen;                  \/* number of bytes in the buffer *\/$/;"	m	struct:__anon46
buflen	src/headers/tomcrypt_mac.h	/^                   buflen,$/;"	m	struct:__anon45
buflen	src/headers/tomcrypt_mac.h	/^                 buflen,$/;"	m	struct:__anon50
buflen	src/headers/tomcrypt_mac.h	/^                 buflen,$/;"	m	struct:__anon51
buflen	src/headers/tomcrypt_mac.h	/^    int           buflen;$/;"	m	struct:pelican_state
build_lut	src/math/fp/ltc_ecc_fp_mulmod.c	/^static int build_lut(int idx, void *modulus, void *mp, void *mu)$/;"	f	file:
burn_stack	src/misc/burn_stack.c	/^void burn_stack(unsigned long len)$/;"	f
byte	libtomcrypt/headers/tomcrypt_macros.h	401;"	d
byte	libtomcrypt/headers/tomcrypt_macros.h	403;"	d
byte	src/headers/tomcrypt_macros.h	417;"	d
byte	src/headers/tomcrypt_macros.h	419;"	d
bytebit	src/ciphers/des.c	/^static const ulong32 bytebit[8] =$/;"	v	file:
c	src/ciphers/khazad.c	/^static const ulong64 c[R + 1] = {$/;"	v	file:
can_digest	libtomcrypt/headers/ncr-int.h	/^	unsigned can_digest:1;$/;"	m	struct:algo_properties_st
can_encrypt	libtomcrypt/headers/ncr-int.h	/^	unsigned can_encrypt:1;$/;"	m	struct:algo_properties_st
can_kx	libtomcrypt/headers/ncr-int.h	/^	unsigned can_kx:1;	\/* key exchange *\/$/;"	m	struct:algo_properties_st
can_sign	libtomcrypt/headers/ncr-int.h	/^	unsigned can_sign:1;$/;"	m	struct:algo_properties_st
cast5	src/headers/tomcrypt_cipher.h	/^   struct cast5_key    cast5;$/;"	m	union:Symmetric_key	typeref:struct:Symmetric_key::cast5_key
cast5_desc	src/ciphers/cast5.c	/^const struct ltc_cipher_descriptor cast5_desc = {$/;"	v	typeref:struct:ltc_cipher_descriptor
cast5_done	src/ciphers/cast5.c	/^void cast5_done(symmetric_key *skey)$/;"	f
cast5_ecb_decrypt	src/ciphers/cast5.c	/^int cast5_ecb_decrypt(const unsigned char *ct, unsigned char *pt, symmetric_key *skey)$/;"	f
cast5_ecb_encrypt	src/ciphers/cast5.c	/^int cast5_ecb_encrypt(const unsigned char *pt, unsigned char *ct, symmetric_key *skey)$/;"	f
cast5_key	src/headers/tomcrypt_cipher.h	/^struct cast5_key {$/;"	s
cast5_keysize	src/ciphers/cast5.c	/^int cast5_keysize(int *keysize)$/;"	f
cast5_setup	src/ciphers/cast5.c	/^int cast5_setup(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey)$/;"	f
cast5_test	src/ciphers/cast5.c	/^int cast5_test(void)$/;"	f
cbc_decrypt	src/modes/cbc/cbc_decrypt.c	/^int cbc_decrypt(const unsigned char *ct, unsigned char *pt, unsigned long len, symmetric_CBC *cbc)$/;"	f
cbc_done	src/modes/cbc/cbc_done.c	/^int cbc_done(symmetric_CBC *cbc)$/;"	f
cbc_encrypt	src/modes/cbc/cbc_encrypt.c	/^int cbc_encrypt(const unsigned char *pt, unsigned char *ct, unsigned long len, symmetric_CBC *cbc)$/;"	f
cbc_getiv	src/modes/cbc/cbc_getiv.c	/^int cbc_getiv(unsigned char *IV, unsigned long *len, symmetric_CBC *cbc)$/;"	f
cbc_setiv	src/modes/cbc/cbc_setiv.c	/^int cbc_setiv(const unsigned char *IV, unsigned long len, symmetric_CBC *cbc)$/;"	f
cbc_start	src/modes/cbc/cbc_start.c	/^int cbc_start(int cipher, const unsigned char *IV, const unsigned char *key, $/;"	f
ccm_memory	src/encauth/ccm/ccm_memory.c	/^int ccm_memory(int cipher,$/;"	f
ccm_test	src/encauth/ccm/ccm_test.c	/^int ccm_test(void)$/;"	f
cdev	include/ok_type.h	/^    struct cdev cdev;$/;"	m	struct:ok_dev	typeref:struct:ok_dev::cdev
cfb_decrypt	src/modes/cfb/cfb_decrypt.c	/^int cfb_decrypt(const unsigned char *ct, unsigned char *pt, unsigned long len, symmetric_CFB *cfb)$/;"	f
cfb_done	src/modes/cfb/cfb_done.c	/^int cfb_done(symmetric_CFB *cfb)$/;"	f
cfb_encrypt	src/modes/cfb/cfb_encrypt.c	/^int cfb_encrypt(const unsigned char *pt, unsigned char *ct, unsigned long len, symmetric_CFB *cfb)$/;"	f
cfb_getiv	src/modes/cfb/cfb_getiv.c	/^int cfb_getiv(unsigned char *IV, unsigned long *len, symmetric_CFB *cfb)$/;"	f
cfb_setiv	src/modes/cfb/cfb_setiv.c	/^int cfb_setiv(const unsigned char *IV, unsigned long len, symmetric_CFB *cfb)$/;"	f
cfb_start	src/modes/cfb/cfb_start.c	/^int cfb_start(int cipher, const unsigned char *IV, const unsigned char *key, $/;"	f
char_to_int	libtomcrypt/pk/asn1/der/utctime/der_decode_utctime.c	/^static int char_to_int(unsigned char x)$/;"	f	file:
char_to_int	src/pk/asn1/der/utctime/der_decode_utctime.c	/^static int char_to_int(unsigned char x)$/;"	f	file:
chc	src/headers/tomcrypt_hash.h	/^    struct chc_state chc;$/;"	m	union:Hash_state	typeref:struct:Hash_state::chc_state
chc_compress	src/hashes/chc/chc.c	/^static int chc_compress(hash_state *md, unsigned char *buf)$/;"	f	file:
chc_desc	src/hashes/chc/chc.c	/^const struct ltc_hash_descriptor chc_desc = {$/;"	v	typeref:struct:ltc_hash_descriptor
chc_done	src/hashes/chc/chc.c	/^int chc_done(hash_state *md, unsigned char *out)$/;"	f
chc_init	src/hashes/chc/chc.c	/^int chc_init(hash_state *md)$/;"	f
chc_process	src/hashes/chc/chc.c	/^int chc_process(hash_state * md, const unsigned char *in, unsigned long inlen)$/;"	f
chc_register	src/hashes/chc/chc.c	/^int chc_register(int cipher)$/;"	f
chc_state	src/headers/tomcrypt_hash.h	/^struct chc_state {$/;"	s
chc_test	src/hashes/chc/chc.c	/^int chc_test(void)$/;"	f
checksum	src/headers/tomcrypt_mac.h	/^                     checksum[MAXBLOCKSIZE];  \/* current checksum *\/$/;"	m	struct:__anon46
checksum	src/headers/tomcrypt_mac.h	/^                     checksum[MAXBLOCKSIZE];  \/* current checksum *\/$/;"	m	struct:__anon48
child	libtomcrypt/headers/tomcrypt_pk.h	/^	struct ltc_asn1_list_ *prev, *next, *child, *parent;$/;"	m	struct:ltc_asn1_list_	typeref:struct:ltc_asn1_list_::
child	src/headers/tomcrypt_pk.h	/^   struct ltc_asn1_list_ *prev, *next, *child, *parent;$/;"	m	struct:ltc_asn1_list_	typeref:struct:ltc_asn1_list_::
chksum	src/headers/tomcrypt_hash.h	/^    unsigned char chksum[16], X[48], buf[16];$/;"	m	struct:md2_state
cipher	src/headers/tomcrypt_cipher.h	/^    int               cipher;$/;"	m	struct:__anon35
cipher	src/headers/tomcrypt_cipher.h	/^   int                 cipher, $/;"	m	struct:__anon30
cipher	src/headers/tomcrypt_cipher.h	/^   int                 cipher, $/;"	m	struct:__anon31
cipher	src/headers/tomcrypt_cipher.h	/^   int                 cipher, $/;"	m	struct:__anon32
cipher	src/headers/tomcrypt_cipher.h	/^   int                 cipher, $/;"	m	struct:__anon33
cipher	src/headers/tomcrypt_cipher.h	/^   int                 cipher, $/;"	m	struct:__anon36
cipher	src/headers/tomcrypt_cipher.h	/^   int                 cipher,$/;"	m	struct:__anon34
cipher	src/headers/tomcrypt_cipher.h	/^   int            cipher;$/;"	m	struct:__anon37
cipher	src/headers/tomcrypt_mac.h	/^             int cipher,$/;"	m	struct:__anon50
cipher	src/headers/tomcrypt_mac.h	/^             int cipher,$/;"	m	struct:__anon51
cipher	src/headers/tomcrypt_mac.h	/^   int                 cipher,       \/* which cipher *\/$/;"	m	struct:__anon49
cipher	src/headers/tomcrypt_mac.h	/^   int               cipher,                  \/* cipher idx *\/$/;"	m	struct:__anon48
cipher	src/headers/tomcrypt_prng.h	/^    int                   cipher, hash;$/;"	m	struct:yarrow_prng
cipher_blocksize	src/hashes/chc/chc.c	/^                      cipher_blocksize;               \/* blocksize of cipher *\/$/;"	v	file:
cipher_data	libtomcrypt/headers/cryptodev_int.h	/^struct cipher_data {$/;"	s
cipher_descriptor	src/misc/crypt/crypt_cipher_descriptor.c	/^struct ltc_cipher_descriptor cipher_descriptor[TAB_SIZE] = {$/;"	v	typeref:struct:ltc_cipher_descriptor
cipher_idx	src/hashes/chc/chc.c	/^static int            cipher_idx=UNDEFED_HASH,        \/* which cipher *\/$/;"	v	file:
cipher_idx	src/headers/tomcrypt_mac.h	/^   int               cipher_idx,              \/* cipher idx *\/$/;"	m	struct:__anon46
cipher_idx	src/headers/tomcrypt_mac.h	/^   int             cipher_idx, $/;"	m	struct:__anon45
cipher_is_valid	src/misc/crypt/crypt_cipher_is_valid.c	/^int cipher_is_valid(int idx)$/;"	f
code	libtomcrypt/pk/asn1/der/ia5/der_length_ia5_string.c	/^   int code, value;$/;"	m	struct:__anon21	file:
code	libtomcrypt/pk/asn1/der/printable_string/der_length_printable_string.c	/^   int code, value;$/;"	m	struct:__anon22	file:
code	libtommath/bn_error.c	/^	int code;$/;"	m	struct:__anon25	file:
code	src/pk/asn1/der/ia5/der_length_ia5_string.c	/^   int code, value;$/;"	m	struct:__anon56	file:
code	src/pk/asn1/der/printable_string/der_length_printable_string.c	/^   int code, value;$/;"	m	struct:__anon57	file:
codes	src/misc/base64/base64_encode.c	/^static const char *codes = $/;"	v	file:
compare	src/headers/tomcrypt_math.h	/^   int (*compare)(void *a, void *b);$/;"	m	struct:__anon52
compare	src/math/gmp_desc.c	/^static int compare(void *a, void *b)$/;"	f	file:
compare	src/math/ltm_desc.c	/^static int compare(void *a, void *b)$/;"	f	file:
compare	src/math/tfm_desc.c	/^static int compare(void *a, void *b)$/;"	f	file:
compare_d	src/headers/tomcrypt_math.h	/^   int (*compare_d)(void *a, unsigned long n);$/;"	m	struct:__anon52
compare_d	src/math/gmp_desc.c	/^static int compare_d(void *a, unsigned long b)$/;"	f	file:
compare_d	src/math/ltm_desc.c	/^static int compare_d(void *a, unsigned long b)$/;"	f	file:
compare_d	src/math/tfm_desc.c	/^static int compare_d(void *a, unsigned long b)$/;"	f	file:
compat_ncr_session_input_data	libtomcrypt/headers/ncr-int.h	/^struct compat_ncr_session_input_data {$/;"	s
compat_ncr_session_output_buffer	libtomcrypt/headers/ncr-int.h	/^struct compat_ncr_session_output_buffer {$/;"	s
cont	src/hashes/whirl/whirltab.c	/^static const ulong64 cont[] = {$/;"	v	file:
cookey	src/ciphers/des.c	/^static void cookey(const ulong32 *raw1, ulong32 *keyout)$/;"	f	file:
copy	src/headers/tomcrypt_math.h	/^   int (*copy)(void *src, void *dst);$/;"	m	struct:__anon52
copy	src/math/gmp_desc.c	/^static int copy(void *a, void *b)$/;"	f	file:
copy	src/math/ltm_desc.c	/^static int copy(void *a, void *b)$/;"	f	file:
copy	src/math/tfm_desc.c	/^static int copy(void *a, void *b)$/;"	f	file:
count_bits	src/headers/tomcrypt_math.h	/^   int (*count_bits)(void * a);$/;"	m	struct:__anon52
count_bits	src/math/gmp_desc.c	/^static int count_bits(void *a)$/;"	f	file:
count_bits	src/math/ltm_desc.c	/^static int count_bits(void *a)$/;"	f	file:
count_bits	src/math/tfm_desc.c	/^static int count_bits(void *a)$/;"	f	file:
count_lsb_bits	src/headers/tomcrypt_math.h	/^   int (*count_lsb_bits)(void *a);$/;"	m	struct:__anon52
count_lsb_bits	src/math/gmp_desc.c	/^static int count_lsb_bits(void *a)$/;"	f	file:
count_lsb_bits	src/math/ltm_desc.c	/^static int count_lsb_bits(void *a)$/;"	f	file:
count_lsb_bits	src/math/tfm_desc.c	/^static int count_lsb_bits(void *a)$/;"	f	file:
crypt_argchk	libtomcrypt/misc/crypt/crypt_argchk.c	/^void crypt_argchk(char *v, char *s, int d)$/;"	f
crypt_argchk	src/misc/crypt/crypt_argchk.c	/^void crypt_argchk(char *v, char *s, int d)$/;"	f
crypt_build_settings	src/misc/crypt/crypt.c	/^const char *crypt_build_settings =$/;"	v
crypt_fsa	src/misc/crypt/crypt_fsa.c	/^int crypt_fsa(void *mp, ...)$/;"	f
ctomac	src/headers/tomcrypt_mac.h	/^   omac_state    headeromac, ctomac;$/;"	m	struct:__anon47
ctr	src/headers/tomcrypt_cipher.h	/^   unsigned char       ctr[MAXBLOCKSIZE], $/;"	m	struct:__anon34
ctr	src/headers/tomcrypt_mac.h	/^   symmetric_CTR ctr;$/;"	m	struct:__anon47
ctr	src/headers/tomcrypt_prng.h	/^    symmetric_CTR         ctr;$/;"	m	struct:yarrow_prng
ctr_decrypt	src/modes/ctr/ctr_decrypt.c	/^int ctr_decrypt(const unsigned char *ct, unsigned char *pt, unsigned long len, symmetric_CTR *ctr)$/;"	f
ctr_done	src/modes/ctr/ctr_done.c	/^int ctr_done(symmetric_CTR *ctr)$/;"	f
ctr_encrypt	src/modes/ctr/ctr_encrypt.c	/^int ctr_encrypt(const unsigned char *pt, unsigned char *ct, unsigned long len, symmetric_CTR *ctr)$/;"	f
ctr_getiv	src/modes/ctr/ctr_getiv.c	/^int ctr_getiv(unsigned char *IV, unsigned long *len, symmetric_CTR *ctr)$/;"	f
ctr_setiv	src/modes/ctr/ctr_setiv.c	/^int ctr_setiv(const unsigned char *IV, unsigned long len, symmetric_CTR *ctr)$/;"	f
ctr_start	src/modes/ctr/ctr_start.c	/^int ctr_start(               int   cipher, $/;"	f
ctr_test	src/modes/ctr/ctr_test.c	/^int ctr_test(void)$/;"	f
ctrlen	src/headers/tomcrypt_cipher.h	/^                       ctrlen;$/;"	m	struct:__anon34
curlen	src/headers/tomcrypt_hash.h	/^    ulong32 curlen, state[10];$/;"	m	struct:rmd320_state
curlen	src/headers/tomcrypt_hash.h	/^    ulong32 curlen, state[4];$/;"	m	struct:rmd128_state
curlen	src/headers/tomcrypt_hash.h	/^    ulong32 curlen, state[5];$/;"	m	struct:rmd160_state
curlen	src/headers/tomcrypt_hash.h	/^    ulong32 curlen, state[8];$/;"	m	struct:rmd256_state
curlen	src/headers/tomcrypt_hash.h	/^    ulong32 curlen;$/;"	m	struct:chc_state
curlen	src/headers/tomcrypt_hash.h	/^    ulong32 curlen;$/;"	m	struct:whirlpool_state
curlen	src/headers/tomcrypt_hash.h	/^    ulong32 state[4], curlen;$/;"	m	struct:md4_state
curlen	src/headers/tomcrypt_hash.h	/^    ulong32 state[4], curlen;$/;"	m	struct:md5_state
curlen	src/headers/tomcrypt_hash.h	/^    ulong32 state[5], curlen;$/;"	m	struct:sha1_state
curlen	src/headers/tomcrypt_hash.h	/^    ulong32 state[8], curlen;$/;"	m	struct:sha256_state
curlen	src/headers/tomcrypt_hash.h	/^    unsigned long curlen;$/;"	m	struct:md2_state
curlen	src/headers/tomcrypt_hash.h	/^    unsigned long curlen;$/;"	m	struct:sha512_state
curlen	src/headers/tomcrypt_hash.h	/^    unsigned long curlen;$/;"	m	struct:tiger_state
cycle	src/prngs/sober128.c	/^static void cycle(ulong32 *R)$/;"	f	file:
d	libtomcrypt/headers/tomcrypt_pk.h	/^	mp_int d;$/;"	m	struct:Rsa_key
d	src/headers/tomcrypt_pk.h	/^    void *d; $/;"	m	struct:KAT_key
d	src/headers/tomcrypt_pk.h	/^    void *d; $/;"	m	struct:Rsa_key
dK	src/headers/tomcrypt_cipher.h	/^    ulong32 K[32], dK[32];$/;"	m	struct:kseed_key
dK	src/headers/tomcrypt_cipher.h	/^    ulong32 K[4], dK[4];$/;"	m	struct:noekeon_key
dK	src/headers/tomcrypt_cipher.h	/^   ulong32 eK[60], dK[60];$/;"	m	struct:rijndael_key
dP	libtomcrypt/headers/tomcrypt_pk.h	/^	mp_int dP;$/;"	m	struct:Rsa_key
dP	src/headers/tomcrypt_pk.h	/^    void *dP; $/;"	m	struct:KAT_key
dP	src/headers/tomcrypt_pk.h	/^    void *dP; $/;"	m	struct:Rsa_key
dQ	libtomcrypt/headers/tomcrypt_pk.h	/^	mp_int dQ;$/;"	m	struct:Rsa_key
dQ	src/headers/tomcrypt_pk.h	/^    void *dQ;$/;"	m	struct:KAT_key
dQ	src/headers/tomcrypt_pk.h	/^    void *dQ;$/;"	m	struct:Rsa_key
data	include/ok_type.h	/^    struct ok_qset *data;$/;"	m	struct:ok_dev	typeref:struct:ok_dev::ok_qset
data	include/ok_type.h	/^    void **data;$/;"	m	struct:ok_qset
data	libtomcrypt/headers/ncr-int.h	/^			uint8_t data[NCR_CIPHER_MAX_KEY_LEN];$/;"	m	struct:key_item_st::__anon17::__anon18
data	libtomcrypt/headers/ncr-int.h	/^	compat_uptr_t data;$/;"	m	struct:compat_ncr_session_input_data
data	libtomcrypt/headers/ncr.h	/^	const void __user *data;$/;"	m	struct:ncr_key_import
data	libtomcrypt/headers/ncr.h	/^	const void __user *data;$/;"	m	struct:ncr_key_storage_unwrap
data	libtomcrypt/headers/ncr.h	/^	const void __user *data;$/;"	m	struct:ncr_key_unwrap
data	libtomcrypt/headers/ncr.h	/^	const void __user *data;$/;"	m	struct:ncr_session_input_data
data	libtomcrypt/headers/tomcrypt_pk.h	/^	void *data;$/;"	m	struct:ltc_asn1_list_
data	src/headers/tomcrypt_cipher.h	/^   void   *data;$/;"	m	union:Symmetric_key
data	src/headers/tomcrypt_hash.h	/^    void *data;$/;"	m	union:Hash_state
data	src/headers/tomcrypt_pk.h	/^   void         *data;$/;"	m	struct:ltc_asn1_list_
data_size	libtomcrypt/headers/ncr-int.h	/^	compat_size_t data_size;$/;"	m	struct:compat_ncr_session_input_data
data_size	libtomcrypt/headers/ncr.h	/^	__kernel_size_t data_size;$/;"	m	struct:ncr_session_input_data
data_size	libtomcrypt/headers/ncr.h	/^	__u32 data_size;$/;"	m	struct:ncr_key_import
data_size	libtomcrypt/headers/ncr.h	/^	__u32 data_size;$/;"	m	struct:ncr_key_storage_unwrap
data_size	libtomcrypt/headers/ncr.h	/^	__u32 data_size;$/;"	m	struct:ncr_key_unwrap
decrypt	src/ciphers/multi2.c	/^static void decrypt(ulong32 *p, int N, ulong32 *uk)$/;"	f	file:
default_rounds	src/headers/tomcrypt_cipher.h	/^        default_rounds;$/;"	m	struct:ltc_cipher_descriptor
deinit	src/headers/tomcrypt_math.h	/^   void (*deinit)(void *a);$/;"	m	struct:__anon52
deinit	src/math/gmp_desc.c	/^static void deinit(void *a)$/;"	f	file:
deinit	src/math/ltm_desc.c	/^static void deinit(void *a)$/;"	f	file:
deinit	src/math/tfm_desc.c	/^static void deinit(void *a)$/;"	f	file:
der_decode_bit_string	libtomcrypt/pk/asn1/der/bit/der_decode_bit_string.c	/^int der_decode_bit_string(const unsigned char *in,  unsigned long inlen,$/;"	f
der_decode_bit_string	src/pk/asn1/der/bit/der_decode_bit_string.c	/^int der_decode_bit_string(const unsigned char *in,  unsigned long inlen,$/;"	f
der_decode_boolean	libtomcrypt/pk/asn1/der/boolean/der_decode_boolean.c	/^int der_decode_boolean(const unsigned char *in, unsigned long inlen,$/;"	f
der_decode_boolean	src/pk/asn1/der/boolean/der_decode_boolean.c	/^int der_decode_boolean(const unsigned char *in, unsigned long inlen,$/;"	f
der_decode_choice	libtomcrypt/pk/asn1/der/choice/der_decode_choice.c	/^int der_decode_choice(const unsigned char *in,   unsigned long *inlen,$/;"	f
der_decode_choice	src/pk/asn1/der/choice/der_decode_choice.c	/^int der_decode_choice(const unsigned char *in,   unsigned long *inlen,$/;"	f
der_decode_ia5_string	libtomcrypt/pk/asn1/der/ia5/der_decode_ia5_string.c	/^int der_decode_ia5_string(const unsigned char *in, unsigned long inlen,$/;"	f
der_decode_ia5_string	src/pk/asn1/der/ia5/der_decode_ia5_string.c	/^int der_decode_ia5_string(const unsigned char *in, unsigned long inlen,$/;"	f
der_decode_integer	libtomcrypt/pk/asn1/der/integer/der_decode_integer.c	/^int der_decode_integer(const unsigned char *in, unsigned long inlen, mp_int_t num)$/;"	f
der_decode_integer	src/pk/asn1/der/integer/der_decode_integer.c	/^int der_decode_integer(const unsigned char *in, unsigned long inlen, void *num)$/;"	f
der_decode_object_identifier	libtomcrypt/pk/asn1/der/object_identifier/der_decode_object_identifier.c	/^int der_decode_object_identifier(const unsigned char *in,    unsigned long  inlen,$/;"	f
der_decode_object_identifier	src/pk/asn1/der/object_identifier/der_decode_object_identifier.c	/^int der_decode_object_identifier(const unsigned char *in,    unsigned long  inlen,$/;"	f
der_decode_octet_string	libtomcrypt/pk/asn1/der/octet/der_decode_octet_string.c	/^int der_decode_octet_string(const unsigned char *in, unsigned long inlen,$/;"	f
der_decode_octet_string	src/pk/asn1/der/octet/der_decode_octet_string.c	/^int der_decode_octet_string(const unsigned char *in, unsigned long inlen,$/;"	f
der_decode_printable_string	libtomcrypt/pk/asn1/der/printable_string/der_decode_printable_string.c	/^int der_decode_printable_string(const unsigned char *in, unsigned long inlen,$/;"	f
der_decode_printable_string	src/pk/asn1/der/printable_string/der_decode_printable_string.c	/^int der_decode_printable_string(const unsigned char *in, unsigned long inlen,$/;"	f
der_decode_sequence	libtomcrypt/headers/tomcrypt_pk.h	233;"	d
der_decode_sequence	src/headers/tomcrypt_pk.h	425;"	d
der_decode_sequence_ex	libtomcrypt/pk/asn1/der/sequence/der_decode_sequence_ex.c	/^int der_decode_sequence_ex(const unsigned char *in, unsigned long  inlen,$/;"	f
der_decode_sequence_ex	src/pk/asn1/der/sequence/der_decode_sequence_ex.c	/^int der_decode_sequence_ex(const unsigned char *in, unsigned long  inlen,$/;"	f
der_decode_sequence_flexi	libtomcrypt/pk/asn1/der/sequence/der_decode_sequence_flexi.c	/^int der_decode_sequence_flexi(const unsigned char *in, unsigned long *inlen, ltc_asn1_list **out)$/;"	f
der_decode_sequence_flexi	src/pk/asn1/der/sequence/der_decode_sequence_flexi.c	/^int der_decode_sequence_flexi(const unsigned char *in, unsigned long *inlen, ltc_asn1_list **out)$/;"	f
der_decode_sequence_multi	libtomcrypt/pk/asn1/der/sequence/der_decode_sequence_multi.c	/^int der_decode_sequence_multi(const unsigned char *in, unsigned long inlen, ...)$/;"	f
der_decode_sequence_multi	src/pk/asn1/der/sequence/der_decode_sequence_multi.c	/^int der_decode_sequence_multi(const unsigned char *in, unsigned long inlen, ...)$/;"	f
der_decode_set	libtomcrypt/headers/tomcrypt_pk.h	256;"	d
der_decode_set	src/headers/tomcrypt_pk.h	431;"	d
der_decode_short_integer	libtomcrypt/pk/asn1/der/short_integer/der_decode_short_integer.c	/^int der_decode_short_integer(const unsigned char *in, unsigned long inlen, unsigned long *num)$/;"	f
der_decode_short_integer	src/pk/asn1/der/short_integer/der_decode_short_integer.c	/^int der_decode_short_integer(const unsigned char *in, unsigned long inlen, unsigned long *num)$/;"	f
der_decode_subject_public_key_info	libtomcrypt/pk/asn1/der/x509/der_decode_subject_public_key_info.c	/^int der_decode_subject_public_key_info(const unsigned char *in, unsigned long inlen,$/;"	f
der_decode_utctime	libtomcrypt/pk/asn1/der/utctime/der_decode_utctime.c	/^int der_decode_utctime(const unsigned char *in, unsigned long *inlen,$/;"	f
der_decode_utctime	src/pk/asn1/der/utctime/der_decode_utctime.c	/^int der_decode_utctime(const unsigned char *in, unsigned long *inlen,$/;"	f
der_decode_utf8_string	libtomcrypt/pk/asn1/der/utf8/der_decode_utf8_string.c	/^int der_decode_utf8_string(const unsigned char *in,  unsigned long inlen,$/;"	f
der_decode_utf8_string	src/pk/asn1/der/utf8/der_decode_utf8_string.c	/^int der_decode_utf8_string(const unsigned char *in,  unsigned long inlen,$/;"	f
der_encode_bit_string	libtomcrypt/pk/asn1/der/bit/der_encode_bit_string.c	/^int der_encode_bit_string(const unsigned char *in, unsigned long inlen,$/;"	f
der_encode_bit_string	src/pk/asn1/der/bit/der_encode_bit_string.c	/^int der_encode_bit_string(const unsigned char *in, unsigned long inlen,$/;"	f
der_encode_boolean	libtomcrypt/pk/asn1/der/boolean/der_encode_boolean.c	/^int der_encode_boolean(int in, $/;"	f
der_encode_boolean	src/pk/asn1/der/boolean/der_encode_boolean.c	/^int der_encode_boolean(int in, $/;"	f
der_encode_ia5_string	libtomcrypt/pk/asn1/der/ia5/der_encode_ia5_string.c	/^int der_encode_ia5_string(const unsigned char *in, unsigned long inlen,$/;"	f
der_encode_ia5_string	src/pk/asn1/der/ia5/der_encode_ia5_string.c	/^int der_encode_ia5_string(const unsigned char *in, unsigned long inlen,$/;"	f
der_encode_integer	libtomcrypt/pk/asn1/der/integer/der_encode_integer.c	/^int der_encode_integer(mp_int_t num, unsigned char *out, unsigned long *outlen)$/;"	f
der_encode_integer	src/pk/asn1/der/integer/der_encode_integer.c	/^int der_encode_integer(void *num, unsigned char *out, unsigned long *outlen)$/;"	f
der_encode_object_identifier	libtomcrypt/pk/asn1/der/object_identifier/der_encode_object_identifier.c	/^int der_encode_object_identifier(unsigned long *words, unsigned long  nwords,$/;"	f
der_encode_object_identifier	src/pk/asn1/der/object_identifier/der_encode_object_identifier.c	/^int der_encode_object_identifier(unsigned long *words, unsigned long  nwords,$/;"	f
der_encode_octet_string	libtomcrypt/pk/asn1/der/octet/der_encode_octet_string.c	/^int der_encode_octet_string(const unsigned char *in, unsigned long inlen,$/;"	f
der_encode_octet_string	src/pk/asn1/der/octet/der_encode_octet_string.c	/^int der_encode_octet_string(const unsigned char *in, unsigned long inlen,$/;"	f
der_encode_printable_string	libtomcrypt/pk/asn1/der/printable_string/der_encode_printable_string.c	/^int der_encode_printable_string(const unsigned char *in, unsigned long inlen,$/;"	f
der_encode_printable_string	src/pk/asn1/der/printable_string/der_encode_printable_string.c	/^int der_encode_printable_string(const unsigned char *in, unsigned long inlen,$/;"	f
der_encode_sequence	libtomcrypt/headers/tomcrypt_pk.h	227;"	d
der_encode_sequence	src/headers/tomcrypt_pk.h	420;"	d
der_encode_sequence_ex	libtomcrypt/pk/asn1/der/sequence/der_encode_sequence_ex.c	/^int der_encode_sequence_ex(ltc_asn1_list *list, unsigned long inlen,$/;"	f
der_encode_sequence_ex	src/pk/asn1/der/sequence/der_encode_sequence_ex.c	/^int der_encode_sequence_ex(ltc_asn1_list *list, unsigned long inlen,$/;"	f
der_encode_sequence_multi	libtomcrypt/pk/asn1/der/sequence/der_encode_sequence_multi.c	/^int der_encode_sequence_multi(unsigned char *out, unsigned long *outlen, ...)$/;"	f
der_encode_sequence_multi	src/pk/asn1/der/sequence/der_encode_sequence_multi.c	/^int der_encode_sequence_multi(unsigned char *out, unsigned long *outlen, ...)$/;"	f
der_encode_set	libtomcrypt/pk/asn1/der/set/der_encode_set.c	/^int der_encode_set(ltc_asn1_list *list, unsigned long inlen,$/;"	f
der_encode_set	src/pk/asn1/der/set/der_encode_set.c	/^int der_encode_set(ltc_asn1_list *list, unsigned long inlen,$/;"	f
der_encode_setof	libtomcrypt/pk/asn1/der/set/der_encode_setof.c	/^int der_encode_setof(ltc_asn1_list *list, unsigned long inlen,$/;"	f
der_encode_setof	src/pk/asn1/der/set/der_encode_setof.c	/^int der_encode_setof(ltc_asn1_list *list, unsigned long inlen,$/;"	f
der_encode_short_integer	libtomcrypt/pk/asn1/der/short_integer/der_encode_short_integer.c	/^int der_encode_short_integer(unsigned long num, unsigned char *out, unsigned long *outlen)$/;"	f
der_encode_short_integer	src/pk/asn1/der/short_integer/der_encode_short_integer.c	/^int der_encode_short_integer(unsigned long num, unsigned char *out, unsigned long *outlen)$/;"	f
der_encode_subject_public_key_info	libtomcrypt/pk/asn1/der/x509/der_encode_subject_public_key_info.c	/^int der_encode_subject_public_key_info(unsigned char *out, unsigned long *outlen, $/;"	f
der_encode_utctime	libtomcrypt/pk/asn1/der/utctime/der_encode_utctime.c	/^int der_encode_utctime(ltc_utctime *utctime, $/;"	f
der_encode_utctime	src/pk/asn1/der/utctime/der_encode_utctime.c	/^int der_encode_utctime(ltc_utctime *utctime, $/;"	f
der_encode_utf8_string	libtomcrypt/pk/asn1/der/utf8/der_encode_utf8_string.c	/^int der_encode_utf8_string(const wchar_t *in,  unsigned long inlen,$/;"	f
der_encode_utf8_string	src/pk/asn1/der/utf8/der_encode_utf8_string.c	/^int der_encode_utf8_string(const wchar_t *in,  unsigned long inlen,$/;"	f
der_ia5_char_encode	libtomcrypt/pk/asn1/der/ia5/der_length_ia5_string.c	/^int der_ia5_char_encode(int c)$/;"	f
der_ia5_char_encode	src/pk/asn1/der/ia5/der_length_ia5_string.c	/^int der_ia5_char_encode(int c)$/;"	f
der_ia5_value_decode	libtomcrypt/pk/asn1/der/ia5/der_length_ia5_string.c	/^int der_ia5_value_decode(int v)$/;"	f
der_ia5_value_decode	src/pk/asn1/der/ia5/der_length_ia5_string.c	/^int der_ia5_value_decode(int v)$/;"	f
der_length_bit_string	libtomcrypt/pk/asn1/der/bit/der_length_bit_string.c	/^int der_length_bit_string(unsigned long nbits, unsigned long *outlen)$/;"	f
der_length_bit_string	src/pk/asn1/der/bit/der_length_bit_string.c	/^int der_length_bit_string(unsigned long nbits, unsigned long *outlen)$/;"	f
der_length_boolean	libtomcrypt/pk/asn1/der/boolean/der_length_boolean.c	/^int der_length_boolean(unsigned long *outlen)$/;"	f
der_length_boolean	src/pk/asn1/der/boolean/der_length_boolean.c	/^int der_length_boolean(unsigned long *outlen)$/;"	f
der_length_ia5_string	libtomcrypt/pk/asn1/der/ia5/der_length_ia5_string.c	/^int der_length_ia5_string(const unsigned char *octets, unsigned long noctets, unsigned long *outlen)$/;"	f
der_length_ia5_string	src/pk/asn1/der/ia5/der_length_ia5_string.c	/^int der_length_ia5_string(const unsigned char *octets, unsigned long noctets, unsigned long *outlen)$/;"	f
der_length_integer	libtomcrypt/pk/asn1/der/integer/der_length_integer.c	/^int der_length_integer(mp_int_t num, unsigned long *outlen)$/;"	f
der_length_integer	src/pk/asn1/der/integer/der_length_integer.c	/^int der_length_integer(void *num, unsigned long *outlen)$/;"	f
der_length_object_identifier	libtomcrypt/pk/asn1/der/object_identifier/der_length_object_identifier.c	/^int der_length_object_identifier(unsigned long *words, unsigned long nwords, unsigned long *outlen)$/;"	f
der_length_object_identifier	src/pk/asn1/der/object_identifier/der_length_object_identifier.c	/^int der_length_object_identifier(unsigned long *words, unsigned long nwords, unsigned long *outlen)$/;"	f
der_length_octet_string	libtomcrypt/pk/asn1/der/octet/der_length_octet_string.c	/^int der_length_octet_string(unsigned long noctets, unsigned long *outlen)$/;"	f
der_length_octet_string	src/pk/asn1/der/octet/der_length_octet_string.c	/^int der_length_octet_string(unsigned long noctets, unsigned long *outlen)$/;"	f
der_length_printable_string	libtomcrypt/pk/asn1/der/printable_string/der_length_printable_string.c	/^int der_length_printable_string(const unsigned char *octets, unsigned long noctets, unsigned long *outlen)$/;"	f
der_length_printable_string	src/pk/asn1/der/printable_string/der_length_printable_string.c	/^int der_length_printable_string(const unsigned char *octets, unsigned long noctets, unsigned long *outlen)$/;"	f
der_length_sequence	libtomcrypt/pk/asn1/der/sequence/der_length_sequence.c	/^int der_length_sequence(ltc_asn1_list *list, unsigned long inlen,$/;"	f
der_length_sequence	src/pk/asn1/der/sequence/der_length_sequence.c	/^int der_length_sequence(ltc_asn1_list *list, unsigned long inlen,$/;"	f
der_length_set	libtomcrypt/headers/tomcrypt_pk.h	257;"	d
der_length_set	src/headers/tomcrypt_pk.h	432;"	d
der_length_short_integer	libtomcrypt/pk/asn1/der/short_integer/der_length_short_integer.c	/^int der_length_short_integer(unsigned long num, unsigned long *outlen)$/;"	f
der_length_short_integer	src/pk/asn1/der/short_integer/der_length_short_integer.c	/^int der_length_short_integer(unsigned long num, unsigned long *outlen)$/;"	f
der_length_utctime	libtomcrypt/pk/asn1/der/utctime/der_length_utctime.c	/^int der_length_utctime(ltc_utctime *utctime, unsigned long *outlen)$/;"	f
der_length_utctime	src/pk/asn1/der/utctime/der_length_utctime.c	/^int der_length_utctime(ltc_utctime *utctime, unsigned long *outlen)$/;"	f
der_length_utf8_string	libtomcrypt/pk/asn1/der/utf8/der_length_utf8_string.c	/^int der_length_utf8_string(const wchar_t *in, unsigned long noctets, unsigned long *outlen)$/;"	f
der_length_utf8_string	src/pk/asn1/der/utf8/der_length_utf8_string.c	/^int der_length_utf8_string(const wchar_t *in, unsigned long noctets, unsigned long *outlen)$/;"	f
der_object_identifier_bits	libtomcrypt/pk/asn1/der/object_identifier/der_length_object_identifier.c	/^unsigned long der_object_identifier_bits(unsigned long x)$/;"	f
der_object_identifier_bits	src/pk/asn1/der/object_identifier/der_length_object_identifier.c	/^unsigned long der_object_identifier_bits(unsigned long x)$/;"	f
der_printable_char_encode	libtomcrypt/pk/asn1/der/printable_string/der_length_printable_string.c	/^int der_printable_char_encode(int c)$/;"	f
der_printable_char_encode	src/pk/asn1/der/printable_string/der_length_printable_string.c	/^int der_printable_char_encode(int c)$/;"	f
der_printable_value_decode	libtomcrypt/pk/asn1/der/printable_string/der_length_printable_string.c	/^int der_printable_value_decode(int v)$/;"	f
der_printable_value_decode	src/pk/asn1/der/printable_string/der_length_printable_string.c	/^int der_printable_value_decode(int v)$/;"	f
der_sequence_free	libtomcrypt/pk/asn1/der/sequence/der_sequence_free.c	/^void der_sequence_free(ltc_asn1_list *in)$/;"	f
der_sequence_free	src/pk/asn1/der/sequence/der_sequence_free.c	/^void der_sequence_free(ltc_asn1_list *in)$/;"	f
der_utf8_charsize	libtomcrypt/pk/asn1/der/utf8/der_length_utf8_string.c	/^unsigned long der_utf8_charsize(const wchar_t c)$/;"	f
der_utf8_charsize	src/pk/asn1/der/utf8/der_length_utf8_string.c	/^unsigned long der_utf8_charsize(const wchar_t c)$/;"	f
des	src/headers/tomcrypt_cipher.h	/^   struct des_key des;$/;"	m	union:Symmetric_key	typeref:struct:Symmetric_key::des_key
des3	src/headers/tomcrypt_cipher.h	/^   struct des3_key des3;$/;"	m	union:Symmetric_key	typeref:struct:Symmetric_key::des3_key
des3_desc	src/ciphers/des.c	/^const struct ltc_cipher_descriptor des3_desc =$/;"	v	typeref:struct:ltc_cipher_descriptor
des3_done	src/ciphers/des.c	/^void des3_done(symmetric_key *skey)$/;"	f
des3_ecb_decrypt	src/ciphers/des.c	/^int des3_ecb_decrypt(const unsigned char *ct, unsigned char *pt, symmetric_key *skey)$/;"	f
des3_ecb_encrypt	src/ciphers/des.c	/^int des3_ecb_encrypt(const unsigned char *pt, unsigned char *ct, symmetric_key *skey)$/;"	f
des3_key	src/headers/tomcrypt_cipher.h	/^struct des3_key {$/;"	s
des3_keysize	src/ciphers/des.c	/^int des3_keysize(int *keysize)$/;"	f
des3_setup	src/ciphers/des.c	/^int des3_setup(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey)$/;"	f
des3_test	src/ciphers/des.c	/^int des3_test(void)$/;"	f
des_desc	src/ciphers/des.c	/^const struct ltc_cipher_descriptor des_desc =$/;"	v	typeref:struct:ltc_cipher_descriptor
des_done	src/ciphers/des.c	/^void des_done(symmetric_key *skey)$/;"	f
des_ecb_decrypt	src/ciphers/des.c	/^int des_ecb_decrypt(const unsigned char *ct, unsigned char *pt, symmetric_key *skey)$/;"	f
des_ecb_encrypt	src/ciphers/des.c	/^int des_ecb_encrypt(const unsigned char *pt, unsigned char *ct, symmetric_key *skey)$/;"	f
des_fp	src/ciphers/des.c	/^static const ulong64 des_fp[8][256] = {$/;"	v	file:
des_ip	src/ciphers/des.c	/^static const ulong64 des_ip[8][256] = {$/;"	v	file:
des_key	src/headers/tomcrypt_cipher.h	/^struct des_key {$/;"	s
des_keysize	src/ciphers/des.c	/^int des_keysize(int *keysize)$/;"	f
des_setup	src/ciphers/des.c	/^int des_setup(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey)$/;"	f
des_test	src/ciphers/des.c	/^int des_test(void)$/;"	f
desc	libtomcrypt/headers/ncr-int.h	/^	ncr_key_t desc;$/;"	m	struct:key_item_st
desfunc	src/ciphers/des.c	/^static void desfunc(ulong32 *block, const ulong32 *keys)$/;"	f	file:
deskey	src/ciphers/des.c	/^static void deskey(const unsigned char *key, short edf, ulong32 *keyout)$/;"	f	file:
dest_key	libtomcrypt/headers/ncr.h	/^	ncr_key_t dest_key;$/;"	m	struct:ncr_key_unwrap
dev_name	ok_main.c	/^static char dev_name[] = "ok_crypto";$/;"	v	file:
devno	ok_main.c	/^static dev_t devno;$/;"	v	file:
dh	libtomcrypt/headers/ncr-int.h	/^			dh_key dh;$/;"	m	union:key_item_st::__anon17::__anon19
dh_key	libtomcrypt/headers/ncr-dh.h	/^} dh_key;$/;"	t	typeref:struct:__anon1
digest_size	libtomcrypt/headers/ncr-int.h	/^	int digest_size;$/;"	m	struct:algo_properties_st
digestsize	libtomcrypt/headers/cryptodev_int.h	/^	int digestsize;$/;"	m	struct:hash_data
div_2	src/headers/tomcrypt_math.h	/^   int (*div_2)(void *a, void *b);$/;"	m	struct:__anon52
div_2	src/math/gmp_desc.c	/^static int div_2(void *a, void *b)$/;"	f	file:
div_2	src/math/ltm_desc.c	/^static int div_2(void *a, void *b)$/;"	f	file:
div_2	src/math/tfm_desc.c	/^static int div_2(void *a, void *b)$/;"	f	file:
divide	src/math/gmp_desc.c	/^static int divide(void *a, void *b, void *c, void *d)$/;"	f	file:
divide	src/math/ltm_desc.c	/^static int divide(void *a, void *b, void *c, void *d)$/;"	f	file:
divide	src/math/tfm_desc.c	/^static int divide(void *a, void *b, void *c, void *d)$/;"	f	file:
dk	src/headers/tomcrypt_cipher.h	/^    ulong32 ek[32], dk[32];$/;"	m	struct:des_key
dk	src/headers/tomcrypt_cipher.h	/^    ulong32 ek[3][32], dk[3][32];$/;"	m	struct:des3_key
done	libtomcrypt/headers/tomcrypt_prng.h	/^	int (*done) (prng_state * prng);$/;"	m	struct:ltc_prng_descriptor
done	src/headers/tomcrypt_cipher.h	/^   void (*done)(symmetric_key *skey);      $/;"	m	struct:ltc_cipher_descriptor
done	src/headers/tomcrypt_hash.h	/^    int (*done)(hash_state *hash, unsigned char *out);$/;"	m	struct:ltc_hash_descriptor
done	src/headers/tomcrypt_prng.h	/^    int (*done)(prng_state *prng);$/;"	m	struct:ltc_prng_descriptor
dp	libtommath/tommath.h	/^	mp_digit *dp;$/;"	m	struct:__anon23
dp	src/headers/tomcrypt_pk.h	/^	const ltc_ecc_set_type *dp;$/;"	m	struct:__anon41
dprintk	libtomcrypt/headers/cryptodev_int.h	17;"	d
dsa	libtomcrypt/headers/ncr-int.h	/^			dsa_key dsa;$/;"	m	union:key_item_st::__anon17::__anon19
dsa_decrypt_key	src/pk/dsa/dsa_decrypt_key.c	/^int dsa_decrypt_key(const unsigned char *in,  unsigned long  inlen,$/;"	f
dsa_encrypt_key	src/pk/dsa/dsa_encrypt_key.c	/^int dsa_encrypt_key(const unsigned char *in,   unsigned long inlen,$/;"	f
dsa_export	libtomcrypt/pk/dsa/dsa_export.c	/^int dsa_export(unsigned char *out, unsigned long *outlen, int type,$/;"	f
dsa_export	src/pk/dsa/dsa_export.c	/^int dsa_export(unsigned char *out, unsigned long *outlen, int type, dsa_key *key)$/;"	f
dsa_free	libtomcrypt/pk/dsa/dsa_free.c	/^void dsa_free(dsa_key * key)$/;"	f
dsa_free	src/pk/dsa/dsa_free.c	/^void dsa_free(dsa_key *key)$/;"	f
dsa_import	libtomcrypt/pk/dsa/dsa_import.c	/^int dsa_import(const unsigned char *in, unsigned long inlen, dsa_key * key)$/;"	f
dsa_import	src/pk/dsa/dsa_import.c	/^int dsa_import(const unsigned char *in, unsigned long inlen, dsa_key *key)$/;"	f
dsa_key	libtomcrypt/headers/tomcrypt_pk.h	/^} dsa_key;$/;"	t	typeref:struct:__anon13
dsa_key	src/headers/tomcrypt_pk.h	/^} dsa_key;$/;"	t	typeref:struct:__anon42
dsa_make_key	libtomcrypt/pk/dsa/dsa_make_key.c	/^int dsa_make_key(int group_size, int modulus_size, dsa_key * key)$/;"	f
dsa_make_key	src/pk/dsa/dsa_make_key.c	/^int dsa_make_key(prng_state *prng, int wprng, int group_size, int modulus_size, dsa_key *key)$/;"	f
dsa_shared_secret	src/pk/dsa/dsa_shared_secret.c	/^int dsa_shared_secret(void          *private_key, void *base,$/;"	f
dsa_sign_hash	libtomcrypt/pk/dsa/dsa_sign_hash.c	/^int dsa_sign_hash(const unsigned char *in, unsigned long inlen,$/;"	f
dsa_sign_hash	src/pk/dsa/dsa_sign_hash.c	/^int dsa_sign_hash(const unsigned char *in,  unsigned long inlen,$/;"	f
dsa_sign_hash_raw	libtomcrypt/pk/dsa/dsa_sign_hash.c	/^int dsa_sign_hash_raw(const unsigned char *in, unsigned long inlen,$/;"	f
dsa_sign_hash_raw	src/pk/dsa/dsa_sign_hash.c	/^int dsa_sign_hash_raw(const unsigned char *in,  unsigned long inlen,$/;"	f
dsa_verify_hash	libtomcrypt/pk/dsa/dsa_verify_hash.c	/^int dsa_verify_hash(const unsigned char *sig, unsigned long siglen,$/;"	f
dsa_verify_hash	src/pk/dsa/dsa_verify_hash.c	/^int dsa_verify_hash(const unsigned char *sig, unsigned long siglen,$/;"	f
dsa_verify_hash_raw	libtomcrypt/pk/dsa/dsa_verify_hash.c	/^int dsa_verify_hash_raw(mp_int_t r, mp_int_t s,$/;"	f
dsa_verify_hash_raw	src/pk/dsa/dsa_verify_hash.c	/^int dsa_verify_hash_raw(         void   *r,          void   *s,$/;"	f
dsa_verify_key	libtomcrypt/pk/dsa/dsa_verify_key.c	/^int dsa_verify_key(dsa_key * key, int *stat)$/;"	f
dsa_verify_key	src/pk/dsa/dsa_verify_key.c	/^int dsa_verify_key(dsa_key *key, int *stat)$/;"	f
dummy	libtomcrypt/headers/tomcrypt_prng.h	/^	char dummy[1];$/;"	m	union:Prng_state
dummy	src/headers/tomcrypt_hash.h	/^    char dummy[1];$/;"	m	union:Hash_state
dummy	src/headers/tomcrypt_prng.h	/^    char dummy[1];$/;"	m	union:Prng_state
e	libtomcrypt/headers/tomcrypt_pk.h	/^	mp_int e;$/;"	m	struct:Rsa_key
e	src/headers/tomcrypt_pk.h	/^    void *e; $/;"	m	struct:Rsa_key
eK	src/headers/tomcrypt_cipher.h	/^   ulong32 eK[60], dK[60];$/;"	m	struct:rijndael_key
eax_addheader	src/encauth/eax/eax_addheader.c	/^int eax_addheader(eax_state *eax, const unsigned char *header, $/;"	f
eax_decrypt	src/encauth/eax/eax_decrypt.c	/^int eax_decrypt(eax_state *eax, const unsigned char *ct, unsigned char *pt, $/;"	f
eax_decrypt_verify_memory	src/encauth/eax/eax_decrypt_verify_memory.c	/^int eax_decrypt_verify_memory(int cipher,$/;"	f
eax_done	src/encauth/eax/eax_done.c	/^int eax_done(eax_state *eax, unsigned char *tag, unsigned long *taglen)$/;"	f
eax_encrypt	src/encauth/eax/eax_encrypt.c	/^int eax_encrypt(eax_state *eax, const unsigned char *pt, unsigned char *ct, $/;"	f
eax_encrypt_authenticate_memory	src/encauth/eax/eax_encrypt_authenticate_memory.c	/^int eax_encrypt_authenticate_memory(int cipher,$/;"	f
eax_init	src/encauth/eax/eax_init.c	/^int eax_init(eax_state *eax, int cipher, $/;"	f
eax_state	src/headers/tomcrypt_mac.h	/^} eax_state;$/;"	t	typeref:struct:__anon47
eax_test	src/encauth/eax/eax_test.c	/^int eax_test(void)$/;"	f
ecb_decrypt	src/headers/tomcrypt_cipher.h	/^   int (*ecb_decrypt)(const unsigned char *ct, unsigned char *pt, symmetric_key *skey);$/;"	m	struct:ltc_cipher_descriptor
ecb_decrypt	src/modes/ecb/ecb_decrypt.c	/^int ecb_decrypt(const unsigned char *ct, unsigned char *pt, unsigned long len, symmetric_ECB *ecb)$/;"	f
ecb_done	src/modes/ecb/ecb_done.c	/^int ecb_done(symmetric_ECB *ecb)$/;"	f
ecb_encrypt	src/headers/tomcrypt_cipher.h	/^   int (*ecb_encrypt)(const unsigned char *pt, unsigned char *ct, symmetric_key *skey);$/;"	m	struct:ltc_cipher_descriptor
ecb_encrypt	src/modes/ecb/ecb_encrypt.c	/^int ecb_encrypt(const unsigned char *pt, unsigned char *ct, unsigned long len, symmetric_ECB *ecb)$/;"	f
ecb_start	src/modes/ecb/ecb_start.c	/^int ecb_start(int cipher, const unsigned char *key, int keylen, int num_rounds, symmetric_ECB *ecb)$/;"	f
ecc_ansi_x963_export	src/pk/ecc/ecc_ansi_x963_export.c	/^int ecc_ansi_x963_export(ecc_key *key, unsigned char *out, unsigned long *outlen)$/;"	f
ecc_ansi_x963_import	src/pk/ecc/ecc_ansi_x963_import.c	/^int ecc_ansi_x963_import(const unsigned char *in, unsigned long inlen, ecc_key *key)$/;"	f
ecc_ansi_x963_import_ex	src/pk/ecc/ecc_ansi_x963_import.c	/^int ecc_ansi_x963_import_ex(const unsigned char *in, unsigned long inlen, ecc_key *key, ltc_ecc_set_type *dp)$/;"	f
ecc_decrypt_key	src/pk/ecc/ecc_decrypt_key.c	/^int ecc_decrypt_key(const unsigned char *in,  unsigned long  inlen,$/;"	f
ecc_encrypt_key	src/pk/ecc/ecc_encrypt_key.c	/^int ecc_encrypt_key(const unsigned char *in,   unsigned long inlen,$/;"	f
ecc_export	src/pk/ecc/ecc_export.c	/^int ecc_export(unsigned char *out, unsigned long *outlen, int type, ecc_key *key)$/;"	f
ecc_free	src/pk/ecc/ecc_free.c	/^void ecc_free(ecc_key *key)$/;"	f
ecc_get_size	src/pk/ecc/ecc_get_size.c	/^int ecc_get_size(ecc_key *key)$/;"	f
ecc_import	src/pk/ecc/ecc_import.c	/^int ecc_import(const unsigned char *in, unsigned long inlen, ecc_key *key)$/;"	f
ecc_import_ex	src/pk/ecc/ecc_import.c	/^int ecc_import_ex(const unsigned char *in, unsigned long inlen, ecc_key *key, const ltc_ecc_set_type *dp)$/;"	f
ecc_key	src/headers/tomcrypt_pk.h	/^} ecc_key;$/;"	t	typeref:struct:__anon41
ecc_make_key	src/pk/ecc/ecc_make_key.c	/^int ecc_make_key(prng_state *prng, int wprng, int keysize, ecc_key *key)$/;"	f
ecc_make_key_ex	src/pk/ecc/ecc_make_key.c	/^int ecc_make_key_ex(prng_state *prng, int wprng, ecc_key *key, const ltc_ecc_set_type *dp)$/;"	f
ecc_map	src/headers/tomcrypt_math.h	/^   int (*ecc_map)(ecc_point *P, void *modulus, void *mp);$/;"	m	struct:__anon52
ecc_mul2add	src/headers/tomcrypt_math.h	/^   int (*ecc_mul2add)(ecc_point *A, void *kA,$/;"	m	struct:__anon52
ecc_point	src/headers/tomcrypt_math.h	/^   typedef void ecc_point;$/;"	t
ecc_point	src/headers/tomcrypt_pk.h	/^} ecc_point;$/;"	t	typeref:struct:__anon40
ecc_ptadd	src/headers/tomcrypt_math.h	/^   int (*ecc_ptadd)(ecc_point *P, ecc_point *Q, ecc_point *R, void *modulus, void *mp);$/;"	m	struct:__anon52
ecc_ptdbl	src/headers/tomcrypt_math.h	/^   int (*ecc_ptdbl)(ecc_point *P, ecc_point *R, void *modulus, void *mp);$/;"	m	struct:__anon52
ecc_ptmul	src/headers/tomcrypt_math.h	/^   int (*ecc_ptmul)(void *k, ecc_point *G, ecc_point *R, void *modulus, int map);$/;"	m	struct:__anon52
ecc_shared_secret	src/pk/ecc/ecc_shared_secret.c	/^int ecc_shared_secret(ecc_key *private_key, ecc_key *public_key,$/;"	f
ecc_sign_hash	src/pk/ecc/ecc_sign_hash.c	/^int ecc_sign_hash(const unsigned char *in,  unsigned long inlen, $/;"	f
ecc_sizes	src/pk/ecc/ecc_sizes.c	/^void ecc_sizes(int *low, int *high)$/;"	f
ecc_test	src/pk/ecc/ecc_test.c	/^int ecc_test(void)$/;"	f
ecc_verify_hash	src/pk/ecc/ecc_verify_hash.c	/^int ecc_verify_hash(const unsigned char *sig,  unsigned long siglen,$/;"	f
edge	libtomcrypt/pk/asn1/der/set/der_encode_setof.c	/^struct edge {$/;"	s	file:
edge	src/pk/asn1/der/set/der_encode_setof.c	/^struct edge {$/;"	s	file:
ek	src/headers/tomcrypt_cipher.h	/^    ulong32 ek[32], dk[32];$/;"	m	struct:des_key
ek	src/headers/tomcrypt_cipher.h	/^    ulong32 ek[3][32], dk[3][32];$/;"	m	struct:des3_key
encrypt	src/ciphers/multi2.c	/^static void encrypt(ulong32 *p, int N, ulong32 *uk)$/;"	f	file:
err	libtomcrypt/headers/ncr-int.h	16;"	d
err_2_str	src/misc/error_to_string.c	/^static const char *err_2_str[] =$/;"	v	file:
error_to_string	src/misc/error_to_string.c	/^const char *error_to_string(int err)$/;"	f
export_size	libtomcrypt/headers/tomcrypt_prng.h	/^	int export_size;$/;"	m	struct:ltc_prng_descriptor
export_size	src/headers/tomcrypt_prng.h	/^    int  export_size;$/;"	m	struct:ltc_prng_descriptor
exptmod	src/headers/tomcrypt_math.h	/^   int (*exptmod)(void *a, void *b, void *c, void *d);$/;"	m	struct:__anon52
exptmod	src/math/gmp_desc.c	/^static int exptmod(void *a, void *b, void *c, void *d)$/;"	f	file:
exptmod	src/math/ltm_desc.c	/^static int exptmod(void *a, void *b, void *c, void *d)$/;"	f	file:
exptmod	src/math/tfm_desc.c	/^static int exptmod(void *a, void *b, void *c, void *d)$/;"	f	file:
f8_decrypt	src/modes/f8/f8_decrypt.c	/^int f8_decrypt(const unsigned char *ct, unsigned char *pt, unsigned long len, symmetric_F8 *f8)$/;"	f
f8_done	src/modes/f8/f8_done.c	/^int f8_done(symmetric_F8 *f8)$/;"	f
f8_encrypt	src/modes/f8/f8_encrypt.c	/^int f8_encrypt(const unsigned char *pt, unsigned char *ct, unsigned long len, symmetric_F8 *f8)$/;"	f
f8_getiv	src/modes/f8/f8_getiv.c	/^int f8_getiv(unsigned char *IV, unsigned long *len, symmetric_F8 *f8)$/;"	f
f8_setiv	src/modes/f8/f8_setiv.c	/^int f8_setiv(const unsigned char *IV, unsigned long len, symmetric_F8 *f8)$/;"	f
f8_start	src/modes/f8/f8_start.c	/^int f8_start(                int  cipher, const unsigned char *IV, $/;"	f
f8_test_mode	src/modes/f8/f8_test_mode.c	/^int f8_test_mode(void)$/;"	f
f9_done	src/mac/f9/f9_done.c	/^int f9_done(f9_state *f9, unsigned char *out, unsigned long *outlen)$/;"	f
f9_file	src/mac/f9/f9_file.c	/^int f9_file(int cipher,$/;"	f
f9_init	src/mac/f9/f9_init.c	/^int f9_init(f9_state *f9, int cipher, const unsigned char *key, unsigned long keylen)$/;"	f
f9_memory	src/headers/tomcrypt_cipher.h	/^   int (*f9_memory)($/;"	m	struct:ltc_cipher_descriptor
f9_memory	src/mac/f9/f9_memory.c	/^int f9_memory(int cipher, $/;"	f
f9_memory_multi	src/mac/f9/f9_memory_multi.c	/^int f9_memory_multi(int cipher, $/;"	f
f9_process	src/mac/f9/f9_process.c	/^int f9_process(f9_state *f9, const unsigned char *in, unsigned long inlen)$/;"	f
f9_state	src/headers/tomcrypt_mac.h	/^} f9_state;$/;"	t	typeref:struct:__anon51
f9_test	src/mac/f9/f9_test.c	/^int f9_test(void)$/;"	f
fast_mp_invmod	libtommath/bn_fast_mp_invmod.c	/^int fast_mp_invmod(mp_int * a, mp_int * b, mp_int * c)$/;"	f
fast_mp_montgomery_reduce	libtommath/bn_fast_mp_montgomery_reduce.c	/^int fast_mp_montgomery_reduce(mp_int * x, mp_int * n, mp_digit rho)$/;"	f
fast_s_mp_mul_digs	libtommath/bn_fast_s_mp_mul_digs.c	/^int fast_s_mp_mul_digs(mp_int * a, mp_int * b, mp_int * c, int digs)$/;"	f
fast_s_mp_mul_high_digs	libtommath/bn_fast_s_mp_mul_high_digs.c	/^int fast_s_mp_mul_high_digs(mp_int * a, mp_int * b, mp_int * c, int digs)$/;"	f
fast_s_mp_sqr	libtommath/bn_fast_s_mp_sqr.c	/^int fast_s_mp_sqr(mp_int * a, mp_int * b)$/;"	f
fetch_length	libtomcrypt/pk/asn1/der/sequence/der_decode_sequence_flexi.c	/^static unsigned long fetch_length(const unsigned char *in, unsigned long inlen)$/;"	f	file:
fetch_length	src/pk/asn1/der/sequence/der_decode_sequence_flexi.c	/^static unsigned long fetch_length(const unsigned char *in, unsigned long inlen)$/;"	f	file:
find_base	src/math/fp/ltc_ecc_fp_mulmod.c	/^static int find_base(ecc_point *g)$/;"	f	file:
find_cipher	src/misc/crypt/crypt_find_cipher.c	/^int find_cipher(const char *name)$/;"	f
find_cipher_any	src/misc/crypt/crypt_find_cipher_any.c	/^int find_cipher_any(const char *name, int blocklen, int keylen)$/;"	f
find_cipher_id	src/misc/crypt/crypt_find_cipher_id.c	/^int find_cipher_id(unsigned char ID)$/;"	f
find_hash	src/misc/crypt/crypt_find_hash.c	/^int find_hash(const char *name)$/;"	f
find_hash_any	src/misc/crypt/crypt_find_hash_any.c	/^*\/int find_hash_any(const char *name, int digestlen)$/;"	f
find_hash_id	src/misc/crypt/crypt_find_hash_id.c	/^int find_hash_id(unsigned char ID)$/;"	f
find_hash_oid	src/misc/crypt/crypt_find_hash_oid.c	/^int find_hash_oid(const unsigned long *ID, unsigned long IDlen)$/;"	f
find_hole	src/math/fp/ltc_ecc_fp_mulmod.c	/^static int find_hole(void)$/;"	f	file:
find_prng	src/misc/crypt/crypt_find_prng.c	/^int find_prng(const char *name)$/;"	f
flag	src/headers/tomcrypt_prng.h	/^                 flag,           \/* first add_entropy call or not? *\/$/;"	m	struct:sober128_prng
flags	libtomcrypt/headers/ncr-int.h	/^	unsigned int flags;$/;"	m	struct:key_item_st
fortuna	src/headers/tomcrypt_prng.h	/^    struct fortuna_prng   fortuna;$/;"	m	union:Prng_state	typeref:struct:Prng_state::fortuna_prng
fortuna_add_entropy	src/prngs/fortuna.c	/^int fortuna_add_entropy(const unsigned char *in, unsigned long inlen, prng_state *prng)$/;"	f
fortuna_desc	src/prngs/fortuna.c	/^const struct ltc_prng_descriptor fortuna_desc = {$/;"	v	typeref:struct:ltc_prng_descriptor
fortuna_done	src/prngs/fortuna.c	/^int fortuna_done(prng_state *prng)$/;"	f
fortuna_export	src/prngs/fortuna.c	/^int fortuna_export(unsigned char *out, unsigned long *outlen, prng_state *prng)$/;"	f
fortuna_import	src/prngs/fortuna.c	/^int fortuna_import(const unsigned char *in, unsigned long inlen, prng_state *prng)$/;"	f
fortuna_prng	src/headers/tomcrypt_prng.h	/^struct fortuna_prng {$/;"	s
fortuna_read	src/prngs/fortuna.c	/^unsigned long fortuna_read(unsigned char *out, unsigned long outlen, prng_state *prng)$/;"	f
fortuna_ready	src/prngs/fortuna.c	/^int fortuna_ready(prng_state *prng)$/;"	f
fortuna_reseed	src/prngs/fortuna.c	/^static int fortuna_reseed(prng_state *prng)$/;"	f	file:
fortuna_start	src/prngs/fortuna.c	/^int fortuna_start(prng_state *prng)$/;"	f
fortuna_test	src/prngs/fortuna.c	/^int fortuna_test(void)$/;"	f
fortuna_update_iv	src/prngs/fortuna.c	/^static void fortuna_update_iv(prng_state *prng)$/;"	f	file:
four_rounds	src/mac/pelican/pelican.c	/^static void four_rounds(pelican_state *pelmac)$/;"	f	file:
fp_cache	src/math/fp/ltc_ecc_fp_mulmod.c	/^} fp_cache[FP_ENTRIES];$/;"	v	typeref:struct:__anon27	file:
g	libtomcrypt/headers/ncr-dh.h	/^	mp_int g;$/;"	m	struct:__anon1
g	libtomcrypt/headers/tomcrypt_pk.h	/^	mp_int g;$/;"	m	struct:__anon13
g	src/headers/tomcrypt_pk.h	/^   void *g;$/;"	m	struct:__anon42
g	src/math/fp/ltc_ecc_fp_mulmod.c	/^   ecc_point *g,              \/* cached COPY of base point *\/$/;"	m	struct:__anon27	file:
g1_func	src/ciphers/twofish/twofish.c	286;"	d	file:
g1_func	src/ciphers/twofish/twofish.c	321;"	d	file:
g_func	src/ciphers/skipjack.c	/^static unsigned g_func(unsigned w, int *kp, unsigned char *key)$/;"	f	file:
g_func	src/ciphers/twofish/twofish.c	/^static ulong32 g_func(ulong32 x, symmetric_key *key)$/;"	f	file:
g_func	src/ciphers/twofish/twofish.c	285;"	d	file:
gcd	src/headers/tomcrypt_math.h	/^   int (*gcd)(void *a, void *b, void *c);$/;"	m	struct:__anon52
gcd	src/math/gmp_desc.c	/^static int gcd(void *a, void *b, void *c)$/;"	f	file:
gcd	src/math/ltm_desc.c	/^static int gcd(void *a, void *b, void *c)$/;"	f	file:
gcd	src/math/tfm_desc.c	/^static int gcd(void *a, void *b, void *c)$/;"	f	file:
gcm_add_aad	src/encauth/gcm/gcm_add_aad.c	/^int gcm_add_aad(gcm_state *gcm,$/;"	f
gcm_add_iv	src/encauth/gcm/gcm_add_iv.c	/^int gcm_add_iv(gcm_state *gcm, $/;"	f
gcm_done	src/encauth/gcm/gcm_done.c	/^int gcm_done(gcm_state *gcm, $/;"	f
gcm_gf_mult	src/encauth/gcm/gcm_gf_mult.c	/^void gcm_gf_mult(const unsigned char *a, const unsigned char *b, unsigned char *c)$/;"	f
gcm_init	src/encauth/gcm/gcm_init.c	/^int gcm_init(gcm_state *gcm, int cipher, $/;"	f
gcm_memory	src/encauth/gcm/gcm_memory.c	/^int gcm_memory(      int           cipher,$/;"	f
gcm_mult_h	src/encauth/gcm/gcm_mult_h.c	/^void gcm_mult_h(gcm_state *gcm, unsigned char *I)$/;"	f
gcm_process	src/encauth/gcm/gcm_process.c	/^int gcm_process(gcm_state *gcm,$/;"	f
gcm_reset	src/encauth/gcm/gcm_reset.c	/^int gcm_reset(gcm_state *gcm)$/;"	f
gcm_rightshift	src/encauth/gcm/gcm_gf_mult.c	/^static void gcm_rightshift(unsigned char *a)$/;"	f	file:
gcm_shift_table	src/encauth/gcm/gcm_gf_mult.c	/^const unsigned char gcm_shift_table[256*2] = {$/;"	v
gcm_state	src/headers/tomcrypt_mac.h	/^} gcm_state;$/;"	t	typeref:struct:__anon49
gcm_test	src/encauth/gcm/gcm_test.c	/^int gcm_test(void)$/;"	f
get_digit	src/headers/tomcrypt_math.h	/^   unsigned long (*get_digit)(void *a, int n);$/;"	m	struct:__anon52
get_digit	src/math/gmp_desc.c	/^static unsigned long get_digit(void *a, int n)$/;"	f	file:
get_digit	src/math/ltm_desc.c	/^static unsigned long get_digit(void *a, int n)$/;"	f	file:
get_digit	src/math/tfm_desc.c	/^static unsigned long get_digit(void *a, int n)$/;"	f	file:
get_digit_count	src/headers/tomcrypt_math.h	/^   int (*get_digit_count)(void *a);$/;"	m	struct:__anon52
get_digit_count	src/math/gmp_desc.c	/^static int get_digit_count(void *a)$/;"	f	file:
get_digit_count	src/math/ltm_desc.c	/^static int get_digit_count(void *a)$/;"	f	file:
get_digit_count	src/math/tfm_desc.c	/^static int get_digit_count(void *a)$/;"	f	file:
get_int	src/headers/tomcrypt_math.h	/^   unsigned long (*get_int)(void *a);$/;"	m	struct:__anon52
get_int	src/math/gmp_desc.c	/^static unsigned long get_int(void *a)$/;"	f	file:
get_int	src/math/ltm_desc.c	/^static unsigned long get_int(void *a)$/;"	f	file:
get_int	src/math/tfm_desc.c	/^static unsigned long get_int(void *a)$/;"	f	file:
getbit	libtomcrypt/pk/asn1/der/bit/der_encode_bit_string.c	21;"	d	file:
gf_mult	src/ciphers/twofish/twofish.c	/^static ulong32 gf_mult(ulong32 a, ulong32 b, ulong32 p)$/;"	f	file:
gmp_desc	src/math/gmp_desc.c	/^const ltc_math_descriptor gmp_desc = {$/;"	v
h_func	src/ciphers/twofish/twofish.c	/^static void h_func(const unsigned char *in, unsigned char *out, unsigned char *M, int k, int offset)$/;"	f	file:
ham	src/math/fp/ltc_ecc_fp_mulmod.c	/^   int ham, terma, termb;$/;"	m	struct:__anon28	file:
hash	src/headers/tomcrypt_mac.h	/^     int            hash;$/;"	m	struct:Hmac_state
hash	src/headers/tomcrypt_prng.h	/^    int                   cipher, hash;$/;"	m	struct:yarrow_prng
hash_data	libtomcrypt/headers/cryptodev_int.h	/^struct hash_data {$/;"	s
hash_descriptor	src/misc/crypt/crypt_hash_descriptor.c	/^struct ltc_hash_descriptor hash_descriptor[TAB_SIZE] = {$/;"	v	typeref:struct:ltc_hash_descriptor
hash_file	src/hashes/helper/hash_file.c	/^int hash_file(int hash, const char *fname, unsigned char *out, unsigned long *outlen)$/;"	f
hash_filehandle	src/hashes/helper/hash_filehandle.c	/^int hash_filehandle(int hash, FILE *in, unsigned char *out, unsigned long *outlen)$/;"	f
hash_get_oid	libtomcrypt/hashes/hash_get_oid.c	/^int hash_get_oid(const struct algo_properties_st *hash, oid_st * st)$/;"	f
hash_is_valid	libtomcrypt/hashes/crypt_hash_is_valid.c	/^int hash_is_valid(const struct algo_properties_st *hash)$/;"	f
hash_is_valid	src/misc/crypt/crypt_hash_is_valid.c	/^int hash_is_valid(int idx)$/;"	f
hash_memory	libtomcrypt/hashes/hash_memory.c	/^int hash_memory(const struct algo_properties_st *hash, const unsigned char *in,$/;"	f
hash_memory	src/hashes/helper/hash_memory.c	/^int hash_memory(int hash, const unsigned char *in, unsigned long inlen, unsigned char *out, unsigned long *outlen)$/;"	f
hash_memory_multi	libtomcrypt/hashes/hash_memory_multi.c	/^int hash_memory_multi(const struct algo_properties_st *hash, unsigned char *out,$/;"	f
hash_memory_multi	src/hashes/helper/hash_memory_multi.c	/^int hash_memory_multi(int hash, unsigned char *out, unsigned long *outlen,$/;"	f
hash_state	src/headers/tomcrypt_hash.h	/^} hash_state;$/;"	t	typeref:union:Hash_state
hashsize	src/headers/tomcrypt_hash.h	/^    unsigned long hashsize;$/;"	m	struct:ltc_hash_descriptor
hashstate	src/headers/tomcrypt_mac.h	/^     hash_state     hashstate;$/;"	m	struct:Hmac_state
headeromac	src/headers/tomcrypt_mac.h	/^   omac_state    headeromac, ctomac;$/;"	m	struct:__anon47
hh	libtomcrypt/headers/tomcrypt_pk.h	/^	 hh,			\/* hour *\/$/;"	m	struct:__anon15
hh	src/headers/tomcrypt_pk.h	/^            hh, \/* hour *\/$/;"	m	struct:__anon44
hmac_block	src/headers/tomcrypt_hash.h	/^    int  (*hmac_block)(const unsigned char *key, unsigned long  keylen,$/;"	m	struct:ltc_hash_descriptor
hmac_done	src/mac/hmac/hmac_done.c	/^int hmac_done(hmac_state *hmac, unsigned char *out, unsigned long *outlen)$/;"	f
hmac_file	src/mac/hmac/hmac_file.c	/^int hmac_file(int hash, const char *fname, $/;"	f
hmac_init	src/mac/hmac/hmac_init.c	/^int hmac_init(hmac_state *hmac, int hash, const unsigned char *key, unsigned long keylen)$/;"	f
hmac_memory	src/mac/hmac/hmac_memory.c	/^int hmac_memory(int hash, $/;"	f
hmac_memory_multi	src/mac/hmac/hmac_memory_multi.c	/^int hmac_memory_multi(int hash, $/;"	f
hmac_process	src/mac/hmac/hmac_process.c	/^int hmac_process(hmac_state *hmac, const unsigned char *in, unsigned long inlen)$/;"	f
hmac_state	src/headers/tomcrypt_mac.h	/^} hmac_state;$/;"	t	typeref:struct:Hmac_state
hmac_test	src/mac/hmac/hmac_test.c	/^int hmac_test(void)$/;"	f
iLT	src/ciphers/safer/saferp.c	131;"	d	file:
iLT	src/ciphers/safer/saferp.c	168;"	d	file:
iLT	src/ciphers/safer/saferp.c	169;"	d	file:
iPHT	src/ciphers/safer/saferp.c	96;"	d	file:
iROUND	src/ciphers/safer/saferp.c	162;"	d	file:
iROUND	src/ciphers/safer/saferp.c	163;"	d	file:
iROUND	src/ciphers/safer/saferp.c	66;"	d	file:
iSHUF	src/ciphers/safer/saferp.c	114;"	d	file:
ia5_table	libtomcrypt/pk/asn1/der/ia5/der_length_ia5_string.c	/^} ia5_table[] = {$/;"	v	typeref:struct:__anon21	file:
ia5_table	src/pk/asn1/der/ia5/der_length_ia5_string.c	/^} ia5_table[] = {$/;"	v	typeref:struct:__anon56	file:
idx	src/headers/tomcrypt_pk.h	/^    int idx;$/;"	m	struct:__anon41
ig_func	src/ciphers/skipjack.c	/^static unsigned ig_func(unsigned w, int *kp, unsigned char *key)$/;"	f	file:
ikeystep	src/ciphers/skipjack.c	/^static const int ikeystep[] = { 9, 0, 1, 2, 3, 4, 5, 6, 7, 8 };$/;"	v	file:
init	libtomcrypt/headers/cryptodev_int.h	/^	int init;		\/* 0 uninitialized *\/$/;"	m	struct:cipher_data
init	libtomcrypt/headers/cryptodev_int.h	/^	int init;		\/* 0 uninitialized *\/$/;"	m	struct:hash_data
init	libtomcrypt/headers/ncr-pk.h	/^	int init;		\/* non zero if initialized *\/$/;"	m	struct:ncr_pk_ctx
init	src/headers/tomcrypt_hash.h	/^    int (*init)(hash_state *hash);$/;"	m	struct:ltc_hash_descriptor
init	src/headers/tomcrypt_math.h	/^   int (*init)(void **a);$/;"	m	struct:__anon52
init	src/math/gmp_desc.c	/^static int init(void **a)$/;"	f	file:
init	src/math/ltm_desc.c	/^static int init(void **a)$/;"	f	file:
init	src/math/tfm_desc.c	/^static int init(void **a)$/;"	f	file:
initR	src/headers/tomcrypt_prng.h	/^                 initR[17],      \/* saved register contents *\/ $/;"	m	struct:sober128_prng
init_copy	src/headers/tomcrypt_math.h	/^   int (*init_copy)(void **dst, void *src);$/;"	m	struct:__anon52
init_copy	src/math/gmp_desc.c	/^static int init_copy(void **a, void *b)$/;"	f	file:
init_copy	src/math/ltm_desc.c	/^static int init_copy(void **a, void *b)$/;"	f	file:
init_copy	src/math/tfm_desc.c	/^static int init_copy(void **a, void *b)$/;"	f	file:
init_devices	ok_main.c	/^static OK_RESULT init_devices(void)$/;"	f	file:
input_key	libtomcrypt/headers/ncr.h	/^	ncr_key_t input_key;$/;"	m	struct:ncr_key_derive
input_size	libtomcrypt/headers/ncr.h	/^	__u32 input_size, output_size;$/;"	m	struct:ncr_key_derive
input_size	libtomcrypt/headers/ncr.h	/^	__u32 input_size, output_size;$/;"	m	struct:ncr_key_export
input_size	libtomcrypt/headers/ncr.h	/^	__u32 input_size, output_size;$/;"	m	struct:ncr_key_generate
input_size	libtomcrypt/headers/ncr.h	/^	__u32 input_size, output_size;$/;"	m	struct:ncr_key_generate_pair
input_size	libtomcrypt/headers/ncr.h	/^	__u32 input_size, output_size;$/;"	m	struct:ncr_key_get_info
input_size	libtomcrypt/headers/ncr.h	/^	__u32 input_size, output_size;$/;"	m	struct:ncr_key_import
input_size	libtomcrypt/headers/ncr.h	/^	__u32 input_size, output_size;$/;"	m	struct:ncr_key_storage_unwrap
input_size	libtomcrypt/headers/ncr.h	/^	__u32 input_size, output_size;$/;"	m	struct:ncr_key_storage_wrap
input_size	libtomcrypt/headers/ncr.h	/^	__u32 input_size, output_size;$/;"	m	struct:ncr_key_unwrap
input_size	libtomcrypt/headers/ncr.h	/^	__u32 input_size, output_size;$/;"	m	struct:ncr_key_wrap
input_size	libtomcrypt/headers/ncr.h	/^	__u32 input_size, output_size;$/;"	m	struct:ncr_master_key_set
input_size	libtomcrypt/headers/ncr.h	/^	__u32 input_size, output_size;$/;"	m	struct:ncr_session_final
input_size	libtomcrypt/headers/ncr.h	/^	__u32 input_size, output_size;$/;"	m	struct:ncr_session_init
input_size	libtomcrypt/headers/ncr.h	/^	__u32 input_size, output_size;$/;"	m	struct:ncr_session_once
input_size	libtomcrypt/headers/ncr.h	/^	__u32 input_size, output_size;$/;"	m	struct:ncr_session_update
invmod	src/headers/tomcrypt_math.h	/^   int (*invmod)(void *, void *, void *);$/;"	m	struct:__anon52
invmod	src/math/gmp_desc.c	/^static int invmod(void *a, void *b, void *c)$/;"	f	file:
invmod	src/math/ltm_desc.c	/^static int invmod(void *a, void *b, void *c)$/;"	f	file:
invmod	src/math/tfm_desc.c	/^static int invmod(void *a, void *b, void *c)$/;"	f	file:
is_hmac	libtomcrypt/headers/ncr-int.h	/^	unsigned is_hmac:1;$/;"	m	struct:algo_properties_st
is_pk	libtomcrypt/headers/ncr-int.h	/^	unsigned is_pk:1;$/;"	m	struct:algo_properties_st
is_point	src/pk/ecc/ecc_import.c	/^static int is_point(ecc_key *key)$/;"	f	file:
is_symmetric	libtomcrypt/headers/ncr-int.h	/^	unsigned is_symmetric:1;$/;"	m	struct:algo_properties_st
isprime	src/headers/tomcrypt_math.h	/^   int (*isprime)(void *a, int *b);$/;"	m	struct:__anon52
isprime	src/math/gmp_desc.c	/^static int isprime(void *a, int *b)$/;"	f	file:
isprime	src/math/ltm_desc.c	/^static int isprime(void *a, int *b)$/;"	f	file:
isprime	src/math/tfm_desc.c	/^static int isprime(void *a, int *b)$/;"	f	file:
iv	libtomcrypt/headers/cryptodev_int.h	/^		uint8_t iv[NCR_CIPHER_MAX_BLOCK_LEN];$/;"	m	struct:cipher_data::__anon2
ivmode	src/headers/tomcrypt_mac.h	/^                       ivmode,       \/* Which mode is the IV in? *\/$/;"	m	struct:__anon49
ivsize	libtomcrypt/headers/cryptodev_int.h	/^	int ivsize;$/;"	m	struct:cipher_data
k	libtommath/bn_mp_prime_rabin_miller_trials.c	/^	int k, t;$/;"	m	struct:__anon24	file:
k	src/headers/tomcrypt_pk.h	/^    void *k;$/;"	m	struct:__anon41
kTHETA	src/ciphers/noekeon.c	41;"	d	file:
kasumi	src/headers/tomcrypt_cipher.h	/^   struct kasumi_key   kasumi;$/;"	m	union:Symmetric_key	typeref:struct:Symmetric_key::kasumi_key
kasumi_desc	src/ciphers/kasumi.c	/^const struct ltc_cipher_descriptor kasumi_desc = {$/;"	v	typeref:struct:ltc_cipher_descriptor
kasumi_done	src/ciphers/kasumi.c	/^void kasumi_done(symmetric_key *skey)$/;"	f
kasumi_ecb_decrypt	src/ciphers/kasumi.c	/^int kasumi_ecb_decrypt(const unsigned char *ct, unsigned char *pt, symmetric_key *skey)$/;"	f
kasumi_ecb_encrypt	src/ciphers/kasumi.c	/^int kasumi_ecb_encrypt(const unsigned char *pt, unsigned char *ct, symmetric_key *skey)$/;"	f
kasumi_key	src/headers/tomcrypt_cipher.h	/^struct kasumi_key {$/;"	s
kasumi_keysize	src/ciphers/kasumi.c	/^int kasumi_keysize(int *keysize)$/;"	f
kasumi_setup	src/ciphers/kasumi.c	/^int kasumi_setup(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey)$/;"	f
kasumi_test	src/ciphers/kasumi.c	/^int kasumi_test(void)$/;"	f
katja_decrypt_key	src/pk/katja/katja_decrypt_key.c	/^int katja_decrypt_key(const unsigned char *in,       unsigned long  inlen,$/;"	f
katja_encrypt_key	src/pk/katja/katja_encrypt_key.c	/^int katja_encrypt_key(const unsigned char *in,     unsigned long inlen,$/;"	f
katja_export	src/pk/katja/katja_export.c	/^int katja_export(unsigned char *out, unsigned long *outlen, int type, katja_key *key)$/;"	f
katja_exptmod	src/pk/katja/katja_exptmod.c	/^int katja_exptmod(const unsigned char *in,   unsigned long inlen,$/;"	f
katja_free	src/pk/katja/katja_free.c	/^void katja_free(katja_key *key)$/;"	f
katja_import	src/pk/katja/katja_import.c	/^int katja_import(const unsigned char *in, unsigned long inlen, katja_key *key)$/;"	f
katja_key	src/headers/tomcrypt_pk.h	/^} katja_key;$/;"	t	typeref:struct:KAT_key
katja_make_key	src/pk/katja/katja_make_key.c	/^int katja_make_key(prng_state *prng, int wprng, int size, katja_key *key)$/;"	f
key	libtomcrypt/headers/ncr-int.h	/^	} key;$/;"	m	struct:key_item_st	typeref:union:key_item_st::__anon17
key	libtomcrypt/headers/ncr-pk.h	/^	struct key_item_st *key;$/;"	m	struct:ncr_pk_ctx	typeref:struct:ncr_pk_ctx::key_item_st
key	libtomcrypt/headers/ncr.h	/^	const void __user *key;$/;"	m	struct:ncr_master_key_set
key	libtomcrypt/headers/ncr.h	/^	ncr_key_t key;$/;"	m	struct:ncr_key_export
key	libtomcrypt/headers/ncr.h	/^	ncr_key_t key;$/;"	m	struct:ncr_key_generate
key	libtomcrypt/headers/ncr.h	/^	ncr_key_t key;$/;"	m	struct:ncr_key_get_info
key	libtomcrypt/headers/ncr.h	/^	ncr_key_t key;$/;"	m	struct:ncr_key_import
key	libtomcrypt/headers/ncr.h	/^	ncr_key_t key;$/;"	m	struct:ncr_key_storage_unwrap
key	libtomcrypt/headers/ncr.h	/^	ncr_key_t key;$/;"	m	struct:ncr_key_storage_wrap
key	src/headers/tomcrypt_cipher.h	/^    symmetric_key     key;$/;"	m	struct:__anon35
key	src/headers/tomcrypt_cipher.h	/^    unsigned char key[10];$/;"	m	struct:skipjack_key
key	src/headers/tomcrypt_cipher.h	/^   symmetric_key       key;$/;"	m	struct:__anon30
key	src/headers/tomcrypt_cipher.h	/^   symmetric_key       key;$/;"	m	struct:__anon31
key	src/headers/tomcrypt_cipher.h	/^   symmetric_key       key;$/;"	m	struct:__anon32
key	src/headers/tomcrypt_cipher.h	/^   symmetric_key       key;$/;"	m	struct:__anon33
key	src/headers/tomcrypt_cipher.h	/^   symmetric_key       key;$/;"	m	struct:__anon34
key	src/headers/tomcrypt_cipher.h	/^   symmetric_key       key;$/;"	m	struct:__anon36
key	src/headers/tomcrypt_cipher.h	/^struct safer_key { safer_key_t key; };$/;"	m	struct:safer_key
key	src/headers/tomcrypt_mac.h	/^     unsigned char  *key;$/;"	m	struct:Hmac_state
key	src/headers/tomcrypt_mac.h	/^   symmetric_key     key;                     \/* scheduled key for cipher *\/$/;"	m	struct:__anon46
key	src/headers/tomcrypt_mac.h	/^   symmetric_key     key;                     \/* scheduled key for cipher *\/$/;"	m	struct:__anon48
key	src/headers/tomcrypt_mac.h	/^   symmetric_key   key;$/;"	m	struct:__anon45
key	src/headers/tomcrypt_mac.h	/^   symmetric_key key;$/;"	m	struct:__anon50
key	src/headers/tomcrypt_mac.h	/^   symmetric_key key;$/;"	m	struct:__anon51
key1	src/headers/tomcrypt_cipher.h	/^   symmetric_key  key1, key2;$/;"	m	struct:__anon37
key2	src/headers/tomcrypt_cipher.h	/^   symmetric_key  key1, key2;$/;"	m	struct:__anon37
keyBits	src/headers/tomcrypt_cipher.h	/^   int keyBits; $/;"	m	struct:anubis_key
key_id	libtomcrypt/headers/ncr-int.h	/^	uint8_t key_id[MAX_KEY_ID_SIZE];$/;"	m	struct:key_item_st
key_id_size	libtomcrypt/headers/ncr-int.h	/^	size_t key_id_size;$/;"	m	struct:key_item_st
key_idr	libtomcrypt/headers/ncr-int.h	/^	struct idr key_idr;$/;"	m	struct:ncr_lists	typeref:struct:ncr_lists::idr
key_idr_mutex	libtomcrypt/headers/ncr-int.h	/^	struct mutex key_idr_mutex;$/;"	m	struct:ncr_lists	typeref:struct:ncr_lists::mutex
key_item_st	libtomcrypt/headers/ncr-int.h	/^struct key_item_st {$/;"	s
key_schedule	src/hashes/tiger.c	/^static void key_schedule(ulong64 *x) $/;"	f	file:
key_size	libtomcrypt/headers/ncr-int.h	/^	int key_size;$/;"	m	struct:algo_oid_st
key_size	libtomcrypt/headers/ncr.h	/^	__u32 key_size;$/;"	m	struct:ncr_master_key_set
key_type	libtomcrypt/headers/ncr-int.h	/^	ncr_key_type_t key_type;$/;"	m	struct:algo_properties_st
keylen	src/headers/tomcrypt_cipher.h	/^    ulong32 K[32], keylen;$/;"	m	struct:cast5_key
keylen	src/headers/tomcrypt_mac.h	/^                 keylen,$/;"	m	struct:__anon51
keysize	src/headers/tomcrypt_cipher.h	/^   int  (*keysize)(int *keysize);$/;"	m	struct:ltc_cipher_descriptor
keystep	src/ciphers/skipjack.c	/^static const int keystep[] =  { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0 };$/;"	v	file:
khazad	src/headers/tomcrypt_cipher.h	/^   struct khazad_key   khazad;$/;"	m	union:Symmetric_key	typeref:struct:Symmetric_key::khazad_key
khazad_crypt	src/ciphers/khazad.c	/^static void khazad_crypt(const unsigned char *plaintext, unsigned char *ciphertext,$/;"	f	file:
khazad_desc	src/ciphers/khazad.c	/^const struct ltc_cipher_descriptor khazad_desc = {$/;"	v	typeref:struct:ltc_cipher_descriptor
khazad_done	src/ciphers/khazad.c	/^void khazad_done(symmetric_key *skey)$/;"	f
khazad_ecb_decrypt	src/ciphers/khazad.c	/^int khazad_ecb_decrypt(const unsigned char *ct, unsigned char *pt, symmetric_key *skey)$/;"	f
khazad_ecb_encrypt	src/ciphers/khazad.c	/^int khazad_ecb_encrypt(const unsigned char *pt, unsigned char *ct, symmetric_key *skey)$/;"	f
khazad_key	src/headers/tomcrypt_cipher.h	/^struct khazad_key {$/;"	s
khazad_keysize	src/ciphers/khazad.c	/^int khazad_keysize(int *keysize)$/;"	f
khazad_setup	src/ciphers/khazad.c	/^int khazad_setup(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey)$/;"	f
khazad_test	src/ciphers/khazad.c	/^int khazad_test(void)$/;"	f
konst	src/headers/tomcrypt_prng.h	/^                 konst,          \/* key dependent constant *\/$/;"	m	struct:sober128_prng
kseed	src/headers/tomcrypt_cipher.h	/^   struct kseed_key    kseed;$/;"	m	union:Symmetric_key	typeref:struct:Symmetric_key::kseed_key
kseed_desc	src/ciphers/kseed.c	/^const struct ltc_cipher_descriptor kseed_desc = {$/;"	v	typeref:struct:ltc_cipher_descriptor
kseed_done	src/ciphers/kseed.c	/^void kseed_done(symmetric_key *skey)$/;"	f
kseed_ecb_decrypt	src/ciphers/kseed.c	/^int kseed_ecb_decrypt(const unsigned char *ct, unsigned char *pt, symmetric_key *skey)$/;"	f
kseed_ecb_encrypt	src/ciphers/kseed.c	/^int kseed_ecb_encrypt(const unsigned char *pt, unsigned char *ct, symmetric_key *skey)$/;"	f
kseed_key	src/headers/tomcrypt_cipher.h	/^struct kseed_key {$/;"	s
kseed_keysize	src/ciphers/kseed.c	/^int kseed_keysize(int *keysize)$/;"	f
kseed_setup	src/ciphers/kseed.c	/^int kseed_setup(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey)$/;"	f
kseed_test	src/ciphers/kseed.c	/^int kseed_test(void)$/;"	f
kstr	libtomcrypt/headers/ncr-int.h	/^	const char *kstr;$/;"	m	struct:algo_properties_st
kstr_len	libtomcrypt/headers/ncr-int.h	/^	size_t kstr_len;$/;"	m	struct:algo_properties_st
lcm	src/headers/tomcrypt_math.h	/^   int (*lcm)(void *a, void *b, void *c);$/;"	m	struct:__anon52
lcm	src/math/gmp_desc.c	/^static int lcm(void *a, void *b, void *c)$/;"	f	file:
lcm	src/math/ltm_desc.c	/^static int lcm(void *a, void *b, void *c)$/;"	f	file:
lcm	src/math/tfm_desc.c	/^static int lcm(void *a, void *b, void *c)$/;"	f	file:
len	src/encauth/ocb/ocb_init.c	/^    int           len;$/;"	m	struct:__anon54	file:
len	src/mac/pmac/pmac_init.c	/^    int           len;$/;"	m	struct:__anon55	file:
length	src/headers/tomcrypt_hash.h	/^    ulong64  length, state[8];$/;"	m	struct:sha512_state
length	src/headers/tomcrypt_hash.h	/^    ulong64 length, state[8];$/;"	m	struct:whirlpool_state
length	src/headers/tomcrypt_hash.h	/^    ulong64 length;$/;"	m	struct:chc_state
length	src/headers/tomcrypt_hash.h	/^    ulong64 length;$/;"	m	struct:md4_state
length	src/headers/tomcrypt_hash.h	/^    ulong64 length;$/;"	m	struct:md5_state
length	src/headers/tomcrypt_hash.h	/^    ulong64 length;$/;"	m	struct:rmd128_state
length	src/headers/tomcrypt_hash.h	/^    ulong64 length;$/;"	m	struct:rmd160_state
length	src/headers/tomcrypt_hash.h	/^    ulong64 length;$/;"	m	struct:rmd256_state
length	src/headers/tomcrypt_hash.h	/^    ulong64 length;$/;"	m	struct:rmd320_state
length	src/headers/tomcrypt_hash.h	/^    ulong64 length;$/;"	m	struct:sha1_state
length	src/headers/tomcrypt_hash.h	/^    ulong64 length;$/;"	m	struct:sha256_state
length	src/headers/tomcrypt_hash.h	/^    ulong64 state[3], length;$/;"	m	struct:tiger_state
limits_type_t	libtomcrypt/headers/ncr-int.h	/^} limits_type_t;$/;"	t	typeref:enum:__anon20
lnz	libtommath/bn_mp_cnt_lsb.c	/^static const int lnz[16] = {$/;"	v	file:
lock	src/math/fp/ltc_ecc_fp_mulmod.c	/^   int        lock;           \/* flag to indicate cache eviction permitted (0) or not (1) *\/$/;"	m	struct:__anon27	file:
lru_count	src/math/fp/ltc_ecc_fp_mulmod.c	/^   int        lru_count;      \/* amount of times this entry has been used *\/$/;"	m	struct:__anon27	file:
lrw_decrypt	src/modes/lrw/lrw_decrypt.c	/^int lrw_decrypt(const unsigned char *ct, unsigned char *pt, unsigned long len, symmetric_LRW *lrw)$/;"	f
lrw_done	src/modes/lrw/lrw_done.c	/^int lrw_done(symmetric_LRW *lrw) $/;"	f
lrw_encrypt	src/modes/lrw/lrw_encrypt.c	/^int lrw_encrypt(const unsigned char *pt, unsigned char *ct, unsigned long len, symmetric_LRW *lrw)$/;"	f
lrw_getiv	src/modes/lrw/lrw_getiv.c	/^int lrw_getiv(unsigned char *IV, unsigned long *len, symmetric_LRW *lrw)$/;"	f
lrw_process	src/modes/lrw/lrw_process.c	/^int lrw_process(const unsigned char *pt, unsigned char *ct, unsigned long len, int mode, symmetric_LRW *lrw)$/;"	f
lrw_setiv	src/modes/lrw/lrw_setiv.c	/^int lrw_setiv(const unsigned char *IV, unsigned long len, symmetric_LRW *lrw)$/;"	f
lrw_start	src/modes/lrw/lrw_start.c	/^int lrw_start(               int   cipher,$/;"	f
lrw_test	src/modes/lrw/lrw_test.c	/^int lrw_test(void)$/;"	f
ltc_asn1_list	libtomcrypt/headers/tomcrypt_pk.h	/^} ltc_asn1_list;$/;"	t	typeref:struct:ltc_asn1_list_
ltc_asn1_list	src/headers/tomcrypt_pk.h	/^} ltc_asn1_list;$/;"	t	typeref:struct:ltc_asn1_list_
ltc_asn1_list_	libtomcrypt/headers/tomcrypt_pk.h	/^typedef struct ltc_asn1_list_ {$/;"	s
ltc_asn1_list_	src/headers/tomcrypt_pk.h	/^typedef struct ltc_asn1_list_ {$/;"	s
ltc_cipher_descriptor	src/headers/tomcrypt_cipher.h	/^extern struct ltc_cipher_descriptor {$/;"	s
ltc_code	src/math/ltm_desc.c	/^    int mpi_code, ltc_code;$/;"	m	struct:__anon29	file:
ltc_code	src/math/tfm_desc.c	/^    int tfm_code, ltc_code;$/;"	m	struct:__anon26	file:
ltc_deinit_multi	src/math/multi.c	/^void ltc_deinit_multi(void *a, ...)$/;"	f
ltc_ecc_del_point	src/pk/ecc/ltc_ecc_points.c	/^void ltc_ecc_del_point(ecc_point *p)$/;"	f
ltc_ecc_fp_add_point	src/math/fp/ltc_ecc_fp_mulmod.c	/^ltc_ecc_fp_add_point(ecc_point *g, void *modulus, int lock)$/;"	f
ltc_ecc_fp_free	src/math/fp/ltc_ecc_fp_mulmod.c	/^void ltc_ecc_fp_free(void)$/;"	f
ltc_ecc_fp_free_cache	src/math/fp/ltc_ecc_fp_mulmod.c	/^static void ltc_ecc_fp_free_cache(void)$/;"	f	file:
ltc_ecc_fp_mul2add	src/math/fp/ltc_ecc_fp_mulmod.c	/^int ltc_ecc_fp_mul2add(ecc_point *A, void *kA,$/;"	f
ltc_ecc_fp_mulmod	src/math/fp/ltc_ecc_fp_mulmod.c	/^int ltc_ecc_fp_mulmod(void *k, ecc_point *G, ecc_point *R, void *modulus, int map)$/;"	f
ltc_ecc_fp_restore_state	src/math/fp/ltc_ecc_fp_mulmod.c	/^int ltc_ecc_fp_restore_state(unsigned char *in, unsigned long inlen)$/;"	f
ltc_ecc_fp_save_state	src/math/fp/ltc_ecc_fp_mulmod.c	/^int ltc_ecc_fp_save_state(unsigned char **out, unsigned long *outlen)$/;"	f
ltc_ecc_fp_tablelock	src/math/fp/ltc_ecc_fp_mulmod.c	/^void ltc_ecc_fp_tablelock(int lock)$/;"	f
ltc_ecc_is_valid_idx	src/pk/ecc/ltc_ecc_is_valid_idx.c	/^int ltc_ecc_is_valid_idx(int n)$/;"	f
ltc_ecc_map	src/pk/ecc/ltc_ecc_map.c	/^int ltc_ecc_map(ecc_point *P, void *modulus, void *mp)$/;"	f
ltc_ecc_mul2add	src/pk/ecc/ltc_ecc_mul2add.c	/^int ltc_ecc_mul2add(ecc_point *A, void *kA,$/;"	f
ltc_ecc_mulmod	src/pk/ecc/ltc_ecc_mulmod.c	/^int ltc_ecc_mulmod(void *k, ecc_point *G, ecc_point *R, void *modulus, int map)$/;"	f
ltc_ecc_mulmod	src/pk/ecc/ltc_ecc_mulmod_timing.c	/^int ltc_ecc_mulmod(void *k, ecc_point *G, ecc_point *R, void *modulus, int map)$/;"	f
ltc_ecc_new_point	src/pk/ecc/ltc_ecc_points.c	/^ecc_point *ltc_ecc_new_point(void)$/;"	f
ltc_ecc_projective_add_point	src/pk/ecc/ltc_ecc_projective_add_point.c	/^int ltc_ecc_projective_add_point(ecc_point *P, ecc_point *Q, ecc_point *R, void *modulus, void *mp)$/;"	f
ltc_ecc_projective_dbl_point	src/pk/ecc/ltc_ecc_projective_dbl_point.c	/^int ltc_ecc_projective_dbl_point(ecc_point *P, ecc_point *R, void *modulus, void *mp)$/;"	f
ltc_ecc_set_type	src/headers/tomcrypt_pk.h	/^} ltc_ecc_set_type;$/;"	t	typeref:struct:__anon39
ltc_ecc_sets	src/pk/ecc/ecc.c	/^const ltc_ecc_set_type ltc_ecc_sets[] = {$/;"	v
ltc_hash_descriptor	src/headers/tomcrypt_hash.h	/^extern  struct ltc_hash_descriptor {$/;"	s
ltc_init_multi	src/math/multi.c	/^int ltc_init_multi(void **a, ...)$/;"	f
ltc_math_descriptor	src/headers/tomcrypt_math.h	/^} ltc_math_descriptor;$/;"	t	typeref:struct:__anon52
ltc_mp	src/misc/crypt/crypt_ltc_mp_descriptor.c	/^ltc_math_descriptor ltc_mp;$/;"	v
ltc_pkcs_1_paddings	libtomcrypt/headers/tomcrypt_pkcs.h	/^enum ltc_pkcs_1_paddings {$/;"	g
ltc_pkcs_1_paddings	src/headers/tomcrypt_pkcs.h	/^enum ltc_pkcs_1_paddings$/;"	g
ltc_pkcs_1_v1_5_blocks	libtomcrypt/headers/tomcrypt_pkcs.h	/^enum ltc_pkcs_1_v1_5_blocks {$/;"	g
ltc_pkcs_1_v1_5_blocks	src/headers/tomcrypt_pkcs.h	/^enum ltc_pkcs_1_v1_5_blocks$/;"	g
ltc_prng_descriptor	libtomcrypt/headers/tomcrypt_prng.h	/^extern struct ltc_prng_descriptor {$/;"	s
ltc_prng_descriptor	src/headers/tomcrypt_prng.h	/^extern struct ltc_prng_descriptor {$/;"	s
ltc_to_asn1	libtomcrypt/pk/asn1/der/set/der_encode_set.c	/^static int ltc_to_asn1(int v)$/;"	f	file:
ltc_to_asn1	src/pk/asn1/der/set/der_encode_set.c	/^static int ltc_to_asn1(int v)$/;"	f	file:
ltc_utctime	libtomcrypt/headers/tomcrypt_pk.h	/^} ltc_utctime;$/;"	t	typeref:struct:__anon15
ltc_utctime	src/headers/tomcrypt_pk.h	/^} ltc_utctime;$/;"	t	typeref:struct:__anon44
ltm_desc	src/math/ltm_desc.c	/^const ltc_math_descriptor ltm_desc = {$/;"	v
ltm_prime_callback	libtommath/tommath.h	/^typedef int ltm_prime_callback(unsigned char *dst, int len, void *dat);$/;"	t
ltm_prime_tab	libtommath/bn_prime_tab.c	/^const mp_digit ltm_prime_tab[] = {$/;"	v
lut_orders	src/math/fp/ltc_ecc_fp_mulmod.c	/^} lut_orders[] = {$/;"	v	typeref:struct:__anon28	file:
map	src/misc/base64/base64_decode.c	/^static const unsigned char map[256] = {$/;"	v	file:
mask	src/encauth/gcm/gcm_gf_mult.c	/^static const unsigned char mask[] = { 0x80, 0x40, 0x20, 0x10, 0x08, 0x04, 0x02, 0x01 };$/;"	v	file:
max_key_length	src/headers/tomcrypt_cipher.h	/^        max_key_length, $/;"	m	struct:ltc_cipher_descriptor
md	src/headers/tomcrypt_mac.h	/^     hash_state     md;$/;"	m	struct:Hmac_state
md2	src/headers/tomcrypt_hash.h	/^    struct md2_state    md2;$/;"	m	union:Hash_state	typeref:struct:Hash_state::md2_state
md2_compress	src/hashes/md2.c	/^static void md2_compress(hash_state *md)$/;"	f	file:
md2_desc	src/hashes/md2.c	/^const struct ltc_hash_descriptor md2_desc =$/;"	v	typeref:struct:ltc_hash_descriptor
md2_done	src/hashes/md2.c	/^int md2_done(hash_state * md, unsigned char *out)$/;"	f
md2_init	src/hashes/md2.c	/^int md2_init(hash_state *md)$/;"	f
md2_process	src/hashes/md2.c	/^int md2_process(hash_state *md, const unsigned char *in, unsigned long inlen)$/;"	f
md2_state	src/headers/tomcrypt_hash.h	/^struct md2_state {$/;"	s
md2_test	src/hashes/md2.c	/^int md2_test(void)$/;"	f
md2_update_chksum	src/hashes/md2.c	/^static void md2_update_chksum(hash_state *md)$/;"	f	file:
md4	src/headers/tomcrypt_hash.h	/^    struct md4_state    md4;$/;"	m	union:Hash_state	typeref:struct:Hash_state::md4_state
md4_compress	src/hashes/md4.c	/^static int md4_compress(hash_state *md, unsigned char *buf)$/;"	f	file:
md4_desc	src/hashes/md4.c	/^const struct ltc_hash_descriptor md4_desc =$/;"	v	typeref:struct:ltc_hash_descriptor
md4_done	src/hashes/md4.c	/^int md4_done(hash_state * md, unsigned char *out)$/;"	f
md4_init	src/hashes/md4.c	/^int md4_init(hash_state * md)$/;"	f
md4_state	src/headers/tomcrypt_hash.h	/^struct md4_state {$/;"	s
md4_test	src/hashes/md4.c	/^int md4_test(void)$/;"	f
md5	src/headers/tomcrypt_hash.h	/^    struct md5_state    md5;$/;"	m	union:Hash_state	typeref:struct:Hash_state::md5_state
md5_compress	src/hashes/md5.c	/^static int md5_compress(hash_state *md, unsigned char *buf)$/;"	f	file:
md5_desc	src/hashes/md5.c	/^const struct ltc_hash_descriptor md5_desc =$/;"	v	typeref:struct:ltc_hash_descriptor
md5_done	src/hashes/md5.c	/^int md5_done(hash_state * md, unsigned char *out)$/;"	f
md5_init	src/hashes/md5.c	/^int md5_init(hash_state * md)$/;"	f
md5_state	src/headers/tomcrypt_hash.h	/^struct md5_state {$/;"	s
md5_test	src/hashes/md5.c	/^int  md5_test(void)$/;"	f
mds_column_mult	src/ciphers/twofish/twofish.c	/^static ulong32 mds_column_mult(unsigned char in, int col)$/;"	f	file:
mds_column_mult	src/ciphers/twofish/twofish.c	205;"	d	file:
mds_mult	src/ciphers/twofish/twofish.c	/^static void mds_mult(const unsigned char *in, unsigned char *out)$/;"	f	file:
mds_tab	src/ciphers/twofish/twofish_tab.c	/^static const ulong32 mds_tab[4][256] = {$/;"	v	file:
min_key_length	src/headers/tomcrypt_cipher.h	/^   int  min_key_length, $/;"	m	struct:ltc_cipher_descriptor
mm	libtomcrypt/headers/tomcrypt_pk.h	/^	 mm,			\/* minute *\/$/;"	m	struct:__anon15
mm	src/headers/tomcrypt_pk.h	/^            mm, \/* minute *\/$/;"	m	struct:__anon44
mode	src/headers/tomcrypt_cipher.h	/^                       mode,$/;"	m	struct:__anon34
mode	src/headers/tomcrypt_mac.h	/^                       mode,         \/* mode the GCM code is in *\/$/;"	m	struct:__anon49
modi	src/headers/tomcrypt_math.h	/^   int (*modi)(void *a, unsigned long b, unsigned long *c);$/;"	m	struct:__anon52
modi	src/math/gmp_desc.c	/^static int modi(void *a, unsigned long b, unsigned long *c)$/;"	f	file:
modi	src/math/ltm_desc.c	/^static int modi(void *a, unsigned long b, unsigned long *c)$/;"	f	file:
modi	src/math/tfm_desc.c	/^static int modi(void *a, unsigned long b, unsigned long *c)$/;"	f	file:
montgomery_deinit	src/headers/tomcrypt_math.h	/^   void (*montgomery_deinit)(void *a);$/;"	m	struct:__anon52
montgomery_deinit	src/math/gmp_desc.c	/^static void montgomery_deinit(void *a)$/;"	f	file:
montgomery_deinit	src/math/ltm_desc.c	/^static void montgomery_deinit(void *a)$/;"	f	file:
montgomery_deinit	src/math/tfm_desc.c	/^static void montgomery_deinit(void *a)$/;"	f	file:
montgomery_normalization	src/headers/tomcrypt_math.h	/^   int (*montgomery_normalization)(void *a, void *b);$/;"	m	struct:__anon52
montgomery_normalization	src/math/gmp_desc.c	/^static int montgomery_normalization(void *a, void *b)$/;"	f	file:
montgomery_normalization	src/math/ltm_desc.c	/^static int montgomery_normalization(void *a, void *b)$/;"	f	file:
montgomery_normalization	src/math/tfm_desc.c	/^static int montgomery_normalization(void *a, void *b)$/;"	f	file:
montgomery_reduce	src/headers/tomcrypt_math.h	/^   int (*montgomery_reduce)(void *a, void *b, void *c);$/;"	m	struct:__anon52
montgomery_reduce	src/math/gmp_desc.c	/^static int montgomery_reduce(void *a, void *b, void *c)$/;"	f	file:
montgomery_reduce	src/math/ltm_desc.c	/^static int montgomery_reduce(void *a, void *b, void *c)$/;"	f	file:
montgomery_reduce	src/math/tfm_desc.c	/^static int montgomery_reduce(void *a, void *b, void *c)$/;"	f	file:
montgomery_setup	src/headers/tomcrypt_math.h	/^   int (*montgomery_setup)(void *a, void **b);$/;"	m	struct:__anon52
montgomery_setup	src/math/gmp_desc.c	/^static int montgomery_setup(void *a, void **b)$/;"	f	file:
montgomery_setup	src/math/ltm_desc.c	/^static int montgomery_setup(void *a, void **b)$/;"	f	file:
montgomery_setup	src/math/tfm_desc.c	/^static int montgomery_setup(void *a, void **b)$/;"	f	file:
mp_2expt	libtommath/bn_mp_2expt.c	/^int mp_2expt(mp_int * a, int b)$/;"	f
mp_2expt	src/headers/tomcrypt_math.h	456;"	d
mp_abs	libtommath/bn_mp_abs.c	/^int mp_abs(mp_int * a, mp_int * b)$/;"	f
mp_add	libtommath/bn_mp_add.c	/^int mp_add(mp_int * a, mp_int * b, mp_int * c)$/;"	f
mp_add	src/headers/tomcrypt_math.h	464;"	d
mp_add_d	libtommath/bn_mp_add_d.c	/^int mp_add_d(mp_int * a, mp_digit b, mp_int * c)$/;"	f
mp_add_d	src/headers/tomcrypt_math.h	465;"	d
mp_addmod	libtommath/bn_mp_addmod.c	/^int mp_addmod(mp_int * a, mp_int * b, mp_int * c, mp_int * d)$/;"	f
mp_clamp	libtommath/bn_mp_clamp.c	/^void mp_clamp(mp_int * a)$/;"	f
mp_clear	libtommath/bn_mp_clear.c	/^void mp_clear(mp_int * a)$/;"	f
mp_clear	src/headers/tomcrypt_math.h	440;"	d
mp_clear_multi	libtommath/bn_mp_clear_multi.c	/^void mp_clear_multi(mp_int * mp, ...)$/;"	f
mp_clear_multi	src/headers/tomcrypt_math.h	441;"	d
mp_cmp	libtommath/bn_mp_cmp.c	/^int mp_cmp(mp_int * a, mp_int * b)$/;"	f
mp_cmp	src/headers/tomcrypt_math.h	452;"	d
mp_cmp_d	libtommath/bn_mp_cmp_d.c	/^int mp_cmp_d(mp_int * a, mp_digit b)$/;"	f
mp_cmp_d	src/headers/tomcrypt_math.h	453;"	d
mp_cmp_mag	libtommath/bn_mp_cmp_mag.c	/^int mp_cmp_mag(mp_int * a, mp_int * b)$/;"	f
mp_cnt_lsb	libtommath/bn_mp_cnt_lsb.c	/^int mp_cnt_lsb(mp_int * a)$/;"	f
mp_cnt_lsb	src/headers/tomcrypt_math.h	455;"	d
mp_copy	libtommath/bn_mp_copy.c	/^int mp_copy(mp_int * a, mp_int * b)$/;"	f
mp_copy	src/headers/tomcrypt_math.h	445;"	d
mp_count_bits	libtommath/bn_mp_count_bits.c	/^int mp_count_bits(mp_int * a)$/;"	f
mp_count_bits	src/headers/tomcrypt_math.h	454;"	d
mp_digit	libtommath/tommath.h	/^typedef uint16_t mp_digit;$/;"	t
mp_digit	libtommath/tommath.h	/^typedef uint32_t mp_digit;$/;"	t
mp_div	libtommath/bn_mp_div.c	/^int mp_div(mp_int * a, mp_int * b, mp_int * c, mp_int * d)$/;"	f
mp_div	src/headers/tomcrypt_math.h	471;"	d
mp_div_2	libtommath/bn_mp_div_2.c	/^int mp_div_2(mp_int * a, mp_int * b)$/;"	f
mp_div_2	src/headers/tomcrypt_math.h	472;"	d
mp_div_2d	libtommath/bn_mp_div_2d.c	/^int mp_div_2d(mp_int * a, int b, mp_int * c, mp_int * d)$/;"	f
mp_div_3	libtommath/bn_mp_div_3.c	/^int mp_div_3(mp_int * a, mp_int * c, mp_digit * d)$/;"	f
mp_div_d	libtommath/bn_mp_div_d.c	/^int mp_div_d(mp_int * a, mp_digit b, mp_int * c, mp_digit * d)$/;"	f
mp_dr_is_modulus	libtommath/bn_mp_dr_is_modulus.c	/^int mp_dr_is_modulus(mp_int * a)$/;"	f
mp_dr_reduce	libtommath/bn_mp_dr_reduce.c	/^int mp_dr_reduce(mp_int * x, mp_int * n, mp_digit k)$/;"	f
mp_dr_setup	libtommath/bn_mp_dr_setup.c	/^void mp_dr_setup(mp_int * a, mp_digit * d)$/;"	f
mp_err	libtommath/tommath.h	/^typedef int mp_err;$/;"	t
mp_error_to_string	libtommath/bn_error.c	/^char *mp_error_to_string(int code)$/;"	f
mp_exch	libtommath/bn_mp_exch.c	/^void mp_exch(mp_int * a, mp_int * b)$/;"	f
mp_exch	src/headers/tomcrypt_math.h	492;"	d
mp_expt_d	libtommath/bn_mp_expt_d.c	/^int mp_expt_d(mp_int * a, mp_digit b, mp_int * c)$/;"	f
mp_exptmod	libtommath/bn_mp_exptmod.c	/^int mp_exptmod(mp_int * G, mp_int * X, mp_int * P, mp_int * Y)$/;"	f
mp_exptmod	src/headers/tomcrypt_math.h	487;"	d
mp_exptmod_fast	libtommath/bn_mp_exptmod_fast.c	/^int mp_exptmod_fast(mp_int * G, mp_int * X, mp_int * P, mp_int * Y, int redmode)$/;"	f
mp_gcd	libtommath/bn_mp_gcd.c	/^int mp_gcd(mp_int * a, mp_int * b, mp_int * c)$/;"	f
mp_gcd	src/headers/tomcrypt_math.h	475;"	d
mp_get_digit	src/headers/tomcrypt_math.h	450;"	d
mp_get_digit_count	src/headers/tomcrypt_math.h	451;"	d
mp_get_int	libtommath/bn_mp_get_int.c	/^unsigned long mp_get_int(mp_int * a)$/;"	f
mp_get_int	src/headers/tomcrypt_math.h	449;"	d
mp_grow	libtommath/bn_mp_grow.c	/^int mp_grow(mp_int * a, int size)$/;"	f
mp_init	libtommath/bn_mp_init.c	/^int mp_init(mp_int * a)$/;"	f
mp_init	src/headers/tomcrypt_math.h	438;"	d
mp_init_copy	libtommath/bn_mp_init_copy.c	/^int mp_init_copy(mp_int * a, mp_int * b)$/;"	f
mp_init_copy	src/headers/tomcrypt_math.h	442;"	d
mp_init_multi	libtommath/bn_mp_init_multi.c	/^int mp_init_multi(mp_int * mp, ...)$/;"	f
mp_init_multi	src/headers/tomcrypt_math.h	439;"	d
mp_init_set	libtommath/bn_mp_init_set.c	/^int mp_init_set(mp_int * a, mp_digit b)$/;"	f
mp_init_set_int	libtommath/bn_mp_init_set_int.c	/^int mp_init_set_int(mp_int * a, unsigned long b)$/;"	f
mp_init_size	libtommath/bn_mp_init_size.c	/^int mp_init_size(mp_int * a, int size)$/;"	f
mp_int	libtommath/tommath.h	/^} mp_int;$/;"	t	typeref:struct:__anon23
mp_int_t	libtomcrypt/headers/tomcrypt_math.h	/^typedef mp_int *mp_int_t;$/;"	t
mp_invmod	libtommath/bn_mp_invmod.c	/^int mp_invmod(mp_int * a, mp_int * b, mp_int * c)$/;"	f
mp_invmod	src/headers/tomcrypt_math.h	480;"	d
mp_invmod_slow	libtommath/bn_mp_invmod_slow.c	/^int mp_invmod_slow(mp_int * a, mp_int * b, mp_int * c)$/;"	f
mp_is_square	libtommath/bn_mp_is_square.c	/^int mp_is_square(mp_int * arg, int *ret)$/;"	f
mp_iseven	libtommath/tommath.h	205;"	d
mp_isodd	libtommath/tommath.h	206;"	d
mp_isodd	src/headers/tomcrypt_math.h	491;"	d
mp_iszero	libtommath/tommath.h	204;"	d
mp_iszero	src/headers/tomcrypt_math.h	490;"	d
mp_karatsuba_mul	libtommath/bn_mp_karatsuba_mul.c	/^int mp_karatsuba_mul(mp_int * a, mp_int * b, mp_int * c)$/;"	f
mp_karatsuba_sqr	libtommath/bn_mp_karatsuba_sqr.c	/^int mp_karatsuba_sqr(mp_int * a, mp_int * b)$/;"	f
mp_lcm	libtommath/bn_mp_lcm.c	/^int mp_lcm(mp_int * a, mp_int * b, mp_int * c)$/;"	f
mp_lcm	src/headers/tomcrypt_math.h	476;"	d
mp_lshd	libtommath/bn_mp_lshd.c	/^int mp_lshd(mp_int * a, int b)$/;"	f
mp_mag_size	libtommath/tommath.h	525;"	d
mp_mod	libtommath/bn_mp_mod.c	/^int mp_mod(mp_int * a, mp_int * b, mp_int * c)$/;"	f
mp_mod	src/headers/tomcrypt_math.h	473;"	d
mp_mod_2d	libtommath/bn_mp_mod_2d.c	/^int mp_mod_2d(mp_int * a, int b, mp_int * c)$/;"	f
mp_mod_d	libtommath/bn_mp_mod_d.c	/^int mp_mod_d(mp_int * a, mp_digit b, mp_digit * c)$/;"	f
mp_mod_d	src/headers/tomcrypt_math.h	474;"	d
mp_montgomery_calc_normalization	libtommath/bn_mp_montgomery_calc_normalization.c	/^int mp_montgomery_calc_normalization(mp_int * a, mp_int * b)$/;"	f
mp_montgomery_free	src/headers/tomcrypt_math.h	485;"	d
mp_montgomery_normalization	src/headers/tomcrypt_math.h	483;"	d
mp_montgomery_reduce	libtommath/bn_mp_montgomery_reduce.c	/^int mp_montgomery_reduce(mp_int * x, mp_int * n, mp_digit rho)$/;"	f
mp_montgomery_reduce	src/headers/tomcrypt_math.h	484;"	d
mp_montgomery_setup	libtommath/bn_mp_montgomery_setup.c	/^int mp_montgomery_setup(mp_int * n, mp_digit * rho)$/;"	f
mp_montgomery_setup	src/headers/tomcrypt_math.h	482;"	d
mp_mul	libtommath/bn_mp_mul.c	/^int mp_mul(mp_int * a, mp_int * b, mp_int * c)$/;"	f
mp_mul	src/headers/tomcrypt_math.h	468;"	d
mp_mul_2	libtommath/bn_mp_mul_2.c	/^int mp_mul_2(mp_int * a, mp_int * b)$/;"	f
mp_mul_2d	libtommath/bn_mp_mul_2d.c	/^int mp_mul_2d(mp_int * a, int b, mp_int * c)$/;"	f
mp_mul_d	libtommath/bn_mp_mul_d.c	/^int mp_mul_d(mp_int * a, mp_digit b, mp_int * c)$/;"	f
mp_mul_d	src/headers/tomcrypt_math.h	469;"	d
mp_mulmod	libtommath/bn_mp_mulmod.c	/^int mp_mulmod(mp_int * a, mp_int * b, mp_int * c, mp_int * d)$/;"	f
mp_mulmod	src/headers/tomcrypt_math.h	478;"	d
mp_n_root	libtommath/bn_mp_n_root.c	/^int mp_n_root(mp_int * a, mp_digit b, mp_int * c)$/;"	f
mp_neg	libtommath/bn_mp_neg.c	/^int mp_neg(mp_int * a, mp_int * b)$/;"	f
mp_neg	src/headers/tomcrypt_math.h	444;"	d
mp_prime_is_divisible	libtommath/bn_mp_prime_is_divisible.c	/^int mp_prime_is_divisible(mp_int * a, int *result)$/;"	f
mp_prime_is_prime	libtommath/bn_mp_prime_is_prime.c	/^int mp_prime_is_prime(mp_int * a, int t, int *result)$/;"	f
mp_prime_is_prime	src/headers/tomcrypt_math.h	488;"	d
mp_prime_miller_rabin	libtommath/bn_mp_prime_miller_rabin.c	/^int mp_prime_miller_rabin(mp_int * a, mp_int * b, int *result)$/;"	f
mp_prime_next_prime	libtommath/bn_mp_prime_next_prime.c	/^int mp_prime_next_prime(mp_int * a, int t, int bbs_style)$/;"	f
mp_prime_rabin_miller_trials	libtommath/bn_mp_prime_rabin_miller_trials.c	/^int mp_prime_rabin_miller_trials(int size)$/;"	f
mp_prime_random	libtommath/tommath.h	484;"	d
mp_prime_random_ex	libtommath/bn_mp_prime_random_ex.c	/^int mp_prime_random_ex(mp_int * a, int t, int size, int flags,$/;"	f
mp_rand	libtommath/bn_mp_rand.c	/^int mp_rand(mp_int * a, int digits)$/;"	f
mp_raw_size	libtommath/tommath.h	522;"	d
mp_read_mag	libtommath/tommath.h	524;"	d
mp_read_radix	src/headers/tomcrypt_math.h	458;"	d
mp_read_raw	libtommath/tommath.h	521;"	d
mp_read_signed_bin	libtommath/bn_mp_read_signed_bin.c	/^int mp_read_signed_bin(mp_int * a, const unsigned char *b, int c)$/;"	f
mp_read_unsigned_bin	libtommath/bn_mp_read_unsigned_bin.c	/^int mp_read_unsigned_bin(mp_int * a, const unsigned char *b, int c)$/;"	f
mp_read_unsigned_bin	src/headers/tomcrypt_math.h	462;"	d
mp_reduce	libtommath/bn_mp_reduce.c	/^int mp_reduce(mp_int * x, mp_int * m, mp_int * mu)$/;"	f
mp_reduce_2k	libtommath/bn_mp_reduce_2k.c	/^int mp_reduce_2k(mp_int * a, mp_int * n, mp_digit d)$/;"	f
mp_reduce_2k_l	libtommath/bn_mp_reduce_2k_l.c	/^int mp_reduce_2k_l(mp_int * a, mp_int * n, mp_int * d)$/;"	f
mp_reduce_2k_setup	libtommath/bn_mp_reduce_2k_setup.c	/^int mp_reduce_2k_setup(mp_int * a, mp_digit * d)$/;"	f
mp_reduce_2k_setup_l	libtommath/bn_mp_reduce_2k_setup_l.c	/^int mp_reduce_2k_setup_l(mp_int * a, mp_int * d)$/;"	f
mp_reduce_is_2k	libtommath/bn_mp_reduce_is_2k.c	/^int mp_reduce_is_2k(mp_int * a)$/;"	f
mp_reduce_is_2k_l	libtommath/bn_mp_reduce_is_2k_l.c	/^int mp_reduce_is_2k_l(mp_int * a)$/;"	f
mp_reduce_setup	libtommath/bn_mp_reduce_setup.c	/^int mp_reduce_setup(mp_int * a, mp_int * b)$/;"	f
mp_rshd	libtommath/bn_mp_rshd.c	/^void mp_rshd(mp_int * a, int b)$/;"	f
mp_set	libtommath/bn_mp_set.c	/^void mp_set(mp_int * a, mp_digit b)$/;"	f
mp_set	src/headers/tomcrypt_math.h	447;"	d
mp_set_int	libtommath/bn_mp_set_int.c	/^int mp_set_int(mp_int * a, unsigned long b)$/;"	f
mp_set_int	src/headers/tomcrypt_math.h	448;"	d
mp_shrink	libtommath/bn_mp_shrink.c	/^int mp_shrink(mp_int * a)$/;"	f
mp_signed_bin_size	libtommath/bn_mp_signed_bin_size.c	/^int mp_signed_bin_size(mp_int * a)$/;"	f
mp_sqr	libtommath/bn_mp_sqr.c	/^int mp_sqr(mp_int * a, mp_int * b)$/;"	f
mp_sqr	src/headers/tomcrypt_math.h	470;"	d
mp_sqrmod	libtommath/bn_mp_sqrmod.c	/^int mp_sqrmod(mp_int * a, mp_int * b, mp_int * c)$/;"	f
mp_sqrmod	src/headers/tomcrypt_math.h	479;"	d
mp_sub	libtommath/bn_mp_sub.c	/^int mp_sub(mp_int * a, mp_int * b, mp_int * c)$/;"	f
mp_sub	src/headers/tomcrypt_math.h	466;"	d
mp_sub_d	libtommath/bn_mp_sub_d.c	/^int mp_sub_d(mp_int * a, mp_digit b, mp_int * c)$/;"	f
mp_sub_d	src/headers/tomcrypt_math.h	467;"	d
mp_submod	libtommath/bn_mp_submod.c	/^int mp_submod(mp_int * a, mp_int * b, mp_int * c, mp_int * d)$/;"	f
mp_to_signed_bin	libtommath/bn_mp_to_signed_bin.c	/^int mp_to_signed_bin(mp_int * a, unsigned char *b)$/;"	f
mp_to_signed_bin_n	libtommath/bn_mp_to_signed_bin_n.c	/^int mp_to_signed_bin_n(mp_int * a, unsigned char *b, unsigned long *outlen)$/;"	f
mp_to_unsigned_bin	libtommath/bn_mp_to_unsigned_bin.c	/^int mp_to_unsigned_bin(mp_int * a, unsigned char *b)$/;"	f
mp_to_unsigned_bin	src/headers/tomcrypt_math.h	461;"	d
mp_to_unsigned_bin_n	libtommath/bn_mp_to_unsigned_bin_n.c	/^int mp_to_unsigned_bin_n(mp_int * a, unsigned char *b, unsigned long *outlen)$/;"	f
mp_tobinary	libtommath/tommath.h	528;"	d
mp_todecimal	libtommath/tommath.h	530;"	d
mp_tohex	libtommath/tommath.h	531;"	d
mp_tohex	src/headers/tomcrypt_math.h	494;"	d
mp_tomag	libtommath/tommath.h	526;"	d
mp_tooctal	libtommath/tommath.h	529;"	d
mp_toom_mul	libtommath/bn_mp_toom_mul.c	/^int mp_toom_mul(mp_int * a, mp_int * b, mp_int * c)$/;"	f
mp_toom_sqr	libtommath/bn_mp_toom_sqr.c	/^int mp_toom_sqr(mp_int * a, mp_int * b)$/;"	f
mp_toradix	src/headers/tomcrypt_math.h	459;"	d
mp_toraw	libtommath/tommath.h	523;"	d
mp_unsigned_bin_size	libtommath/bn_mp_unsigned_bin_size.c	/^int mp_unsigned_bin_size(mp_int * a)$/;"	f
mp_unsigned_bin_size	src/headers/tomcrypt_math.h	460;"	d
mp_word	libtommath/tommath.h	/^typedef uint32_t mp_word;$/;"	t
mp_word	libtommath/tommath.h	/^typedef uint64_t mp_word;$/;"	t
mp_zero	libtommath/bn_mp_zero.c	/^void mp_zero(mp_int * a)$/;"	f
mpdiv	src/headers/tomcrypt_math.h	/^   int (*mpdiv)(void *a, void *b, void *c, void *d);$/;"	m	struct:__anon52
mpi_code	src/math/ltm_desc.c	/^    int mpi_code, ltc_code;$/;"	m	struct:__anon29	file:
mpi_to_ltc_codes	src/math/ltm_desc.c	/^} mpi_to_ltc_codes[] = {$/;"	v	typeref:struct:__anon29	file:
mpi_to_ltc_error	src/math/ltm_desc.c	/^static int mpi_to_ltc_error(int err)$/;"	f	file:
msg	libtommath/bn_error.c	/^	char *msg;$/;"	m	struct:__anon25	file:
msgs	libtommath/bn_error.c	/^} msgs[] = {$/;"	v	typeref:struct:__anon25	file:
mu	src/math/fp/ltc_ecc_fp_mulmod.c	/^   void      *mu;             \/* copy of the montgomery constant *\/$/;"	m	struct:__anon27	file:
mul	src/headers/tomcrypt_math.h	/^   int (*mul)(void *a, void *b, void *c);$/;"	m	struct:__anon52
mul	src/math/gmp_desc.c	/^static int mul(void *a, void *b, void *c)$/;"	f	file:
mul	src/math/ltm_desc.c	/^static int mul(void *a, void *b, void *c)$/;"	f	file:
mul	src/math/tfm_desc.c	/^static int mul(void *a, void *b, void *c)$/;"	f	file:
muli	src/headers/tomcrypt_math.h	/^   int (*muli)(void *a, unsigned long b, void *c);$/;"	m	struct:__anon52
muli	src/math/gmp_desc.c	/^static int muli(void *a, unsigned long b, void *c)$/;"	f	file:
muli	src/math/ltm_desc.c	/^static int muli(void *a, unsigned long b, void *c)$/;"	f	file:
muli	src/math/tfm_desc.c	/^static int muli(void *a, unsigned long b, void *c)$/;"	f	file:
mulmod	src/headers/tomcrypt_math.h	/^   int (*mulmod)(void *a, void *b, void *c, void *d);$/;"	m	struct:__anon52
mulmod	src/math/gmp_desc.c	/^static int mulmod(void *a, void *b, void *c, void *d)$/;"	f	file:
mulmod	src/math/ltm_desc.c	/^static int mulmod(void *a, void *b, void *c, void *d)$/;"	f	file:
mulmod	src/math/tfm_desc.c	/^static int mulmod(void *a, void *b, void *c, void *d)$/;"	f	file:
multi2	src/headers/tomcrypt_cipher.h	/^   struct multi2_key   multi2;$/;"	m	union:Symmetric_key	typeref:struct:Symmetric_key::multi2_key
multi2_desc	src/ciphers/multi2.c	/^const struct ltc_cipher_descriptor multi2_desc = {$/;"	v	typeref:struct:ltc_cipher_descriptor
multi2_done	src/ciphers/multi2.c	/^void multi2_done(symmetric_key *skey)$/;"	f
multi2_ecb_decrypt	src/ciphers/multi2.c	/^int multi2_ecb_decrypt(const unsigned char *ct, unsigned char *pt, symmetric_key *skey)$/;"	f
multi2_ecb_encrypt	src/ciphers/multi2.c	/^int multi2_ecb_encrypt(const unsigned char *pt, unsigned char *ct, symmetric_key *skey)$/;"	f
multi2_key	src/headers/tomcrypt_cipher.h	/^struct multi2_key {$/;"	s
multi2_keysize	src/ciphers/multi2.c	/^int multi2_keysize(int *keysize)$/;"	f
multi2_setup	src/ciphers/multi2.c	/^int  multi2_setup(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey)$/;"	f
multi2_test	src/ciphers/multi2.c	/^int multi2_test(void)$/;"	f
name	libtomcrypt/headers/tomcrypt_prng.h	/^	char *name;$/;"	m	struct:ltc_prng_descriptor
name	src/headers/tomcrypt_cipher.h	/^   char *name;$/;"	m	struct:ltc_cipher_descriptor
name	src/headers/tomcrypt_hash.h	/^    char *name;$/;"	m	struct:ltc_hash_descriptor
name	src/headers/tomcrypt_math.h	/^   char *name;$/;"	m	struct:__anon52
name	src/headers/tomcrypt_pk.h	/^   char *name; $/;"	m	struct:__anon39
name	src/headers/tomcrypt_prng.h	/^    char *name;$/;"	m	struct:ltc_prng_descriptor
nbuf	src/headers/tomcrypt_prng.h	/^    int          nbuf,           \/* number of part-word stream bits buffered *\/$/;"	m	struct:sober128_prng
ncr_algorithm_t	libtomcrypt/headers/ncr.h	/^} ncr_algorithm_t;$/;"	t	typeref:enum:__anon4
ncr_crypto_op_t	libtomcrypt/headers/ncr.h	/^} ncr_crypto_op_t;$/;"	t	typeref:enum:__anon10
ncr_derive_t	libtomcrypt/headers/ncr.h	/^} ncr_derive_t;$/;"	t	typeref:enum:__anon6
ncr_key_derive	libtomcrypt/headers/ncr.h	/^struct ncr_key_derive {$/;"	s
ncr_key_export	libtomcrypt/headers/ncr.h	/^struct ncr_key_export {$/;"	s
ncr_key_generate	libtomcrypt/headers/ncr.h	/^struct ncr_key_generate {$/;"	s
ncr_key_generate_pair	libtomcrypt/headers/ncr-int.h	/^static inline int ncr_key_generate_pair(struct ncr_lists *lst,$/;"	f
ncr_key_generate_pair	libtomcrypt/headers/ncr.h	/^struct ncr_key_generate_pair {$/;"	s
ncr_key_get_info	libtomcrypt/headers/ncr.h	/^struct ncr_key_get_info {$/;"	s
ncr_key_import	libtomcrypt/headers/ncr.h	/^struct ncr_key_import {$/;"	s
ncr_key_storage_unwrap	libtomcrypt/headers/ncr.h	/^struct ncr_key_storage_unwrap {$/;"	s
ncr_key_storage_wrap	libtomcrypt/headers/ncr.h	/^struct ncr_key_storage_wrap {$/;"	s
ncr_key_t	libtomcrypt/headers/ncr.h	/^typedef __s32 ncr_key_t;$/;"	t
ncr_key_type_t	libtomcrypt/headers/ncr.h	/^} ncr_key_type_t;$/;"	t	typeref:enum:__anon8
ncr_key_unwrap	libtomcrypt/headers/ncr-int.h	/^static inline int ncr_key_unwrap(struct ncr_lists *lst,$/;"	f
ncr_key_unwrap	libtomcrypt/headers/ncr.h	/^struct ncr_key_unwrap {$/;"	s
ncr_key_wrap	libtomcrypt/headers/ncr-int.h	/^static inline int ncr_key_wrap(struct ncr_lists *lst,$/;"	f
ncr_key_wrap	libtomcrypt/headers/ncr.h	/^struct ncr_key_wrap {$/;"	s
ncr_lists	libtomcrypt/headers/ncr-int.h	/^struct ncr_lists {$/;"	s
ncr_master_key_set	libtomcrypt/headers/ncr.h	/^struct ncr_master_key_set {$/;"	s
ncr_pk_cipher_decrypt	libtomcrypt/headers/ncr-pk.h	72;"	d
ncr_pk_cipher_deinit	libtomcrypt/headers/ncr-pk.h	70;"	d
ncr_pk_cipher_encrypt	libtomcrypt/headers/ncr-pk.h	71;"	d
ncr_pk_cipher_init	libtomcrypt/headers/ncr-pk.h	69;"	d
ncr_pk_cipher_sign	libtomcrypt/headers/ncr-pk.h	73;"	d
ncr_pk_cipher_verify	libtomcrypt/headers/ncr-pk.h	74;"	d
ncr_pk_clear	libtomcrypt/headers/ncr-pk.h	66;"	d
ncr_pk_ctx	libtomcrypt/headers/ncr-pk.h	/^struct ncr_pk_ctx {$/;"	s
ncr_pk_ctx	libtomcrypt/headers/ncr-pk.h	/^struct ncr_pk_ctx {};$/;"	s
ncr_pk_derive	libtomcrypt/headers/ncr-pk.h	75;"	d
ncr_pk_pack	libtomcrypt/headers/ncr-pk.h	67;"	d
ncr_pk_unpack	libtomcrypt/headers/ncr-pk.h	68;"	d
ncr_put	libtomcrypt/headers/ncr.h	/^ncr_put(struct nlattr **nla_p, uint16_t type, const void *value, size_t size)$/;"	f
ncr_put_session_input_data	libtomcrypt/headers/ncr.h	/^ncr_put_session_input_data(struct nlattr **nla_p, uint16_t type,$/;"	f
ncr_put_session_output_buffer	libtomcrypt/headers/ncr.h	/^ncr_put_session_output_buffer(struct nlattr **nla_p, uint16_t type,$/;"	f
ncr_put_string	libtomcrypt/headers/ncr.h	/^ncr_put_string(struct nlattr **nla_p, uint16_t type, const char *value)$/;"	f
ncr_put_u32	libtomcrypt/headers/ncr.h	/^ncr_put_u32(struct nlattr **nla_p, uint16_t type, uint32_t value)$/;"	f
ncr_reserve	libtomcrypt/headers/ncr.h	/^ncr_reserve(struct nlattr **nla_p, uint16_t type, size_t size)$/;"	f
ncr_rsa_type_t	libtomcrypt/headers/ncr.h	/^} ncr_rsa_type_t;$/;"	t	typeref:enum:__anon9
ncr_session_final	libtomcrypt/headers/ncr.h	/^struct ncr_session_final {$/;"	s
ncr_session_init	libtomcrypt/headers/ncr.h	/^struct ncr_session_init {$/;"	s
ncr_session_input_data	libtomcrypt/headers/ncr.h	/^struct ncr_session_input_data {$/;"	s
ncr_session_once	libtomcrypt/headers/ncr.h	/^struct ncr_session_once {$/;"	s
ncr_session_output_buffer	libtomcrypt/headers/ncr.h	/^struct ncr_session_output_buffer {$/;"	s
ncr_session_t	libtomcrypt/headers/ncr.h	/^typedef __s32 ncr_session_t;$/;"	t
ncr_session_update	libtomcrypt/headers/ncr.h	/^struct ncr_session_update {$/;"	s
ncr_wrap_algorithm_t	libtomcrypt/headers/ncr.h	/^} ncr_wrap_algorithm_t;$/;"	t	typeref:enum:__anon5
needs_iv	libtomcrypt/headers/ncr-int.h	/^	unsigned needs_iv:1;$/;"	m	struct:algo_properties_st
neg	src/headers/tomcrypt_math.h	/^   int (*neg)(void *src, void *dst);$/;"	m	struct:__anon52
neg	src/math/gmp_desc.c	/^static int neg(void *a, void *b)$/;"	f	file:
neg	src/math/ltm_desc.c	/^static int neg(void *a, void *b)$/;"	f	file:
neg	src/math/tfm_desc.c	/^static int neg(void *a, void *b)$/;"	f	file:
new_key	libtomcrypt/headers/ncr.h	/^	ncr_key_t new_key;$/;"	m	struct:ncr_key_derive
next	include/ok_type.h	/^    struct ok_qset *next;$/;"	m	struct:ok_qset	typeref:struct:ok_qset::ok_qset
next	libtomcrypt/headers/tomcrypt_pk.h	/^	struct ltc_asn1_list_ *prev, *next, *child, *parent;$/;"	m	struct:ltc_asn1_list_	typeref:struct:ltc_asn1_list_::
next	src/headers/tomcrypt_pk.h	/^   struct ltc_asn1_list_ *prev, *next, *child, *parent;$/;"	m	struct:ltc_asn1_list_	typeref:struct:ltc_asn1_list_::
nltap	src/prngs/sober128.c	/^static ulong32 nltap(struct sober128_prng *c)$/;"	f	file:
noekeon	src/headers/tomcrypt_cipher.h	/^   struct noekeon_key  noekeon;$/;"	m	union:Symmetric_key	typeref:struct:Symmetric_key::noekeon_key
noekeon_desc	src/ciphers/noekeon.c	/^const struct ltc_cipher_descriptor noekeon_desc =$/;"	v	typeref:struct:ltc_cipher_descriptor
noekeon_done	src/ciphers/noekeon.c	/^void noekeon_done(symmetric_key *skey)$/;"	f
noekeon_ecb_decrypt	src/ciphers/noekeon.c	/^int noekeon_ecb_decrypt(const unsigned char *ct, unsigned char *pt, symmetric_key *skey)$/;"	f
noekeon_ecb_encrypt	src/ciphers/noekeon.c	/^int noekeon_ecb_encrypt(const unsigned char *pt, unsigned char *ct, symmetric_key *skey)$/;"	f
noekeon_key	src/headers/tomcrypt_cipher.h	/^struct noekeon_key {$/;"	s
noekeon_keysize	src/ciphers/noekeon.c	/^int noekeon_keysize(int *keysize)$/;"	f
noekeon_setup	src/ciphers/noekeon.c	/^int noekeon_setup(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey)$/;"	f
noekeon_test	src/ciphers/noekeon.c	/^int noekeon_test(void)$/;"	f
oaep_hash	libtomcrypt/headers/ncr-pk.h	/^	const struct algo_properties_st *oaep_hash;$/;"	m	struct:ncr_pk_ctx	typeref:struct:ncr_pk_ctx::algo_properties_st
obj-m	Makefile	/^obj-m := ok_crypto.o$/;"	m
ocb_decrypt	src/encauth/ocb/ocb_decrypt.c	/^int ocb_decrypt(ocb_state *ocb, const unsigned char *ct, unsigned char *pt)$/;"	f
ocb_decrypt_verify_memory	src/encauth/ocb/ocb_decrypt_verify_memory.c	/^int ocb_decrypt_verify_memory(int cipher,$/;"	f
ocb_done_decrypt	src/encauth/ocb/ocb_done_decrypt.c	/^int ocb_done_decrypt(ocb_state *ocb, $/;"	f
ocb_done_encrypt	src/encauth/ocb/ocb_done_encrypt.c	/^int ocb_done_encrypt(ocb_state *ocb, const unsigned char *pt, unsigned long ptlen,$/;"	f
ocb_encrypt	src/encauth/ocb/ocb_encrypt.c	/^int ocb_encrypt(ocb_state *ocb, const unsigned char *pt, unsigned char *ct)$/;"	f
ocb_encrypt_authenticate_memory	src/encauth/ocb/ocb_encrypt_authenticate_memory.c	/^int ocb_encrypt_authenticate_memory(int cipher,$/;"	f
ocb_init	src/encauth/ocb/ocb_init.c	/^int ocb_init(ocb_state *ocb, int cipher, $/;"	f
ocb_ntz	src/encauth/ocb/ocb_ntz.c	/^int ocb_ntz(unsigned long x)$/;"	f
ocb_shift_xor	src/encauth/ocb/ocb_shift_xor.c	/^void ocb_shift_xor(ocb_state *ocb, unsigned char *Z)$/;"	f
ocb_state	src/headers/tomcrypt_mac.h	/^} ocb_state;$/;"	t	typeref:struct:__anon48
ocb_test	src/encauth/ocb/ocb_test.c	/^int ocb_test(void)$/;"	f
ofb_decrypt	src/modes/ofb/ofb_decrypt.c	/^int ofb_decrypt(const unsigned char *ct, unsigned char *pt, unsigned long len, symmetric_OFB *ofb)$/;"	f
ofb_done	src/modes/ofb/ofb_done.c	/^int ofb_done(symmetric_OFB *ofb)$/;"	f
ofb_encrypt	src/modes/ofb/ofb_encrypt.c	/^int ofb_encrypt(const unsigned char *pt, unsigned char *ct, unsigned long len, symmetric_OFB *ofb)$/;"	f
ofb_getiv	src/modes/ofb/ofb_getiv.c	/^int ofb_getiv(unsigned char *IV, unsigned long *len, symmetric_OFB *ofb)$/;"	f
ofb_setiv	src/modes/ofb/ofb_setiv.c	/^int ofb_setiv(const unsigned char *IV, unsigned long len, symmetric_OFB *ofb)$/;"	f
ofb_start	src/modes/ofb/ofb_start.c	/^int ofb_start(int cipher, const unsigned char *IV, const unsigned char *key, $/;"	f
off_dir	libtomcrypt/headers/tomcrypt_pk.h	/^	 off_dir,		\/* timezone offset direction 0 == +, 1 == - *\/$/;"	m	struct:__anon15
off_dir	src/headers/tomcrypt_pk.h	/^            off_dir, \/* timezone offset direction 0 == +, 1 == - *\/$/;"	m	struct:__anon44
off_hh	libtomcrypt/headers/tomcrypt_pk.h	/^	 off_hh,		\/* timezone offset hours *\/$/;"	m	struct:__anon15
off_hh	src/headers/tomcrypt_pk.h	/^            off_hh, \/* timezone offset hours *\/$/;"	m	struct:__anon44
off_mm	libtomcrypt/headers/tomcrypt_pk.h	/^	 off_mm;		\/* timezone offset minutes *\/$/;"	m	struct:__anon15
off_mm	src/headers/tomcrypt_pk.h	/^            off_mm; \/* timezone offset minutes *\/$/;"	m	struct:__anon44
oid	libtomcrypt/headers/ncr-int.h	/^	oid_st oid;$/;"	m	struct:algo_oid_st
oid_st	libtomcrypt/headers/tomcrypt_pk.h	/^} oid_st;$/;"	t	typeref:struct:Oid
oids	libtomcrypt/headers/ncr-int.h	/^	const struct algo_oid_st *oids;$/;"	m	struct:algo_properties_st	typeref:struct:algo_properties_st::algo_oid_st
ok_alloc_data	ok_mem.c	/^void ** ok_alloc_data()$/;"	f
ok_alloc_qsetp	ok_mem.c	/^struct ok_qset * ok_alloc_qsetp(void)$/;"	f
ok_alloc_quantum	ok_mem.c	/^char * ok_alloc_quantum(void)$/;"	f
ok_cleanup	ok_main.c	/^static OK_RESULT ok_cleanup(void)$/;"	f	file:
ok_compat_ioctl	ok_file.c	/^long ok_compat_ioctl(struct file *filp, unsigned int cmd, unsigned long arg)$/;"	f
ok_crypto-objs	Makefile	/^ok_crypto-objs := ok_main.o ok_file.o ok_mem.o ok_test.o$/;"	m
ok_crypto_exit	ok_main.c	/^module_exit(ok_crypto_exit);$/;"	v
ok_crypto_exit	ok_main.c	/^static void ok_crypto_exit(void)$/;"	f	file:
ok_crypto_init	ok_main.c	/^module_init(ok_crypto_init);$/;"	v
ok_crypto_init	ok_main.c	/^static int ok_crypto_init(void)$/;"	f	file:
ok_dev	include/ok_type.h	/^struct ok_dev$/;"	s
ok_devs	ok_main.c	/^struct ok_dev *ok_devs;$/;"	v	typeref:struct:ok_dev
ok_fops	ok_main.c	/^struct file_operations ok_fops = $/;"	v	typeref:struct:file_operations
ok_get_qsetp	ok_mem.c	/^struct ok_qset * ok_get_qsetp(struct ok_dev* devp, int qset_no)$/;"	f
ok_llseek	ok_file.c	/^loff_t ok_llseek(struct file *filp, loff_t loff, int whence)$/;"	f
ok_major	ok_main.c	/^static int ok_major = 0, ok_minor = 0;$/;"	v	file:
ok_minor	ok_main.c	/^static int ok_major = 0, ok_minor = 0;$/;"	v	file:
ok_open	ok_file.c	/^int ok_open(struct inode *inodp, struct file *filp)$/;"	f
ok_qset	include/ok_type.h	/^struct ok_qset$/;"	s
ok_read	ok_file.c	/^ssize_t ok_read(struct file * filp, char __user * userp, size_t count, loff_t *lofp)$/;"	f
ok_release	ok_file.c	/^int ok_release(struct inode *inodp, struct file *filp)$/;"	f
ok_setup_cdev	ok_main.c	/^static OK_RESULT ok_setup_cdev(struct ok_dev *dev, int dev_index)$/;"	f	file:
ok_trim	ok_mem.c	/^OK_RESULT ok_trim(struct ok_dev *ok_devp)$/;"	f
ok_unlocked_ioctl	ok_file.c	/^long ok_unlocked_ioctl(struct file *filp, unsigned int cmd, unsigned long arg)$/;"	f
ok_write	ok_file.c	/^ssize_t ok_write(struct file * filp, const char __user * userp, size_t count, loff_t* lofp)$/;"	f
omac_done	src/mac/omac/omac_done.c	/^int omac_done(omac_state *omac, unsigned char *out, unsigned long *outlen)$/;"	f
omac_file	src/mac/omac/omac_file.c	/^int omac_file(int cipher, $/;"	f
omac_init	src/mac/omac/omac_init.c	/^int omac_init(omac_state *omac, int cipher, const unsigned char *key, unsigned long keylen)$/;"	f
omac_memory	src/headers/tomcrypt_cipher.h	/^   int (*omac_memory)($/;"	m	struct:ltc_cipher_descriptor
omac_memory	src/mac/omac/omac_memory.c	/^int omac_memory(int cipher, $/;"	f
omac_memory_multi	src/mac/omac/omac_memory_multi.c	/^int omac_memory_multi(int cipher, $/;"	f
omac_process	src/mac/omac/omac_process.c	/^int omac_process(omac_state *omac, const unsigned char *in, unsigned long inlen)$/;"	f
omac_state	src/headers/tomcrypt_mac.h	/^} omac_state;$/;"	t	typeref:struct:__anon45
omac_test	src/mac/omac/omac_test.c	/^int omac_test(void)$/;"	f
op	libtomcrypt/headers/ncr.h	/^	__u32 op;		\/* ncr_crypto_op_t *\/$/;"	m	struct:ncr_session_init
op	libtomcrypt/headers/ncr.h	/^	ncr_crypto_op_t op;$/;"	m	struct:ncr_session_once
order	src/headers/tomcrypt_pk.h	/^   char *order;$/;"	m	struct:__anon39
output_hex	ok_test.c	/^void output_hex(u8 *data, u32 len)$/;"	f
output_size	libtomcrypt/headers/ncr.h	/^	__u32 input_size, output_size;$/;"	m	struct:ncr_key_derive
output_size	libtomcrypt/headers/ncr.h	/^	__u32 input_size, output_size;$/;"	m	struct:ncr_key_export
output_size	libtomcrypt/headers/ncr.h	/^	__u32 input_size, output_size;$/;"	m	struct:ncr_key_generate
output_size	libtomcrypt/headers/ncr.h	/^	__u32 input_size, output_size;$/;"	m	struct:ncr_key_generate_pair
output_size	libtomcrypt/headers/ncr.h	/^	__u32 input_size, output_size;$/;"	m	struct:ncr_key_get_info
output_size	libtomcrypt/headers/ncr.h	/^	__u32 input_size, output_size;$/;"	m	struct:ncr_key_import
output_size	libtomcrypt/headers/ncr.h	/^	__u32 input_size, output_size;$/;"	m	struct:ncr_key_storage_unwrap
output_size	libtomcrypt/headers/ncr.h	/^	__u32 input_size, output_size;$/;"	m	struct:ncr_key_storage_wrap
output_size	libtomcrypt/headers/ncr.h	/^	__u32 input_size, output_size;$/;"	m	struct:ncr_key_unwrap
output_size	libtomcrypt/headers/ncr.h	/^	__u32 input_size, output_size;$/;"	m	struct:ncr_key_wrap
output_size	libtomcrypt/headers/ncr.h	/^	__u32 input_size, output_size;$/;"	m	struct:ncr_master_key_set
output_size	libtomcrypt/headers/ncr.h	/^	__u32 input_size, output_size;$/;"	m	struct:ncr_session_final
output_size	libtomcrypt/headers/ncr.h	/^	__u32 input_size, output_size;$/;"	m	struct:ncr_session_init
output_size	libtomcrypt/headers/ncr.h	/^	__u32 input_size, output_size;$/;"	m	struct:ncr_session_once
output_size	libtomcrypt/headers/ncr.h	/^	__u32 input_size, output_size;$/;"	m	struct:ncr_session_update
p	libtomcrypt/headers/ncr-dh.h	/^	mp_int p;$/;"	m	struct:__anon1
p	libtomcrypt/headers/tomcrypt_pk.h	/^	mp_int p;$/;"	m	struct:Rsa_key
p	libtomcrypt/headers/tomcrypt_pk.h	/^	mp_int p;$/;"	m	struct:__anon13
p	src/headers/tomcrypt_pk.h	/^    void *p; $/;"	m	struct:KAT_key
p	src/headers/tomcrypt_pk.h	/^    void *p; $/;"	m	struct:Rsa_key
p	src/headers/tomcrypt_pk.h	/^   void *p;$/;"	m	struct:__anon42
pad	src/headers/tomcrypt_cipher.h	/^                       pad[MAXBLOCKSIZE];$/;"	m	struct:__anon31
pad	src/headers/tomcrypt_cipher.h	/^                       pad[MAXBLOCKSIZE];$/;"	m	struct:__anon34
pad	src/headers/tomcrypt_cipher.h	/^                      pad[16];$/;"	m	struct:__anon35
padlen	src/headers/tomcrypt_cipher.h	/^                       padlen, $/;"	m	struct:__anon34
padlen	src/headers/tomcrypt_cipher.h	/^                       padlen;$/;"	m	struct:__anon31
padlen	src/headers/tomcrypt_cipher.h	/^                       padlen;$/;"	m	struct:__anon32
padlen	src/headers/tomcrypt_cipher.h	/^                       padlen;$/;"	m	struct:__anon36
parent	libtomcrypt/headers/tomcrypt_pk.h	/^	struct ltc_asn1_list_ *prev, *next, *child, *parent;$/;"	m	struct:ltc_asn1_list_	typeref:struct:ltc_asn1_list_::
parent	src/headers/tomcrypt_pk.h	/^   struct ltc_asn1_list_ *prev, *next, *child, *parent;$/;"	m	struct:ltc_asn1_list_	typeref:struct:ltc_asn1_list_::
pass	src/hashes/tiger.c	/^static void pass(ulong64 *a, ulong64 *b, ulong64 *c, ulong64 *x, int mul)$/;"	f	file:
pc1	src/ciphers/des.c	/^static const unsigned char pc1[56] = {$/;"	v	file:
pc2	src/ciphers/des.c	/^static const unsigned char pc2[48] = {$/;"	v	file:
pelican_done	src/mac/pelican/pelican.c	/^int pelican_done(pelican_state *pelmac, unsigned char *out)$/;"	f
pelican_init	src/mac/pelican/pelican.c	/^int pelican_init(pelican_state *pelmac, const unsigned char *key, unsigned long keylen)$/;"	f
pelican_memory	src/mac/pelican/pelican_memory.c	/^int pelican_memory(const unsigned char *key, unsigned long keylen,$/;"	f
pelican_process	src/mac/pelican/pelican.c	/^int pelican_process(pelican_state *pelmac, const unsigned char *in, unsigned long inlen)$/;"	f
pelican_state	src/headers/tomcrypt_mac.h	/^typedef struct pelican_state$/;"	s
pelican_state	src/headers/tomcrypt_mac.h	/^} pelican_state;$/;"	t	typeref:struct:pelican_state
pelican_test	src/mac/pelican/pelican_test.c	/^int pelican_test(void)$/;"	f
permute	src/ciphers/rc2.c	/^static const unsigned char permute[256] = {$/;"	v	file:
pexport	libtomcrypt/headers/tomcrypt_prng.h	/^	int (*pexport) (unsigned char *out, unsigned long *outlen,$/;"	m	struct:ltc_prng_descriptor
pexport	src/headers/tomcrypt_prng.h	/^    int (*pexport)(unsigned char *out, unsigned long *outlen, prng_state *prng);$/;"	m	struct:ltc_prng_descriptor
pi1	src/ciphers/multi2.c	/^static void pi1(ulong32 *p)$/;"	f	file:
pi2	src/ciphers/multi2.c	/^static void pi2(ulong32 *p, ulong32 *k)$/;"	f	file:
pi3	src/ciphers/multi2.c	/^static void pi3(ulong32 *p, ulong32 *k)$/;"	f	file:
pi4	src/ciphers/multi2.c	/^static void pi4(ulong32 *p, ulong32 *k)$/;"	f	file:
pid	libtomcrypt/headers/ncr-int.h	/^	pid_t pid;$/;"	m	struct:key_item_st
pimport	libtomcrypt/headers/tomcrypt_prng.h	/^	int (*pimport) (const unsigned char *in, unsigned long inlen,$/;"	m	struct:ltc_prng_descriptor
pimport	src/headers/tomcrypt_prng.h	/^    int (*pimport)(const unsigned char *in, unsigned long inlen, prng_state *prng);$/;"	m	struct:ltc_prng_descriptor
pk	libtomcrypt/headers/ncr-int.h	/^		} pk;$/;"	m	union:key_item_st::__anon17	typeref:union:key_item_st::__anon17::__anon19
pk_get_oid	libtomcrypt/misc/pk_get_oid.c	/^int pk_get_oid(const struct algo_properties_st *pk, oid_st * st)$/;"	f
pkcs_1_i2osp	libtomcrypt/pk/pkcs1/pkcs_1_i2osp.c	/^int pkcs_1_i2osp(void *n, unsigned long modulus_len, unsigned char *out)$/;"	f
pkcs_1_i2osp	src/pk/pkcs1/pkcs_1_i2osp.c	/^int pkcs_1_i2osp(void *n, unsigned long modulus_len, unsigned char *out)$/;"	f
pkcs_1_mgf1	libtomcrypt/pk/pkcs1/pkcs_1_mgf1.c	/^int pkcs_1_mgf1(const struct algo_properties_st *hash,$/;"	f
pkcs_1_mgf1	src/pk/pkcs1/pkcs_1_mgf1.c	/^int pkcs_1_mgf1(int                  hash_idx,$/;"	f
pkcs_1_oaep_decode	libtomcrypt/pk/pkcs1/pkcs_1_oaep_decode.c	/^int pkcs_1_oaep_decode(const unsigned char *msg, unsigned long msglen,$/;"	f
pkcs_1_oaep_decode	src/pk/pkcs1/pkcs_1_oaep_decode.c	/^int pkcs_1_oaep_decode(const unsigned char *msg,    unsigned long msglen,$/;"	f
pkcs_1_oaep_encode	libtomcrypt/pk/pkcs1/pkcs_1_oaep_encode.c	/^int pkcs_1_oaep_encode(const unsigned char *msg, unsigned long msglen,$/;"	f
pkcs_1_oaep_encode	src/pk/pkcs1/pkcs_1_oaep_encode.c	/^int pkcs_1_oaep_encode(const unsigned char *msg,    unsigned long msglen,$/;"	f
pkcs_1_os2ip	libtomcrypt/pk/pkcs1/pkcs_1_os2ip.c	/^int pkcs_1_os2ip(void *n, unsigned char *in, unsigned long inlen)$/;"	f
pkcs_1_os2ip	src/pk/pkcs1/pkcs_1_os2ip.c	/^int pkcs_1_os2ip(void *n, unsigned char *in, unsigned long inlen)$/;"	f
pkcs_1_pss_decode	libtomcrypt/pk/pkcs1/pkcs_1_pss_decode.c	/^int pkcs_1_pss_decode(const unsigned char *msghash, unsigned long msghashlen,$/;"	f
pkcs_1_pss_decode	src/pk/pkcs1/pkcs_1_pss_decode.c	/^int pkcs_1_pss_decode(const unsigned char *msghash, unsigned long msghashlen,$/;"	f
pkcs_1_pss_encode	libtomcrypt/pk/pkcs1/pkcs_1_pss_encode.c	/^int pkcs_1_pss_encode(const unsigned char *msghash, unsigned long msghashlen,$/;"	f
pkcs_1_pss_encode	src/pk/pkcs1/pkcs_1_pss_encode.c	/^int pkcs_1_pss_encode(const unsigned char *msghash, unsigned long msghashlen,$/;"	f
pkcs_1_v1_5_decode	libtomcrypt/pk/pkcs1/pkcs_1_v1_5_decode.c	/^int pkcs_1_v1_5_decode(const unsigned char *msg,$/;"	f
pkcs_1_v1_5_decode	src/pk/pkcs1/pkcs_1_v1_5_decode.c	/^int pkcs_1_v1_5_decode(const unsigned char *msg, $/;"	f
pkcs_1_v1_5_encode	libtomcrypt/pk/pkcs1/pkcs_1_v1_5_encode.c	/^int pkcs_1_v1_5_encode(const unsigned char *msg,$/;"	f
pkcs_1_v1_5_encode	src/pk/pkcs1/pkcs_1_v1_5_encode.c	/^int pkcs_1_v1_5_encode(const unsigned char *msg, $/;"	f
pkcs_5_alg1	src/misc/pkcs5/pkcs_5_1.c	/^int pkcs_5_alg1(const unsigned char *password, unsigned long password_len, $/;"	f
pkcs_5_alg2	src/misc/pkcs5/pkcs_5_2.c	/^int pkcs_5_alg2(const unsigned char *password, unsigned long password_len, $/;"	f
pmac_done	src/mac/pmac/pmac_done.c	/^int pmac_done(pmac_state *state, unsigned char *out, unsigned long *outlen)$/;"	f
pmac_file	src/mac/pmac/pmac_file.c	/^int pmac_file(int cipher, $/;"	f
pmac_init	src/mac/pmac/pmac_init.c	/^int pmac_init(pmac_state *pmac, int cipher, const unsigned char *key, unsigned long keylen)$/;"	f
pmac_memory	src/mac/pmac/pmac_memory.c	/^int pmac_memory(int cipher, $/;"	f
pmac_memory_multi	src/mac/pmac/pmac_memory_multi.c	/^int pmac_memory_multi(int cipher, $/;"	f
pmac_ntz	src/mac/pmac/pmac_ntz.c	/^int pmac_ntz(unsigned long x)$/;"	f
pmac_process	src/mac/pmac/pmac_process.c	/^int pmac_process(pmac_state *pmac, const unsigned char *in, unsigned long inlen)$/;"	f
pmac_shift_xor	src/mac/pmac/pmac_shift_xor.c	/^void pmac_shift_xor(pmac_state *pmac)$/;"	f
pmac_state	src/headers/tomcrypt_mac.h	/^} pmac_state;$/;"	t	typeref:struct:__anon46
pmac_test	src/mac/pmac/pmac_test.c	/^int pmac_test(void)$/;"	f
poly	src/encauth/gcm/gcm_gf_mult.c	/^static const unsigned char poly[] = { 0x00, 0xE1 };$/;"	v	file:
poly_div	src/encauth/ocb/ocb_init.c	/^    unsigned char poly_div[MAXBLOCKSIZE], $/;"	m	struct:__anon54	file:
poly_div	src/mac/pmac/pmac_init.c	/^    unsigned char poly_div[MAXBLOCKSIZE], $/;"	m	struct:__anon55	file:
poly_mul	src/encauth/ocb/ocb_init.c	/^                  poly_mul[MAXBLOCKSIZE];$/;"	m	struct:__anon54	file:
poly_mul	src/mac/pmac/pmac_init.c	/^                  poly_mul[MAXBLOCKSIZE];$/;"	m	struct:__anon55	file:
polys	src/encauth/ocb/ocb_init.c	/^} polys[] = {$/;"	v	typeref:struct:__anon54	file:
polys	src/mac/pmac/pmac_init.c	/^} polys[] = {$/;"	v	typeref:struct:__anon55	file:
pool	src/headers/tomcrypt_prng.h	/^    hash_state pool[LTC_FORTUNA_POOLS];     \/* the  pools *\/$/;"	m	struct:fortuna_prng
pool	src/headers/tomcrypt_prng.h	/^    unsigned char         pool[MAXBLOCKSIZE];$/;"	m	struct:yarrow_prng
pool0_len	src/headers/tomcrypt_prng.h	/^                  pool0_len,  \/* length of 0'th pool *\/$/;"	m	struct:fortuna_prng
pool_idx	src/headers/tomcrypt_prng.h	/^    unsigned long pool_idx,   \/* current pool we will add to *\/$/;"	m	struct:fortuna_prng
pq	src/headers/tomcrypt_pk.h	/^    void *pq;$/;"	m	struct:KAT_key
prev	libtomcrypt/headers/tomcrypt_pk.h	/^	struct ltc_asn1_list_ *prev, *next, *child, *parent;$/;"	m	struct:ltc_asn1_list_	typeref:struct:ltc_asn1_list_::ltc_asn1_list_
prev	src/headers/tomcrypt_mac.h	/^                   prev[MAXBLOCKSIZE],$/;"	m	struct:__anon45
prev	src/headers/tomcrypt_pk.h	/^   struct ltc_asn1_list_ *prev, *next, *child, *parent;$/;"	m	struct:ltc_asn1_list_	typeref:struct:ltc_asn1_list_::ltc_asn1_list_
prime	src/headers/tomcrypt_pk.h	/^   char *prime;$/;"	m	struct:__anon39
printable_table	libtomcrypt/pk/asn1/der/printable_string/der_length_printable_string.c	/^} printable_table[] = {$/;"	v	typeref:struct:__anon22	file:
printable_table	src/pk/asn1/der/printable_string/der_length_printable_string.c	/^} printable_table[] = {$/;"	v	typeref:struct:__anon57	file:
private_key	libtomcrypt/headers/ncr.h	/^	ncr_key_t private_key;$/;"	m	struct:ncr_key_generate_pair
prng_descriptor	src/misc/crypt/crypt_prng_descriptor.c	/^struct ltc_prng_descriptor prng_descriptor[TAB_SIZE] = {$/;"	v	typeref:struct:ltc_prng_descriptor
prng_is_valid	src/misc/crypt/crypt_prng_is_valid.c	/^int prng_is_valid(int idx)$/;"	f
prng_state	libtomcrypt/headers/tomcrypt_prng.h	/^} prng_state;$/;"	t	typeref:union:Prng_state
prng_state	src/headers/tomcrypt_prng.h	/^} prng_state;$/;"	t	typeref:union:Prng_state
process	src/headers/tomcrypt_hash.h	/^    int (*process)(hash_state *hash, const unsigned char *in, unsigned long inlen);$/;"	m	struct:ltc_hash_descriptor
pttotlen	src/headers/tomcrypt_mac.h	/^                       pttotlen;     \/* 64-bit counter for the PT *\/$/;"	m	struct:__anon49
pubkey	src/headers/tomcrypt_pk.h	/^    ecc_point pubkey;$/;"	m	struct:__anon41
public_key	libtomcrypt/headers/ncr.h	/^	ncr_key_t public_key;$/;"	m	struct:ncr_key_generate_pair
q	libtomcrypt/headers/tomcrypt_pk.h	/^	mp_int q;$/;"	m	struct:Rsa_key
q	libtomcrypt/headers/tomcrypt_pk.h	/^	mp_int q;$/;"	m	struct:__anon13
q	src/headers/tomcrypt_pk.h	/^    void *q; $/;"	m	struct:KAT_key
q	src/headers/tomcrypt_pk.h	/^    void *q; $/;"	m	struct:Rsa_key
q	src/headers/tomcrypt_pk.h	/^   void *q;$/;"	m	struct:__anon42
qP	libtomcrypt/headers/tomcrypt_pk.h	/^	mp_int qP;$/;"	m	struct:Rsa_key
qP	src/headers/tomcrypt_pk.h	/^    void *qP; $/;"	m	struct:KAT_key
qP	src/headers/tomcrypt_pk.h	/^    void *qP; $/;"	m	struct:Rsa_key
qbox	src/ciphers/twofish/twofish.c	/^static const unsigned char qbox[2][4][16] = {$/;"	v	file:
qord	libtomcrypt/headers/tomcrypt_pk.h	/^	int qord;$/;"	m	struct:__anon13
qord	src/ciphers/twofish/twofish.c	/^static const unsigned char qord[4][5] = {$/;"	v	file:
qord	src/headers/tomcrypt_pk.h	/^   int qord;$/;"	m	struct:__anon42
qset	include/ok_type.h	/^    int qset;$/;"	m	struct:ok_dev
qsort_helper	libtomcrypt/pk/asn1/der/set/der_encode_set.c	/^static int qsort_helper(const void *a, const void *b)$/;"	f	file:
qsort_helper	libtomcrypt/pk/asn1/der/set/der_encode_setof.c	/^static int qsort_helper(const void *a, const void *b)$/;"	f	file:
qsort_helper	src/pk/asn1/der/set/der_encode_set.c	/^static int qsort_helper(const void *a, const void *b)$/;"	f	file:
qsort_helper	src/pk/asn1/der/set/der_encode_setof.c	/^static int qsort_helper(const void *a, const void *b)$/;"	f	file:
quantum	include/ok_type.h	/^    int quantum;$/;"	m	struct:ok_dev
rand	libtommath/tommath.h	/^inline static int rand(void)$/;"	f
rand_prime	libtomcrypt/math/rand_prime.c	/^int rand_prime(mp_int * N, long len)$/;"	f
rand_prime	src/math/rand_prime.c	/^int rand_prime(void *N, long len, prng_state *prng, int wprng)$/;"	f
rc	src/ciphers/anubis.c	/^static const ulong32 rc[] = {$/;"	v	file:
rc2	src/headers/tomcrypt_cipher.h	/^   struct rc2_key rc2;$/;"	m	union:Symmetric_key	typeref:struct:Symmetric_key::rc2_key
rc2_desc	src/ciphers/rc2.c	/^const struct ltc_cipher_descriptor rc2_desc = {$/;"	v	typeref:struct:ltc_cipher_descriptor
rc2_done	src/ciphers/rc2.c	/^void rc2_done(symmetric_key *skey)$/;"	f
rc2_ecb_decrypt	src/ciphers/rc2.c	/^int rc2_ecb_decrypt( const unsigned char *ct,$/;"	f
rc2_ecb_encrypt	src/ciphers/rc2.c	/^int rc2_ecb_encrypt( const unsigned char *pt,$/;"	f
rc2_key	src/headers/tomcrypt_cipher.h	/^struct rc2_key { unsigned xkey[64]; };$/;"	s
rc2_keysize	src/ciphers/rc2.c	/^int rc2_keysize(int *keysize)$/;"	f
rc2_setup	src/ciphers/rc2.c	/^int rc2_setup(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey)$/;"	f
rc2_test	src/ciphers/rc2.c	/^int rc2_test(void)$/;"	f
rc4	src/headers/tomcrypt_prng.h	/^    struct rc4_prng       rc4;$/;"	m	union:Prng_state	typeref:struct:Prng_state::rc4_prng
rc4_add_entropy	src/prngs/rc4.c	/^int rc4_add_entropy(const unsigned char *in, unsigned long inlen, prng_state *prng)$/;"	f
rc4_desc	src/prngs/rc4.c	/^const struct ltc_prng_descriptor rc4_desc = $/;"	v	typeref:struct:ltc_prng_descriptor
rc4_done	src/prngs/rc4.c	/^int rc4_done(prng_state *prng)$/;"	f
rc4_export	src/prngs/rc4.c	/^int rc4_export(unsigned char *out, unsigned long *outlen, prng_state *prng)$/;"	f
rc4_import	src/prngs/rc4.c	/^int rc4_import(const unsigned char *in, unsigned long inlen, prng_state *prng)$/;"	f
rc4_prng	src/headers/tomcrypt_prng.h	/^struct rc4_prng {$/;"	s
rc4_read	src/prngs/rc4.c	/^unsigned long rc4_read(unsigned char *out, unsigned long outlen, prng_state *prng)$/;"	f
rc4_ready	src/prngs/rc4.c	/^int rc4_ready(prng_state *prng)$/;"	f
rc4_start	src/prngs/rc4.c	/^int rc4_start(prng_state *prng)$/;"	f
rc4_test	src/prngs/rc4.c	/^int rc4_test(void)$/;"	f
rc5	src/headers/tomcrypt_cipher.h	/^   struct rc5_key      rc5;$/;"	m	union:Symmetric_key	typeref:struct:Symmetric_key::rc5_key
rc5_desc	src/ciphers/rc5.c	/^const struct ltc_cipher_descriptor rc5_desc =$/;"	v	typeref:struct:ltc_cipher_descriptor
rc5_done	src/ciphers/rc5.c	/^void rc5_done(symmetric_key *skey)$/;"	f
rc5_ecb_decrypt	src/ciphers/rc5.c	/^int rc5_ecb_decrypt(const unsigned char *ct, unsigned char *pt, symmetric_key *skey)$/;"	f
rc5_ecb_encrypt	src/ciphers/rc5.c	/^int rc5_ecb_encrypt(const unsigned char *pt, unsigned char *ct, symmetric_key *skey)$/;"	f
rc5_key	src/headers/tomcrypt_cipher.h	/^struct rc5_key {$/;"	s
rc5_keysize	src/ciphers/rc5.c	/^int rc5_keysize(int *keysize)$/;"	f
rc5_setup	src/ciphers/rc5.c	/^int rc5_setup(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey)$/;"	f
rc5_test	src/ciphers/rc5.c	/^int rc5_test(void)$/;"	f
rc6	src/headers/tomcrypt_cipher.h	/^   struct rc6_key      rc6;$/;"	m	union:Symmetric_key	typeref:struct:Symmetric_key::rc6_key
rc6_desc	src/ciphers/rc6.c	/^const struct ltc_cipher_descriptor rc6_desc =$/;"	v	typeref:struct:ltc_cipher_descriptor
rc6_done	src/ciphers/rc6.c	/^void rc6_done(symmetric_key *skey)$/;"	f
rc6_ecb_decrypt	src/ciphers/rc6.c	/^int rc6_ecb_decrypt(const unsigned char *ct, unsigned char *pt, symmetric_key *skey)$/;"	f
rc6_ecb_encrypt	src/ciphers/rc6.c	/^int rc6_ecb_encrypt(const unsigned char *pt, unsigned char *ct, symmetric_key *skey)$/;"	f
rc6_key	src/headers/tomcrypt_cipher.h	/^struct rc6_key {$/;"	s
rc6_keysize	src/ciphers/rc6.c	/^int rc6_keysize(int *keysize)$/;"	f
rc6_setup	src/ciphers/rc6.c	/^int rc6_setup(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey)$/;"	f
rc6_test	src/ciphers/rc6.c	/^int rc6_test(void)$/;"	f
rcon	src/ciphers/aes/aes_tab.c	/^static const ulong32 rcon[] = {$/;"	v	file:
read	libtomcrypt/headers/tomcrypt_prng.h	/^	unsigned long (*read) (unsigned char *out, unsigned long outlen,$/;"	m	struct:ltc_prng_descriptor
read	src/headers/tomcrypt_prng.h	/^    unsigned long (*read)(unsigned char *out, unsigned long outlen, prng_state *prng);$/;"	m	struct:ltc_prng_descriptor
read_radix	src/headers/tomcrypt_math.h	/^   int (*read_radix)(void *a, const char *str, int radix);$/;"	m	struct:__anon52
read_radix	src/math/gmp_desc.c	/^static int read_radix(void *a, const char *b, int radix)$/;"	f	file:
read_radix	src/math/ltm_desc.c	/^static int read_radix(void *a, const char *b, int radix)$/;"	f	file:
read_radix	src/math/tfm_desc.c	/^static int read_radix(void *a, const char *b, int radix)$/;"	f	file:
ready	libtomcrypt/headers/tomcrypt_prng.h	/^	int (*ready) (prng_state * prng);$/;"	m	struct:ltc_prng_descriptor
ready	src/headers/tomcrypt_prng.h	/^    int (*ready)(prng_state *prng);$/;"	m	struct:ltc_prng_descriptor
refcnt	libtomcrypt/headers/ncr-int.h	/^	atomic_t refcnt;$/;"	m	struct:key_item_st
register_cipher	src/misc/crypt/crypt_register_cipher.c	/^int register_cipher(const struct ltc_cipher_descriptor *cipher)$/;"	f
register_hash	src/misc/crypt/crypt_register_hash.c	/^int register_hash(const struct ltc_hash_descriptor *hash)$/;"	f
register_prng	src/misc/crypt/crypt_register_prng.c	/^int register_prng(const struct ltc_prng_descriptor *prng)$/;"	f
rem_105	libtommath/bn_mp_is_square.c	/^static const char rem_105[105] = {$/;"	v	file:
rem_128	libtommath/bn_mp_is_square.c	/^static const char rem_128[128] = {$/;"	v	file:
request	libtomcrypt/headers/cryptodev_int.h	/^		struct ablkcipher_request *request;$/;"	m	struct:cipher_data::__anon2	typeref:struct:cipher_data::__anon2::ablkcipher_request
request	libtomcrypt/headers/cryptodev_int.h	/^		struct ahash_request *request;$/;"	m	struct:hash_data::__anon3	typeref:struct:hash_data::__anon3::ahash_request
reset_cnt	src/headers/tomcrypt_prng.h	/^    ulong64       reset_cnt;  \/* number of times we have reset *\/$/;"	m	struct:fortuna_prng
result	libtomcrypt/headers/cryptodev_int.h	/^		struct cryptodev_result *result;$/;"	m	struct:cipher_data::__anon2	typeref:struct:cipher_data::__anon2::cryptodev_result
result	libtomcrypt/headers/cryptodev_int.h	/^		struct cryptodev_result *result;$/;"	m	struct:hash_data::__anon3	typeref:struct:hash_data::__anon3::cryptodev_result
result_size_ptr	libtomcrypt/headers/ncr-int.h	/^	compat_uptr_t result_size_ptr;$/;"	m	struct:compat_ncr_session_output_buffer
result_size_ptr	libtomcrypt/headers/ncr.h	/^	__kernel_size_t __user *result_size_ptr;$/;"	m	struct:ncr_session_output_buffer
rijndael	src/headers/tomcrypt_cipher.h	/^   struct rijndael_key rijndael;$/;"	m	union:Symmetric_key	typeref:struct:Symmetric_key::rijndael_key
rijndael_desc	src/ciphers/aes/aes.c	/^const struct ltc_cipher_descriptor rijndael_desc =$/;"	v	typeref:struct:ltc_cipher_descriptor
rijndael_enc_desc	src/ciphers/aes/aes.c	/^const struct ltc_cipher_descriptor rijndael_enc_desc =$/;"	v	typeref:struct:ltc_cipher_descriptor
rijndael_key	src/headers/tomcrypt_cipher.h	/^struct rijndael_key {$/;"	s
rmd128	src/headers/tomcrypt_hash.h	/^    struct rmd128_state rmd128;$/;"	m	union:Hash_state	typeref:struct:Hash_state::rmd128_state
rmd128_compress	src/hashes/rmd128.c	/^static int rmd128_compress(hash_state *md, unsigned char *buf)$/;"	f	file:
rmd128_desc	src/hashes/rmd128.c	/^const struct ltc_hash_descriptor rmd128_desc =$/;"	v	typeref:struct:ltc_hash_descriptor
rmd128_done	src/hashes/rmd128.c	/^int rmd128_done(hash_state * md, unsigned char *out)$/;"	f
rmd128_init	src/hashes/rmd128.c	/^int rmd128_init(hash_state * md)$/;"	f
rmd128_state	src/headers/tomcrypt_hash.h	/^struct rmd128_state {$/;"	s
rmd128_test	src/hashes/rmd128.c	/^int rmd128_test(void)$/;"	f
rmd160	src/headers/tomcrypt_hash.h	/^    struct rmd160_state rmd160;$/;"	m	union:Hash_state	typeref:struct:Hash_state::rmd160_state
rmd160_compress	src/hashes/rmd160.c	/^static int rmd160_compress(hash_state *md, unsigned char *buf)$/;"	f	file:
rmd160_desc	src/hashes/rmd160.c	/^const struct ltc_hash_descriptor rmd160_desc =$/;"	v	typeref:struct:ltc_hash_descriptor
rmd160_done	src/hashes/rmd160.c	/^int rmd160_done(hash_state * md, unsigned char *out)$/;"	f
rmd160_init	src/hashes/rmd160.c	/^int rmd160_init(hash_state * md)$/;"	f
rmd160_state	src/headers/tomcrypt_hash.h	/^struct rmd160_state {$/;"	s
rmd160_test	src/hashes/rmd160.c	/^int rmd160_test(void)$/;"	f
rmd256	src/headers/tomcrypt_hash.h	/^    struct rmd256_state rmd256;$/;"	m	union:Hash_state	typeref:struct:Hash_state::rmd256_state
rmd256_compress	src/hashes/rmd256.c	/^static int rmd256_compress(hash_state *md, unsigned char *buf)$/;"	f	file:
rmd256_desc	src/hashes/rmd256.c	/^const struct ltc_hash_descriptor rmd256_desc =$/;"	v	typeref:struct:ltc_hash_descriptor
rmd256_done	src/hashes/rmd256.c	/^int rmd256_done(hash_state * md, unsigned char *out)$/;"	f
rmd256_init	src/hashes/rmd256.c	/^int rmd256_init(hash_state * md)$/;"	f
rmd256_state	src/headers/tomcrypt_hash.h	/^struct rmd256_state {$/;"	s
rmd256_test	src/hashes/rmd256.c	/^int rmd256_test(void)$/;"	f
rmd320	src/headers/tomcrypt_hash.h	/^    struct rmd320_state rmd320;$/;"	m	union:Hash_state	typeref:struct:Hash_state::rmd320_state
rmd320_compress	src/hashes/rmd320.c	/^static int rmd320_compress(hash_state *md, unsigned char *buf)$/;"	f	file:
rmd320_desc	src/hashes/rmd320.c	/^const struct ltc_hash_descriptor rmd320_desc =$/;"	v	typeref:struct:ltc_hash_descriptor
rmd320_done	src/hashes/rmd320.c	/^int rmd320_done(hash_state * md, unsigned char *out)$/;"	f
rmd320_init	src/hashes/rmd320.c	/^int rmd320_init(hash_state * md)$/;"	f
rmd320_state	src/headers/tomcrypt_hash.h	/^struct rmd320_state {$/;"	s
rmd320_test	src/hashes/rmd320.c	/^int rmd320_test(void)$/;"	f
rng_ansic	src/prngs/rng_get_bytes.c	/^static unsigned long rng_ansic(unsigned char *buf, unsigned long len, $/;"	f	file:
rng_get_bytes	src/prngs/rng_get_bytes.c	/^unsigned long rng_get_bytes(unsigned char *out, unsigned long outlen, $/;"	f
rng_make_prng	src/prngs/rng_make_prng.c	/^int rng_make_prng(int bits, int wprng, prng_state *prng, $/;"	f
rng_nix	src/prngs/rng_get_bytes.c	/^static unsigned long rng_nix(unsigned char *buf, unsigned long len, $/;"	f	file:
rng_win32	src/prngs/rng_get_bytes.c	/^static unsigned long rng_win32(unsigned char *buf, unsigned long len, $/;"	f	file:
roundKeyDec	src/headers/tomcrypt_cipher.h	/^   ulong32 roundKeyDec[18 + 1][4]; $/;"	m	struct:anubis_key
roundKeyDec	src/headers/tomcrypt_cipher.h	/^   ulong64 roundKeyDec[8 + 1]; $/;"	m	struct:khazad_key
roundKeyEnc	src/headers/tomcrypt_cipher.h	/^   ulong32 roundKeyEnc[18 + 1][4]; $/;"	m	struct:anubis_key
roundKeyEnc	src/headers/tomcrypt_cipher.h	/^   ulong64 roundKeyEnc[8 + 1]; $/;"	m	struct:khazad_key
rounds	src/ciphers/kseed.c	/^static void rounds(ulong32 *P, ulong32 *K)$/;"	f	file:
rounds	src/headers/tomcrypt_cipher.h	/^   int rounds;$/;"	m	struct:rc5_key
rounds	src/headers/tomcrypt_cipher.h	/^   long rounds;$/;"	m	struct:saferp_key
rs_mult	src/ciphers/twofish/twofish.c	/^static void rs_mult(const unsigned char *in, unsigned char *out)$/;"	f	file:
rs_tab0	src/ciphers/twofish/twofish_tab.c	/^static const ulong32 rs_tab0[256] = {$/;"	v	file:
rs_tab1	src/ciphers/twofish/twofish_tab.c	/^static const ulong32 rs_tab1[256] = {$/;"	v	file:
rs_tab2	src/ciphers/twofish/twofish_tab.c	/^static const ulong32 rs_tab2[256] = {$/;"	v	file:
rs_tab3	src/ciphers/twofish/twofish_tab.c	/^static const ulong32 rs_tab3[256] = {$/;"	v	file:
rs_tab4	src/ciphers/twofish/twofish_tab.c	/^static const ulong32 rs_tab4[256] = {$/;"	v	file:
rs_tab5	src/ciphers/twofish/twofish_tab.c	/^static const ulong32 rs_tab5[256] = {$/;"	v	file:
rs_tab6	src/ciphers/twofish/twofish_tab.c	/^static const ulong32 rs_tab6[256] = {$/;"	v	file:
rs_tab7	src/ciphers/twofish/twofish_tab.c	/^static const ulong32 rs_tab7[256] = {$/;"	v	file:
rsa	libtomcrypt/headers/ncr-int.h	/^			rsa_key rsa;$/;"	m	union:key_item_st::__anon17::__anon19
rsa_decrypt_key	libtomcrypt/headers/tomcrypt_pk.h	65;"	d
rsa_decrypt_key	src/headers/tomcrypt_pk.h	51;"	d
rsa_decrypt_key_ex	libtomcrypt/pk/rsa/rsa_decrypt_key.c	/^int rsa_decrypt_key_ex(const unsigned char *in, unsigned long inlen,$/;"	f
rsa_decrypt_key_ex	src/pk/rsa/rsa_decrypt_key.c	/^int rsa_decrypt_key_ex(const unsigned char *in,       unsigned long  inlen,$/;"	f
rsa_encrypt_key	libtomcrypt/headers/tomcrypt_pk.h	62;"	d
rsa_encrypt_key	src/headers/tomcrypt_pk.h	48;"	d
rsa_encrypt_key_ex	libtomcrypt/pk/rsa/rsa_encrypt_key.c	/^int rsa_encrypt_key_ex(const unsigned char *in, unsigned long inlen,$/;"	f
rsa_encrypt_key_ex	src/pk/rsa/rsa_encrypt_key.c	/^int rsa_encrypt_key_ex(const unsigned char *in,     unsigned long inlen,$/;"	f
rsa_export	libtomcrypt/pk/rsa/rsa_export.c	/^int rsa_export(unsigned char *out, unsigned long *outlen, int type,$/;"	f
rsa_export	src/pk/rsa/rsa_export.c	/^int rsa_export(unsigned char *out, unsigned long *outlen, int type, rsa_key *key)$/;"	f
rsa_exptmod	libtomcrypt/pk/rsa/rsa_exptmod.c	/^int rsa_exptmod(const unsigned char *in, unsigned long inlen,$/;"	f
rsa_exptmod	src/pk/rsa/rsa_exptmod.c	/^int rsa_exptmod(const unsigned char *in,   unsigned long inlen,$/;"	f
rsa_free	libtomcrypt/pk/rsa/rsa_free.c	/^void rsa_free(rsa_key * key)$/;"	f
rsa_free	src/pk/rsa/rsa_free.c	/^void rsa_free(rsa_key *key)$/;"	f
rsa_import	libtomcrypt/pk/rsa/rsa_import.c	/^int rsa_import(const unsigned char *in, unsigned long inlen, rsa_key * key)$/;"	f
rsa_import	src/pk/rsa/rsa_import.c	/^int rsa_import(const unsigned char *in, unsigned long inlen, rsa_key *key)$/;"	f
rsa_key	libtomcrypt/headers/tomcrypt_pk.h	/^} rsa_key;$/;"	t	typeref:struct:Rsa_key
rsa_key	src/headers/tomcrypt_math.h	/^   typedef void rsa_key;$/;"	t
rsa_key	src/headers/tomcrypt_pk.h	/^} rsa_key;$/;"	t	typeref:struct:Rsa_key
rsa_keygen	src/headers/tomcrypt_math.h	/^    int (*rsa_keygen)(prng_state *prng, int wprng, int size, long e, rsa_key *key);$/;"	m	struct:__anon52
rsa_make_key	libtomcrypt/pk/rsa/rsa_make_key.c	/^int rsa_make_key(int size, long e, rsa_key * key)$/;"	f
rsa_make_key	src/pk/rsa/rsa_make_key.c	/^int rsa_make_key(prng_state *prng, int wprng, int size, long e, rsa_key *key)$/;"	f
rsa_me	src/headers/tomcrypt_math.h	/^   int (*rsa_me)(const unsigned char *in,   unsigned long inlen,$/;"	m	struct:__anon52
rsa_sign_hash	libtomcrypt/headers/tomcrypt_pk.h	68;"	d
rsa_sign_hash	src/headers/tomcrypt_pk.h	54;"	d
rsa_sign_hash_ex	libtomcrypt/pk/rsa/rsa_sign_hash.c	/^int rsa_sign_hash_ex(const unsigned char *in, unsigned long inlen,$/;"	f
rsa_sign_hash_ex	src/pk/rsa/rsa_sign_hash.c	/^int rsa_sign_hash_ex(const unsigned char *in,       unsigned long  inlen,$/;"	f
rsa_sign_raw	libtomcrypt/pk/rsa/rsa_sign_hash.c	/^int rsa_sign_raw(const unsigned char *in, unsigned long inlen,$/;"	f
rsa_verify_hash	libtomcrypt/headers/tomcrypt_pk.h	75;"	d
rsa_verify_hash	src/headers/tomcrypt_pk.h	57;"	d
rsa_verify_hash_ex	libtomcrypt/pk/rsa/rsa_verify_hash.c	/^int rsa_verify_hash_ex(const unsigned char *sig, unsigned long siglen,$/;"	f
rsa_verify_hash_ex	src/pk/rsa/rsa_verify_hash.c	/^int rsa_verify_hash_ex(const unsigned char *sig,      unsigned long siglen,$/;"	f
s	libtomcrypt/headers/cryptodev_int.h	/^		struct crypto_ablkcipher *s;$/;"	m	struct:cipher_data::__anon2	typeref:struct:cipher_data::__anon2::crypto_ablkcipher
s	libtomcrypt/headers/cryptodev_int.h	/^		struct crypto_ahash *s;$/;"	m	struct:hash_data::__anon3	typeref:struct:hash_data::__anon3::crypto_ahash
s128_diffuse	src/prngs/sober128.c	/^static void s128_diffuse(struct sober128_prng *c)$/;"	f	file:
s128_genkonst	src/prngs/sober128.c	/^static void s128_genkonst(struct sober128_prng *c)$/;"	f	file:
s128_reloadstate	src/prngs/sober128.c	/^static void s128_reloadstate(struct sober128_prng *c)$/;"	f	file:
s128_savestate	src/prngs/sober128.c	/^static void s128_savestate(struct sober128_prng *c)$/;"	f	file:
s_is_power_of_two	libtommath/bn_mp_div_d.c	/^static int s_is_power_of_two(mp_digit b, int *p)$/;"	f	file:
s_mp_add	libtommath/bn_s_mp_add.c	/^int s_mp_add(mp_int * a, mp_int * b, mp_int * c)$/;"	f
s_mp_exptmod	libtommath/bn_s_mp_exptmod.c	/^int s_mp_exptmod(mp_int * G, mp_int * X, mp_int * P, mp_int * Y, int redmode)$/;"	f
s_mp_mul	libtommath/tommath.h	536;"	d
s_mp_mul_digs	libtommath/bn_s_mp_mul_digs.c	/^int s_mp_mul_digs(mp_int * a, mp_int * b, mp_int * c, int digs)$/;"	f
s_mp_mul_high_digs	libtommath/bn_s_mp_mul_high_digs.c	/^int s_mp_mul_high_digs(mp_int * a, mp_int * b, mp_int * c, int digs)$/;"	f
s_mp_sqr	libtommath/bn_s_mp_sqr.c	/^int s_mp_sqr(mp_int * a, mp_int * b)$/;"	f
s_mp_sub	libtommath/bn_s_mp_sub.c	/^int s_mp_sub(mp_int * a, mp_int * b, mp_int * c)$/;"	f
s_ocb_done	src/encauth/ocb/s_ocb_done.c	/^int s_ocb_done(ocb_state *ocb, const unsigned char *pt, unsigned long ptlen,$/;"	f
safer	src/headers/tomcrypt_cipher.h	/^   struct safer_key safer;$/;"	m	union:Symmetric_key	typeref:struct:Symmetric_key::safer_key
safer_128_keysize	src/ciphers/safer/safer.c	/^int safer_128_keysize(int *keysize)$/;"	f
safer_64_keysize	src/ciphers/safer/safer.c	/^int safer_64_keysize(int *keysize)$/;"	f
safer_bias	src/ciphers/safer/saferp.c	/^static const unsigned char safer_bias[33][16] = {$/;"	v	file:
safer_block_t	src/headers/tomcrypt_cipher.h	/^typedef unsigned char safer_block_t[LTC_SAFER_BLOCK_LEN];$/;"	t
safer_done	src/ciphers/safer/safer.c	/^void safer_done(symmetric_key *skey)$/;"	f
safer_ebox	src/ciphers/safer/safer_tab.c	/^const unsigned char safer_ebox[256] = {$/;"	v
safer_ecb_decrypt	src/ciphers/safer/safer.c	/^int safer_ecb_decrypt(const unsigned char *block_in,$/;"	f
safer_ecb_encrypt	src/ciphers/safer/safer.c	/^int safer_ecb_encrypt(const unsigned char *block_in,$/;"	f
safer_k128_desc	src/ciphers/safer/safer.c	/^   safer_k128_desc = {$/;"	v	typeref:struct:
safer_k128_setup	src/ciphers/safer/safer.c	/^int safer_k128_setup(const unsigned char *key, int keylen, int numrounds, symmetric_key *skey)$/;"	f
safer_k64_desc	src/ciphers/safer/safer.c	/^   safer_k64_desc = {$/;"	v	typeref:struct:ltc_cipher_descriptor
safer_k64_setup	src/ciphers/safer/safer.c	/^int safer_k64_setup(const unsigned char *key, int keylen, int numrounds, symmetric_key *skey)$/;"	f
safer_k64_test	src/ciphers/safer/safer.c	/^int safer_k64_test(void)$/;"	f
safer_key	src/headers/tomcrypt_cipher.h	/^struct safer_key { safer_key_t key; };$/;"	s
safer_key_t	src/headers/tomcrypt_cipher.h	/^typedef unsigned char safer_key_t[LTC_SAFER_KEY_LEN];$/;"	t
safer_lbox	src/ciphers/safer/safer_tab.c	/^const unsigned char safer_lbox[256] = {$/;"	v
safer_sk128_desc	src/ciphers/safer/safer.c	/^   safer_sk128_desc = {$/;"	v	typeref:struct:
safer_sk128_setup	src/ciphers/safer/safer.c	/^int safer_sk128_setup(const unsigned char *key, int keylen, int numrounds, symmetric_key *skey)$/;"	f
safer_sk128_test	src/ciphers/safer/safer.c	/^int safer_sk128_test(void)$/;"	f
safer_sk64_desc	src/ciphers/safer/safer.c	/^   safer_sk64_desc = {$/;"	v	typeref:struct:
safer_sk64_setup	src/ciphers/safer/safer.c	/^int safer_sk64_setup(const unsigned char *key, int keylen, int numrounds, symmetric_key *skey)$/;"	f
safer_sk64_test	src/ciphers/safer/safer.c	/^int safer_sk64_test(void)$/;"	f
saferp	src/headers/tomcrypt_cipher.h	/^   struct saferp_key   saferp;$/;"	m	union:Symmetric_key	typeref:struct:Symmetric_key::saferp_key
saferp_desc	src/ciphers/safer/saferp.c	/^const struct ltc_cipher_descriptor saferp_desc =$/;"	v	typeref:struct:ltc_cipher_descriptor
saferp_done	src/ciphers/safer/saferp.c	/^void saferp_done(symmetric_key *skey)$/;"	f
saferp_ecb_decrypt	src/ciphers/safer/saferp.c	/^int saferp_ecb_decrypt(const unsigned char *ct, unsigned char *pt, symmetric_key *skey)$/;"	f
saferp_ecb_encrypt	src/ciphers/safer/saferp.c	/^int saferp_ecb_encrypt(const unsigned char *pt, unsigned char *ct, symmetric_key *skey)$/;"	f
saferp_key	src/headers/tomcrypt_cipher.h	/^struct saferp_key {$/;"	s
saferp_keysize	src/ciphers/safer/saferp.c	/^int saferp_keysize(int *keysize)$/;"	f
saferp_setup	src/ciphers/safer/saferp.c	/^int saferp_setup(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey)$/;"	f
saferp_test	src/ciphers/safer/saferp.c	/^int saferp_test(void)$/;"	f
salt_len	libtomcrypt/headers/ncr-pk.h	/^	int salt_len;		\/* for RSA-PSS signatures *\/$/;"	m	struct:ncr_pk_ctx
sbox	src/ciphers/skipjack.c	/^static const unsigned char sbox[256] = {$/;"	v	file:
sbox	src/ciphers/twofish/twofish.c	/^static ulong32 sbox(int i, ulong32 x)$/;"	f	file:
sbox	src/ciphers/twofish/twofish.c	73;"	d	file:
sbox0	src/hashes/whirl/whirltab.c	/^static const ulong64 sbox0[] = {$/;"	v	file:
sbox1	src/hashes/whirl/whirltab.c	/^static const ulong64 sbox1[] = {$/;"	v	file:
sbox2	src/hashes/whirl/whirltab.c	/^static const ulong64 sbox2[] = {$/;"	v	file:
sbox3	src/hashes/whirl/whirltab.c	/^static const ulong64 sbox3[] = {$/;"	v	file:
sbox4	src/hashes/whirl/whirltab.c	/^static const ulong64 sbox4[] = {$/;"	v	file:
sbox5	src/hashes/whirl/whirltab.c	/^static const ulong64 sbox5[] = {$/;"	v	file:
sbox6	src/hashes/whirl/whirltab.c	/^static const ulong64 sbox6[] = {$/;"	v	file:
sbox7	src/hashes/whirl/whirltab.c	/^static const ulong64 sbox7[] = {$/;"	v	file:
sbuf	src/headers/tomcrypt_prng.h	/^                 sbuf;           \/* partial word encryption buffer *\/$/;"	m	struct:sober128_prng
secret	libtomcrypt/headers/ncr-int.h	/^		} secret;$/;"	m	union:key_item_st::__anon17	typeref:struct:key_item_st::__anon17::__anon18
sem	include/ok_type.h	/^    struct semaphore sem;$/;"	m	struct:ok_dev	typeref:struct:ok_dev::semaphore
ses	libtomcrypt/headers/ncr.h	/^	ncr_session_t ses;$/;"	m	struct:ncr_session_final
ses	libtomcrypt/headers/ncr.h	/^	ncr_session_t ses;$/;"	m	struct:ncr_session_update
session_idr	libtomcrypt/headers/ncr-int.h	/^	struct idr session_idr;$/;"	m	struct:ncr_lists	typeref:struct:ncr_lists::idr
session_idr_mutex	libtomcrypt/headers/ncr-int.h	/^	struct mutex session_idr_mutex;$/;"	m	struct:ncr_lists	typeref:struct:ncr_lists::mutex
set	src/headers/tomcrypt_prng.h	/^                 set;            \/* did we call add_entropy to set key? *\/$/;"	m	struct:sober128_prng
set_int	src/headers/tomcrypt_math.h	/^   int (*set_int)(void *a, unsigned long n);$/;"	m	struct:__anon52
set_int	src/math/gmp_desc.c	/^static int set_int(void *a, unsigned long b)$/;"	f	file:
set_int	src/math/ltm_desc.c	/^static int set_int(void *a, unsigned long b)$/;"	f	file:
set_int	src/math/tfm_desc.c	/^static int set_int(void *a, unsigned long b)$/;"	f	file:
setbit	libtomcrypt/pk/asn1/der/bit/der_decode_bit_string.c	21;"	d	file:
setup	src/ciphers/multi2.c	/^static void setup(ulong32 *dk, ulong32 *k, ulong32 *uk)$/;"	f	file:
setup	src/headers/tomcrypt_cipher.h	/^   int  (*setup)(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey);$/;"	m	struct:ltc_cipher_descriptor
setup_mix	src/ciphers/aes/aes.c	/^static ulong32 setup_mix(ulong32 temp)$/;"	f	file:
setup_mix2	src/ciphers/aes/aes.c	/^static ulong32 setup_mix2(ulong32 temp)$/;"	f	file:
sha1	src/headers/tomcrypt_hash.h	/^    struct sha1_state   sha1;$/;"	m	union:Hash_state	typeref:struct:Hash_state::sha1_state
sha1_compress	src/hashes/sha1.c	/^static int sha1_compress(hash_state *md, unsigned char *buf)$/;"	f	file:
sha1_desc	src/hashes/sha1.c	/^const struct ltc_hash_descriptor sha1_desc =$/;"	v	typeref:struct:ltc_hash_descriptor
sha1_done	src/hashes/sha1.c	/^int sha1_done(hash_state * md, unsigned char *out)$/;"	f
sha1_init	src/hashes/sha1.c	/^int sha1_init(hash_state * md)$/;"	f
sha1_state	src/headers/tomcrypt_hash.h	/^struct sha1_state {$/;"	s
sha1_test	src/hashes/sha1.c	/^int  sha1_test(void)$/;"	f
sha224_desc	src/hashes/sha2/sha224.c	/^const struct ltc_hash_descriptor sha224_desc =$/;"	v	typeref:struct:ltc_hash_descriptor
sha224_done	src/hashes/sha2/sha224.c	/^int sha224_done(hash_state * md, unsigned char *out)$/;"	f
sha224_init	src/hashes/sha2/sha224.c	/^int sha224_init(hash_state * md)$/;"	f
sha224_process	src/headers/tomcrypt_hash.h	242;"	d
sha224_test	src/hashes/sha2/sha224.c	/^int  sha224_test(void)$/;"	f
sha256	src/headers/tomcrypt_hash.h	/^    struct sha256_state sha256;$/;"	m	union:Hash_state	typeref:struct:Hash_state::sha256_state
sha256_compress	src/hashes/sha2/sha256.c	/^static int sha256_compress(hash_state * md, unsigned char *buf)$/;"	f	file:
sha256_desc	src/hashes/sha2/sha256.c	/^const struct ltc_hash_descriptor sha256_desc =$/;"	v	typeref:struct:ltc_hash_descriptor
sha256_done	src/hashes/sha2/sha256.c	/^int sha256_done(hash_state * md, unsigned char *out)$/;"	f
sha256_init	src/hashes/sha2/sha256.c	/^int sha256_init(hash_state * md)$/;"	f
sha256_state	src/headers/tomcrypt_hash.h	/^struct sha256_state {$/;"	s
sha256_test	src/hashes/sha2/sha256.c	/^int  sha256_test(void)$/;"	f
sha384_desc	src/hashes/sha2/sha384.c	/^const struct ltc_hash_descriptor sha384_desc =$/;"	v	typeref:struct:ltc_hash_descriptor
sha384_done	src/hashes/sha2/sha384.c	/^int sha384_done(hash_state * md, unsigned char *out)$/;"	f
sha384_init	src/hashes/sha2/sha384.c	/^int sha384_init(hash_state * md)$/;"	f
sha384_process	src/headers/tomcrypt_hash.h	224;"	d
sha384_test	src/hashes/sha2/sha384.c	/^int  sha384_test(void)$/;"	f
sha512	src/headers/tomcrypt_hash.h	/^    struct sha512_state sha512;$/;"	m	union:Hash_state	typeref:struct:Hash_state::sha512_state
sha512_compress	src/hashes/sha2/sha512.c	/^static int sha512_compress(hash_state * md, unsigned char *buf)$/;"	f	file:
sha512_desc	src/hashes/sha2/sha512.c	/^const struct ltc_hash_descriptor sha512_desc =$/;"	v	typeref:struct:ltc_hash_descriptor
sha512_done	src/hashes/sha2/sha512.c	/^int sha512_done(hash_state * md, unsigned char *out)$/;"	f
sha512_init	src/hashes/sha2/sha512.c	/^int sha512_init(hash_state * md)$/;"	f
sha512_state	src/headers/tomcrypt_hash.h	/^struct sha512_state {$/;"	s
sha512_test	src/hashes/sha2/sha512.c	/^int  sha512_test(void)$/;"	f
sign	libtommath/tommath.h	/^	int used, alloc, sign;$/;"	m	struct:__anon23
sign_hash	libtomcrypt/headers/ncr-pk.h	/^	const struct algo_properties_st *sign_hash;	\/* for verification *\/$/;"	m	struct:ncr_pk_ctx	typeref:struct:ncr_pk_ctx::algo_properties_st
size	include/ok_type.h	/^    unsigned long size;$/;"	m	struct:ok_dev
size	libtomcrypt/headers/ncr-int.h	/^			size_t size;$/;"	m	struct:key_item_st::__anon17::__anon18
size	libtomcrypt/headers/tomcrypt_pk.h	/^	unsigned long size;$/;"	m	struct:ltc_asn1_list_
size	libtomcrypt/pk/asn1/der/set/der_encode_setof.c	/^   unsigned long  size;$/;"	m	struct:edge	file:
size	src/headers/tomcrypt_pk.h	/^   int size;$/;"	m	struct:__anon39
size	src/headers/tomcrypt_pk.h	/^   unsigned long size;$/;"	m	struct:ltc_asn1_list_
size	src/pk/asn1/der/set/der_encode_setof.c	/^   unsigned long  size;$/;"	m	struct:edge	file:
sizes	libtommath/bn_mp_prime_rabin_miller_trials.c	/^} sizes[] = {$/;"	v	typeref:struct:__anon24	file:
skey	src/headers/tomcrypt_prng.h	/^    symmetric_key skey;$/;"	m	struct:fortuna_prng
skipjack	src/headers/tomcrypt_cipher.h	/^   struct skipjack_key skipjack;$/;"	m	union:Symmetric_key	typeref:struct:Symmetric_key::skipjack_key
skipjack_desc	src/ciphers/skipjack.c	/^const struct ltc_cipher_descriptor skipjack_desc =$/;"	v	typeref:struct:ltc_cipher_descriptor
skipjack_done	src/ciphers/skipjack.c	/^void skipjack_done(symmetric_key *skey)$/;"	f
skipjack_ecb_decrypt	src/ciphers/skipjack.c	/^int skipjack_ecb_decrypt(const unsigned char *ct, unsigned char *pt, symmetric_key *skey)$/;"	f
skipjack_ecb_encrypt	src/ciphers/skipjack.c	/^int skipjack_ecb_encrypt(const unsigned char *pt, unsigned char *ct, symmetric_key *skey)$/;"	f
skipjack_key	src/headers/tomcrypt_cipher.h	/^struct skipjack_key {$/;"	s
skipjack_keysize	src/ciphers/skipjack.c	/^int skipjack_keysize(int *keysize)$/;"	f
skipjack_setup	src/ciphers/skipjack.c	/^int skipjack_setup(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey)$/;"	f
skipjack_test	src/ciphers/skipjack.c	/^int skipjack_test(void)$/;"	f
sober128	src/headers/tomcrypt_prng.h	/^    struct sober128_prng  sober128;$/;"	m	union:Prng_state	typeref:struct:Prng_state::sober128_prng
sober128_add_entropy	src/prngs/sober128.c	/^int sober128_add_entropy(const unsigned char *in, unsigned long inlen, prng_state *prng)$/;"	f
sober128_desc	src/prngs/sober128.c	/^const struct ltc_prng_descriptor sober128_desc = $/;"	v	typeref:struct:ltc_prng_descriptor
sober128_done	src/prngs/sober128.c	/^int sober128_done(prng_state *prng)$/;"	f
sober128_export	src/prngs/sober128.c	/^int sober128_export(unsigned char *out, unsigned long *outlen, prng_state *prng)$/;"	f
sober128_import	src/prngs/sober128.c	/^int sober128_import(const unsigned char *in, unsigned long inlen, prng_state *prng)$/;"	f
sober128_prng	src/headers/tomcrypt_prng.h	/^struct sober128_prng {$/;"	s
sober128_read	src/prngs/sober128.c	/^unsigned long sober128_read(unsigned char *out, unsigned long outlen, prng_state *prng)$/;"	f
sober128_ready	src/prngs/sober128.c	/^int sober128_ready(prng_state *prng)$/;"	f
sober128_start	src/prngs/sober128.c	/^int sober128_start(prng_state *prng)$/;"	f
sober128_test	src/prngs/sober128.c	/^int sober128_test(void)$/;"	f
source_key	libtomcrypt/headers/ncr.h	/^	ncr_key_t source_key;$/;"	m	struct:ncr_key_wrap
sprng_add_entropy	src/prngs/sprng.c	/^int sprng_add_entropy(const unsigned char *in, unsigned long inlen, prng_state *prng)$/;"	f
sprng_desc	src/prngs/sprng.c	/^const struct ltc_prng_descriptor sprng_desc =$/;"	v	typeref:struct:ltc_prng_descriptor
sprng_done	src/prngs/sprng.c	/^int sprng_done(prng_state *prng)$/;"	f
sprng_export	src/prngs/sprng.c	/^int sprng_export(unsigned char *out, unsigned long *outlen, prng_state *prng)$/;"	f
sprng_import	src/prngs/sprng.c	/^int sprng_import(const unsigned char *in, unsigned long inlen, prng_state *prng)$/;"	f
sprng_read	src/prngs/sprng.c	/^unsigned long sprng_read(unsigned char *out, unsigned long outlen, prng_state *prng)$/;"	f
sprng_ready	src/prngs/sprng.c	/^int sprng_ready(prng_state *prng)$/;"	f
sprng_start	src/prngs/sprng.c	/^int sprng_start(prng_state *prng)$/;"	f
sprng_test	src/prngs/sprng.c	/^int sprng_test(void)$/;"	f
sqr	src/headers/tomcrypt_math.h	/^   int (*sqr)(void *a, void *b);$/;"	m	struct:__anon52
sqr	src/math/gmp_desc.c	/^static int sqr(void *a, void *b)$/;"	f	file:
sqr	src/math/ltm_desc.c	/^static int sqr(void *a, void *b)$/;"	f	file:
sqr	src/math/tfm_desc.c	/^static int sqr(void *a, void *b)$/;"	f	file:
sqrmod	src/headers/tomcrypt_math.h	/^   int (*sqrmod)(void *a, void *b, void *c);$/;"	m	struct:__anon52
sqrmod	src/math/gmp_desc.c	/^static int sqrmod(void *a, void *b, void *c)$/;"	f	file:
sqrmod	src/math/ltm_desc.c	/^static int sqrmod(void *a, void *b, void *c)$/;"	f	file:
sqrmod	src/math/tfm_desc.c	/^static int sqrmod(void *a, void *b, void *c)$/;"	f	file:
ss	libtomcrypt/headers/tomcrypt_pk.h	/^	 ss,			\/* second *\/$/;"	m	struct:__anon15
ss	src/headers/tomcrypt_pk.h	/^            ss, \/* second *\/$/;"	m	struct:__anon44
stab	src/ciphers/rc5.c	/^static const ulong32 stab[50] = {$/;"	v	file:
stab	src/ciphers/rc6.c	/^static const ulong32 stab[44] = {$/;"	v	file:
start	libtomcrypt/headers/tomcrypt_prng.h	/^	int (*start) (prng_state * prng);$/;"	m	struct:ltc_prng_descriptor
start	libtomcrypt/pk/asn1/der/set/der_encode_setof.c	/^   unsigned char *start;$/;"	m	struct:edge	file:
start	src/headers/tomcrypt_cipher.h	/^      unsigned char S[32], start;$/;"	m	struct:twofish_key
start	src/headers/tomcrypt_prng.h	/^    int (*start)(prng_state *prng);$/;"	m	struct:ltc_prng_descriptor
start	src/pk/asn1/der/set/der_encode_setof.c	/^   unsigned char *start;$/;"	m	struct:edge	file:
state	src/headers/tomcrypt_hash.h	/^    ulong32 curlen, state[10];$/;"	m	struct:rmd320_state
state	src/headers/tomcrypt_hash.h	/^    ulong32 curlen, state[4];$/;"	m	struct:rmd128_state
state	src/headers/tomcrypt_hash.h	/^    ulong32 curlen, state[5];$/;"	m	struct:rmd160_state
state	src/headers/tomcrypt_hash.h	/^    ulong32 curlen, state[8];$/;"	m	struct:rmd256_state
state	src/headers/tomcrypt_hash.h	/^    ulong32 state[4], curlen;$/;"	m	struct:md4_state
state	src/headers/tomcrypt_hash.h	/^    ulong32 state[4], curlen;$/;"	m	struct:md5_state
state	src/headers/tomcrypt_hash.h	/^    ulong32 state[5], curlen;$/;"	m	struct:sha1_state
state	src/headers/tomcrypt_hash.h	/^    ulong32 state[8], curlen;$/;"	m	struct:sha256_state
state	src/headers/tomcrypt_hash.h	/^    ulong64  length, state[8];$/;"	m	struct:sha512_state
state	src/headers/tomcrypt_hash.h	/^    ulong64 length, state[8];$/;"	m	struct:whirlpool_state
state	src/headers/tomcrypt_hash.h	/^    ulong64 state[3], length;$/;"	m	struct:tiger_state
state	src/headers/tomcrypt_hash.h	/^    unsigned char state[MAXBLOCKSIZE], buf[MAXBLOCKSIZE];$/;"	m	struct:chc_state
state	src/headers/tomcrypt_mac.h	/^    unsigned char state[16];$/;"	m	struct:pelican_state
sub	src/headers/tomcrypt_math.h	/^   int (*sub)(void *a, void *b, void *c);$/;"	m	struct:__anon52
sub	src/math/gmp_desc.c	/^static int sub(void *a, void *b, void *c)$/;"	f	file:
sub	src/math/ltm_desc.c	/^static int sub(void *a, void *b, void *c)$/;"	f	file:
sub	src/math/tfm_desc.c	/^static int sub(void *a, void *b, void *c)$/;"	f	file:
subi	src/headers/tomcrypt_math.h	/^   int (*subi)(void *a, unsigned long b, void *c);$/;"	m	struct:__anon52
subi	src/math/gmp_desc.c	/^static int subi(void *a, unsigned long b, void *c)$/;"	f	file:
subi	src/math/ltm_desc.c	/^static int subi(void *a, unsigned long b, void *c)$/;"	f	file:
subi	src/math/tfm_desc.c	/^static int subi(void *a, unsigned long b, void *c)$/;"	f	file:
symmetric_CBC	src/headers/tomcrypt_cipher.h	/^} symmetric_CBC;$/;"	t	typeref:struct:__anon33
symmetric_CFB	src/headers/tomcrypt_cipher.h	/^} symmetric_CFB;$/;"	t	typeref:struct:__anon31
symmetric_CTR	src/headers/tomcrypt_cipher.h	/^} symmetric_CTR;$/;"	t	typeref:struct:__anon34
symmetric_ECB	src/headers/tomcrypt_cipher.h	/^} symmetric_ECB;$/;"	t	typeref:struct:__anon30
symmetric_F8	src/headers/tomcrypt_cipher.h	/^} symmetric_F8;$/;"	t	typeref:struct:__anon36
symmetric_LRW	src/headers/tomcrypt_cipher.h	/^} symmetric_LRW;$/;"	t	typeref:struct:__anon35
symmetric_OFB	src/headers/tomcrypt_cipher.h	/^} symmetric_OFB;$/;"	t	typeref:struct:__anon32
symmetric_key	src/headers/tomcrypt_cipher.h	/^} symmetric_key;$/;"	t	typeref:union:Symmetric_key
symmetric_xts	src/headers/tomcrypt_cipher.h	/^} symmetric_xts;$/;"	t	typeref:struct:__anon37
t	libtommath/bn_mp_prime_rabin_miller_trials.c	/^	int k, t;$/;"	m	struct:__anon24	file:
t1	src/hashes/tiger.c	39;"	d	file:
t2	src/hashes/tiger.c	40;"	d	file:
t3	src/hashes/tiger.c	41;"	d	file:
t4	src/hashes/tiger.c	42;"	d	file:
table	src/hashes/tiger.c	/^static const ulong64 table[4*256] = {$/;"	v	file:
terma	src/math/fp/ltc_ecc_fp_mulmod.c	/^   int ham, terma, termb;$/;"	m	struct:__anon28	file:
termb	src/math/fp/ltc_ecc_fp_mulmod.c	/^   int ham, terma, termb;$/;"	m	struct:__anon28	file:
test	libtomcrypt/headers/tomcrypt_prng.h	/^	int (*test) (void);$/;"	m	struct:ltc_prng_descriptor
test	ok_file.c	/^static void test()$/;"	f	file:
test	src/headers/tomcrypt_cipher.h	/^   int (*test)(void);$/;"	m	struct:ltc_cipher_descriptor
test	src/headers/tomcrypt_hash.h	/^    int (*test)(void);$/;"	m	struct:ltc_hash_descriptor
test	src/headers/tomcrypt_prng.h	/^    int (*test)(void);$/;"	m	struct:ltc_prng_descriptor
tfm_code	src/math/tfm_desc.c	/^    int tfm_code, ltc_code;$/;"	m	struct:__anon26	file:
tfm_desc	src/math/tfm_desc.c	/^const ltc_math_descriptor tfm_desc = {$/;"	v
tfm_ecc_projective_add_point	src/math/tfm_desc.c	/^static int tfm_ecc_projective_add_point(ecc_point *P, ecc_point *Q, ecc_point *R, void *modulus, void *Mp)$/;"	f	file:
tfm_ecc_projective_dbl_point	src/math/tfm_desc.c	/^static int tfm_ecc_projective_dbl_point(ecc_point *P, ecc_point *R, void *modulus, void *Mp)$/;"	f	file:
tfm_to_ltc_codes	src/math/tfm_desc.c	/^} tfm_to_ltc_codes[] = {$/;"	v	typeref:struct:__anon26	file:
tfm_to_ltc_error	src/math/tfm_desc.c	/^static int tfm_to_ltc_error(int err)$/;"	f	file:
theta_pi_gamma	src/hashes/whirl/whirl.c	46;"	d	file:
tiger	src/headers/tomcrypt_hash.h	/^    struct tiger_state  tiger;$/;"	m	union:Hash_state	typeref:struct:Hash_state::tiger_state
tiger_compress	src/hashes/tiger.c	/^static int tiger_compress(hash_state *md, unsigned char *buf)$/;"	f	file:
tiger_desc	src/hashes/tiger.c	/^const struct ltc_hash_descriptor tiger_desc =$/;"	v	typeref:struct:ltc_hash_descriptor
tiger_done	src/hashes/tiger.c	/^int tiger_done(hash_state * md, unsigned char *out)$/;"	f
tiger_init	src/hashes/tiger.c	/^int tiger_init(hash_state *md)$/;"	f
tiger_round	src/hashes/tiger.c	/^INLINE static void tiger_round(ulong64 *a, ulong64 *b, ulong64 *c, ulong64 x, int mul)$/;"	f	file:
tiger_state	src/headers/tomcrypt_hash.h	/^struct tiger_state {$/;"	s
tiger_test	src/hashes/tiger.c	/^int  tiger_test(void)$/;"	f
totlen	src/headers/tomcrypt_mac.h	/^   ulong64             totlen,       \/* 64-bit counter used for IV and AAD *\/$/;"	m	struct:__anon49
totrot	src/ciphers/des.c	/^static const unsigned char totrot[16] = {$/;"	v	file:
tweak	src/headers/tomcrypt_cipher.h	/^                      tweak[16],$/;"	m	struct:__anon35
tweak_crypt	src/modes/xts/xts_encrypt.c	/^static int tweak_crypt(const unsigned char *P, unsigned char *C, unsigned char *T, symmetric_xts *xts)$/;"	f	file:
tweak_uncrypt	src/modes/xts/xts_decrypt.c	/^static int tweak_uncrypt(const unsigned char *C, unsigned char *P, unsigned char *T, symmetric_xts *xts)$/;"	f	file:
twoexpt	src/headers/tomcrypt_math.h	/^   int (*twoexpt)(void *a , int n);$/;"	m	struct:__anon52
twoexpt	src/math/gmp_desc.c	/^static int twoexpt(void *a, int n)$/;"	f	file:
twoexpt	src/math/ltm_desc.c	/^static int twoexpt(void *a, int n)$/;"	f	file:
twoexpt	src/math/tfm_desc.c	/^static int twoexpt(void *a, int n)$/;"	f	file:
twofish	src/headers/tomcrypt_cipher.h	/^   struct twofish_key  twofish;$/;"	m	union:Symmetric_key	typeref:struct:Symmetric_key::twofish_key
twofish_desc	src/ciphers/twofish/twofish.c	/^const struct ltc_cipher_descriptor twofish_desc =$/;"	v	typeref:struct:ltc_cipher_descriptor
twofish_done	src/ciphers/twofish/twofish.c	/^void twofish_done(symmetric_key *skey)$/;"	f
twofish_ecb_decrypt	src/ciphers/twofish/twofish.c	/^int twofish_ecb_decrypt(const unsigned char *ct, unsigned char *pt, symmetric_key *skey)$/;"	f
twofish_ecb_encrypt	src/ciphers/twofish/twofish.c	/^int twofish_ecb_encrypt(const unsigned char *pt, unsigned char *ct, symmetric_key *skey)$/;"	f
twofish_key	src/headers/tomcrypt_cipher.h	/^   struct twofish_key {$/;"	s
twofish_keysize	src/ciphers/twofish/twofish.c	/^int twofish_keysize(int *keysize)$/;"	f
twofish_setup	src/ciphers/twofish/twofish.c	/^int twofish_setup(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey)$/;"	f
twofish_test	src/ciphers/twofish/twofish.c	/^int twofish_test(void)$/;"	f
type	libtomcrypt/headers/ncr-dh.h	/^	int type;		\/* PK_PRIVATE or PK_PUBLIC *\/$/;"	m	struct:__anon1
type	libtomcrypt/headers/ncr-int.h	/^	ncr_key_type_t type;$/;"	m	struct:key_item_st
type	libtomcrypt/headers/ncr-pk.h	/^	int type;		\/* libtomcrypt type *\/$/;"	m	struct:ncr_pk_ctx
type	libtomcrypt/headers/tomcrypt_pk.h	/^	int type;$/;"	m	struct:Rsa_key
type	libtomcrypt/headers/tomcrypt_pk.h	/^	int type;$/;"	m	struct:__anon13
type	libtomcrypt/headers/tomcrypt_pk.h	/^	int type;$/;"	m	struct:ltc_asn1_list_
type	src/headers/tomcrypt_pk.h	/^    int type;$/;"	m	struct:KAT_key
type	src/headers/tomcrypt_pk.h	/^    int type;$/;"	m	struct:Rsa_key
type	src/headers/tomcrypt_pk.h	/^    int type;$/;"	m	struct:__anon41
type	src/headers/tomcrypt_pk.h	/^   int           type;$/;"	m	struct:ltc_asn1_list_
type	src/headers/tomcrypt_pk.h	/^   int type; $/;"	m	struct:__anon42
u16	src/ciphers/kasumi.c	/^typedef unsigned u16;$/;"	t	file:
uid	libtomcrypt/headers/ncr-int.h	/^	uid_t uid;$/;"	m	struct:key_item_st
uk	src/headers/tomcrypt_cipher.h	/^    ulong32 uk[8];$/;"	m	struct:multi2_key
ulong32	libtomcrypt/headers/tomcrypt_macros.h	/^typedef unsigned long ulong32;$/;"	t
ulong32	libtomcrypt/headers/tomcrypt_macros.h	/^typedef unsigned ulong32;$/;"	t
ulong32	src/headers/tomcrypt_macros.h	/^   typedef unsigned long ulong32;$/;"	t
ulong32	src/headers/tomcrypt_macros.h	/^   typedef unsigned ulong32;$/;"	t
ulong64	libtomcrypt/headers/tomcrypt_macros.h	/^typedef unsigned __int64 ulong64;$/;"	t
ulong64	libtomcrypt/headers/tomcrypt_macros.h	/^typedef unsigned long long ulong64;$/;"	t
ulong64	src/headers/tomcrypt_macros.h	/^   typedef unsigned __int64 ulong64;$/;"	t
ulong64	src/headers/tomcrypt_macros.h	/^   typedef unsigned long long ulong64;$/;"	t
unregister_cipher	src/misc/crypt/crypt_unregister_cipher.c	/^int unregister_cipher(const struct ltc_cipher_descriptor *cipher)$/;"	f
unregister_hash	src/misc/crypt/crypt_unregister_hash.c	/^int unregister_hash(const struct ltc_hash_descriptor *hash)$/;"	f
unregister_prng	src/misc/crypt/crypt_unregister_prng.c	/^int unregister_prng(const struct ltc_prng_descriptor *prng)$/;"	f
unsigned_read	src/headers/tomcrypt_math.h	/^   int (*unsigned_read)(void *dst, unsigned char *src, unsigned long len);$/;"	m	struct:__anon52
unsigned_read	src/math/gmp_desc.c	/^static int unsigned_read(void *a, unsigned char *b, unsigned long len)$/;"	f	file:
unsigned_read	src/math/ltm_desc.c	/^static int unsigned_read(void *a, unsigned char *b, unsigned long len)$/;"	f	file:
unsigned_read	src/math/tfm_desc.c	/^static int unsigned_read(void *a, unsigned char *b, unsigned long len)$/;"	f	file:
unsigned_size	src/headers/tomcrypt_math.h	/^   unsigned long (*unsigned_size)(void *a);$/;"	m	struct:__anon52
unsigned_size	src/math/gmp_desc.c	/^static unsigned long unsigned_size(void *a)$/;"	f	file:
unsigned_size	src/math/ltm_desc.c	/^static unsigned long unsigned_size(void *a)$/;"	f	file:
unsigned_size	src/math/tfm_desc.c	/^static unsigned long unsigned_size(void *a)$/;"	f	file:
unsigned_write	src/headers/tomcrypt_math.h	/^   int (*unsigned_write)(void *src, unsigned char *dst);$/;"	m	struct:__anon52
unsigned_write	src/math/gmp_desc.c	/^static int unsigned_write(void *a, unsigned char *b)$/;"	f	file:
unsigned_write	src/math/ltm_desc.c	/^static int unsigned_write(void *a, unsigned char *b)$/;"	f	file:
unsigned_write	src/math/tfm_desc.c	/^static int unsigned_write(void *a, unsigned char *b)$/;"	f	file:
used	libtomcrypt/headers/tomcrypt_pk.h	/^	int used;$/;"	m	struct:ltc_asn1_list_
used	libtommath/tommath.h	/^	int used, alloc, sign;$/;"	m	struct:__anon23
used	src/headers/tomcrypt_pk.h	/^   int           used;$/;"	m	struct:ltc_asn1_list_
value	libtomcrypt/pk/asn1/der/ia5/der_length_ia5_string.c	/^   int code, value;$/;"	m	struct:__anon21	file:
value	libtomcrypt/pk/asn1/der/printable_string/der_length_printable_string.c	/^   int code, value;$/;"	m	struct:__anon22	file:
value	src/pk/asn1/der/ia5/der_length_ia5_string.c	/^   int code, value;$/;"	m	struct:__anon56	file:
value	src/pk/asn1/der/printable_string/der_length_printable_string.c	/^   int code, value;$/;"	m	struct:__anon57	file:
wd	src/headers/tomcrypt_prng.h	/^                  wd;            $/;"	m	struct:fortuna_prng
whirlpool	src/headers/tomcrypt_hash.h	/^    struct whirlpool_state whirlpool;$/;"	m	union:Hash_state	typeref:struct:Hash_state::whirlpool_state
whirlpool_compress	src/hashes/whirl/whirl.c	/^static int whirlpool_compress(hash_state *md, unsigned char *buf)$/;"	f	file:
whirlpool_desc	src/hashes/whirl/whirl.c	/^const struct ltc_hash_descriptor whirlpool_desc =$/;"	v	typeref:struct:ltc_hash_descriptor
whirlpool_done	src/hashes/whirl/whirl.c	/^int whirlpool_done(hash_state * md, unsigned char *out)$/;"	f
whirlpool_init	src/hashes/whirl/whirl.c	/^int whirlpool_init(hash_state * md)$/;"	f
whirlpool_state	src/headers/tomcrypt_hash.h	/^struct whirlpool_state {$/;"	s
whirlpool_test	src/hashes/whirl/whirl.c	/^int  whirlpool_test(void)$/;"	f
word_div_int	libtommath/tommath.h	82;"	d
word_div_int	libtommath/tommath.h	99;"	d
wrapping_key	libtomcrypt/headers/ncr.h	/^	ncr_key_t wrapping_key;$/;"	m	struct:ncr_key_unwrap
wrapping_key	libtomcrypt/headers/ncr.h	/^	ncr_key_t wrapping_key;$/;"	m	struct:ncr_key_wrap
write_radix	src/headers/tomcrypt_math.h	/^   int (*write_radix)(void *a, char *str, int radix);$/;"	m	struct:__anon52
write_radix	src/math/gmp_desc.c	/^static int write_radix(void *a, char *b, int radix)$/;"	f	file:
write_radix	src/math/ltm_desc.c	/^static int write_radix(void *a, char *b, int radix)$/;"	f	file:
write_radix	src/math/tfm_desc.c	/^static int write_radix(void *a, char *b, int radix)$/;"	f	file:
writer	libtomcrypt/headers/ncr-int.h	/^	atomic_t writer;$/;"	m	struct:key_item_st
x	libtomcrypt/headers/ncr-dh.h	/^	mp_int x;		\/* private *\/$/;"	m	struct:__anon1
x	libtomcrypt/headers/tomcrypt_pk.h	/^	mp_int x;$/;"	m	struct:__anon13
x	src/headers/tomcrypt_pk.h	/^    void *x;$/;"	m	struct:__anon40
x	src/headers/tomcrypt_pk.h	/^   void *x;$/;"	m	struct:__anon42
x	src/headers/tomcrypt_prng.h	/^    int x, y;$/;"	m	struct:rc4_prng
xcbc_done	src/mac/xcbc/xcbc_done.c	/^int xcbc_done(xcbc_state *xcbc, unsigned char *out, unsigned long *outlen)$/;"	f
xcbc_file	src/mac/xcbc/xcbc_file.c	/^int xcbc_file(int cipher, $/;"	f
xcbc_init	src/mac/xcbc/xcbc_init.c	/^int xcbc_init(xcbc_state *xcbc, int cipher, const unsigned char *key, unsigned long keylen)$/;"	f
xcbc_memory	src/headers/tomcrypt_cipher.h	/^   int (*xcbc_memory)($/;"	m	struct:ltc_cipher_descriptor
xcbc_memory	src/mac/xcbc/xcbc_memory.c	/^int xcbc_memory(int cipher, $/;"	f
xcbc_memory_multi	src/mac/xcbc/xcbc_memory_multi.c	/^int xcbc_memory_multi(int cipher, $/;"	f
xcbc_process	src/mac/xcbc/xcbc_process.c	/^int xcbc_process(xcbc_state *xcbc, const unsigned char *in, unsigned long inlen)$/;"	f
xcbc_state	src/headers/tomcrypt_mac.h	/^} xcbc_state;$/;"	t	typeref:struct:__anon50
xcbc_test	src/mac/xcbc/xcbc_test.c	/^int xcbc_test(void)$/;"	f
xkey	src/headers/tomcrypt_cipher.h	/^struct rc2_key { unsigned xkey[64]; };$/;"	m	struct:rc2_key
xtea	src/headers/tomcrypt_cipher.h	/^   struct xtea_key     xtea;$/;"	m	union:Symmetric_key	typeref:struct:Symmetric_key::xtea_key
xtea_desc	src/ciphers/xtea.c	/^const struct ltc_cipher_descriptor xtea_desc =$/;"	v	typeref:struct:ltc_cipher_descriptor
xtea_done	src/ciphers/xtea.c	/^void xtea_done(symmetric_key *skey)$/;"	f
xtea_ecb_decrypt	src/ciphers/xtea.c	/^int xtea_ecb_decrypt(const unsigned char *ct, unsigned char *pt, symmetric_key *skey)$/;"	f
xtea_ecb_encrypt	src/ciphers/xtea.c	/^int xtea_ecb_encrypt(const unsigned char *pt, unsigned char *ct, symmetric_key *skey)$/;"	f
xtea_key	src/headers/tomcrypt_cipher.h	/^struct xtea_key {$/;"	s
xtea_keysize	src/ciphers/xtea.c	/^int xtea_keysize(int *keysize)$/;"	f
xtea_setup	src/ciphers/xtea.c	/^int xtea_setup(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey)$/;"	f
xtea_test	src/ciphers/xtea.c	/^int xtea_test(void)$/;"	f
xts_decrypt	src/modes/xts/xts_decrypt.c	/^*\/int xts_decrypt($/;"	f
xts_done	src/modes/xts/xts_done.c	/^void xts_done(symmetric_xts *xts)$/;"	f
xts_encrypt	src/modes/xts/xts_encrypt.c	/^int xts_encrypt($/;"	f
xts_mult_x	src/modes/xts/xts_mult_x.c	/^void xts_mult_x(unsigned char *I)$/;"	f
xts_start	src/modes/xts/xts_init.c	/^int xts_start(                int  cipher,$/;"	f
xts_test	src/modes/xts/xts_test.c	/^int xts_test(void)$/;"	f
y	libtomcrypt/headers/ncr-dh.h	/^	mp_int y;		\/* public: y=g^x *\/$/;"	m	struct:__anon1
y	libtomcrypt/headers/tomcrypt_pk.h	/^	mp_int y;$/;"	m	struct:__anon13
y	src/headers/tomcrypt_pk.h	/^    void *y;$/;"	m	struct:__anon40
y	src/headers/tomcrypt_pk.h	/^   void *y;$/;"	m	struct:__anon42
y	src/headers/tomcrypt_prng.h	/^    int x, y;$/;"	m	struct:rc4_prng
yarrow	src/headers/tomcrypt_prng.h	/^    struct yarrow_prng    yarrow;$/;"	m	union:Prng_state	typeref:struct:Prng_state::yarrow_prng
yarrow_add_entropy	src/prngs/yarrow.c	/^int yarrow_add_entropy(const unsigned char *in, unsigned long inlen, prng_state *prng)$/;"	f
yarrow_desc	src/prngs/yarrow.c	/^const struct ltc_prng_descriptor yarrow_desc =$/;"	v	typeref:struct:ltc_prng_descriptor
yarrow_done	src/prngs/yarrow.c	/^int yarrow_done(prng_state *prng)$/;"	f
yarrow_export	src/prngs/yarrow.c	/^int yarrow_export(unsigned char *out, unsigned long *outlen, prng_state *prng)$/;"	f
yarrow_import	src/prngs/yarrow.c	/^int yarrow_import(const unsigned char *in, unsigned long inlen, prng_state *prng)$/;"	f
yarrow_prng	src/headers/tomcrypt_prng.h	/^struct yarrow_prng {$/;"	s
yarrow_read	src/prngs/yarrow.c	/^unsigned long yarrow_read(unsigned char *out, unsigned long outlen, prng_state *prng)$/;"	f
yarrow_ready	src/prngs/yarrow.c	/^int yarrow_ready(prng_state *prng)$/;"	f
yarrow_start	src/prngs/yarrow.c	/^int yarrow_start(prng_state *prng)$/;"	f
yarrow_test	src/prngs/yarrow.c	/^int yarrow_test(void)$/;"	f
z	src/headers/tomcrypt_pk.h	/^    void *z;$/;"	m	struct:__anon40
zeromem	libtomcrypt/misc/zeromem.c	/^void zeromem(void *out, size_t outlen)$/;"	f
zeromem	src/misc/zeromem.c	/^void zeromem(void *out, size_t outlen)$/;"	f
